/*!CK:3780490453!*//*1453177156,*/

if (self.CavalryLogger) { CavalryLogger.start_js(["lHK7A"]); }

__d("BOFSellerLoggerEvent", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { ACTN_MERCHANT_SETTINGS_CREATED: "Actn_MerchantSettingsCreated", ACTN_COMMERCE_STORE_CREATED: "Actn_CommerceStoreCreated", ACTN_PRODUCT_GROUP_CREATED: "Actn_ProductGroupCreated", ACTN_PRODUCT_ITEM_CREATED: "Actn_ProductItemCreated", ACTN_STORE_COLLECTION_CREATED: "Actn_StoreCollectionCreated", ACTN_MERCHANT_SETTINGS_UPDATED: "Actn_MerchantSettingsUpdated", ACTN_COMMERCE_STORE_UPDATED: "Actn_CommerceStoreUpdated", ACTN_PRODUCT_GROUP_UPDATED: "Actn_ProductGroupUpdated", ACTN_PRODUCT_ITEM_UPDATED: "Actn_ProductItemUpdated", ACTN_STORE_COLLECTION_UPDATED: "Actn_StoreCollectionUpdated", ACTN_STORE_COLLECTION_UPDATE_ORDERS: "Actn_StoreCollectionUpdateOrders", ACTN_COMMERCE_STORE_DELETED: "Actn_CommerceStoreDeleted", ACTN_STORE_COLLECTION_DELETED: "Actn_StoreCollectionDeleted", ACTN_PRODUCT_ITEM_DELETED: "Actn_ProductItemDeleted", ACTN_PRODUCT_ITEM_FEATURED: "Actn_ProductItemFeatured", ACTN_PRODUCT_ITEM_UNFEATURED: "Actn_ProductItemUnfeatured", ACTN_OFFER_CREATE: "Actn_OfferCreate", ACTN_ORDER_CANCELED: "Actn_OrderCanceled", ACTN_ORDER_CONTACT_BUYER: "Actn_OrderContactBuyer", ACTN_ORDER_REFUNDED: "Actn_OrderRefunded", ACTN_ORDER_SHIP: "Actn_OrderShip", ACTN_ORDER_VIEW: "Actn_OrderView", IMP_CURRENCY_SELECTION: "Imp_CurrencySelection", ACTN_CANCEL_CURRENCY_SELECTION: "Actn_CancelCurrencySelection", ACTN_ADD_PRODUCT_CLICK: "Actn_AddProductClick", ACTN_EDIT_PRODUCT_CLICK: "Actn_EditProductClick", ACTN_CANCEL_ADD_PRODUCT: "Actn_CancelAddProduct", ACTN_CANCEL_EDIT_PRODUCT: "Actn_CancelEditProduct", ACTN_SETTINGS_DROPDOWN_CLICK: "Actn_SettingsDropdownClick", ACTN_SETTINGS_DROPDOWN_SHARE_CLICK: "Actn_SettingsDropdownShareClick", ACTN_SETTINGS_DROPDOWN_COPY_CLICK: "Actn_SettingsDropdownCopyClick", ACTN_STORE_SHARE_SHOP_CLICK: "Actn_StoreShareShopClick", IMP_PRIVATE_MESSAGE_SELECTION: "Imp_PrivateMessageSelection", ACTN_PRIVATE_MESSAGE_BACK_CLICK: "Actn_PrivateMessageBackClick", IMP_ONBOARDING_VIEW: "Imp_OnboardingView", ACTN_SAVE_ONBOARDING_VIEW: "Actn_SaveOnboardingView", IMP_SETTINGS_VIEW: "Imp_SettingsView", ACTN_UPDATE_SETTINGS: "Actn_UpdateSettings", IMP_FIRST_ORDER_BANNER: "Imp_FirstOrderBanner", IMP_FIRST_ORDER_MODAL: "Imp_FirstOrderModal", ACTN_NUX_SEEN: "Actn_NuxSeen", ACTN_CREATE_DEFERRED_STRIPE: "Actn_CreateDeferredStripe", ACTN_GO_TO_STRIPE: "Actn_GoToStripe", ACTN_RETURN_FROM_STRIPE: "Actn_ReturnFromStripe", ACTN_APPROVED_PRODUCT_ITEM_SHARED: "Actn_ApprovedProductItemShared", ACTN_STORE_CREATION_NOTIF_SENT: "Actn_StoreCreationNotifSent", ACTN_EDIT_PHOTO_CLICK: "Actn_EditPhotoClick", ACTN_PHOTO_EDITED: "Actn_PhotoEdited" }; }, null);
__d("BOFSellerLoggingSources", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { ADD_SECTION: "AddSection", FINISH_SETUP_BANNER: "FinishSetupBanner", PUBLISHING_TOOLS: "PublishingTools", QP: "QP", SHOP_TAB: "ShopTab", STRIPE_REDIRECT: "StripeRedirect" }; }, null);
__d("CommerceProductVariantType", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { SIZE: "Size", COLOR: "Color", MATERIAL: "Material", LENGTH: "Length", FIT: "Fit", WIDTH: "Width", SCENT: "Scent", FLAVOR: "Flavor", MODEL: "Model", FORMAT: "Format", PLATFORM: "Platform", EDITION: "Edition" }; }, null);
__d("CommerceSelfServeProductTaxCategories", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { NONE: 0, TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION_BAD: 4900000, TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION: 4.9e+07, TAX_ITEM_CODE_COMMERCE_CLOTHING: 53100000, TAX_ITEM_CODE_COMMERCE_SHOES: 53110000, TAX_ITEM_CODE_COMMERCE_LUGGAGE_BAGS: 53120000, TAX_ITME_CODE_COMMERCE_PERSONAL_CARE: 53130000, TAX_ITEM_CODE_COMMERCE_JEWELRY: 54100000, TAX_ITEM_CODE_COMMERCE_WATCHES: 54111500, TAX_ITEM_CODE_COMMERCE_OTHERS: -1 }; }, null);
__d("CommerceSelfServeSection", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { COMMERCE_INSIGHTS: "commerce_insights", FEATURED_PRODUCT_TOGGLE: "featured_product_toggle", INVENTORY: "inventory", PRODUCT_VISIBILITY: "product_visibility", SHIPPING_OPTIONS: "shipping_options", TAX_CATEGORY: "tax_category", TAX_TABLE: "tax_table", VARIANTS: "variants", MINIMUM_PRICE_ERROR: "minimum_price_error" }; }, null);
__d("CommerceSelfServeUI", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { MIN_SHIPPING_OPTIONS: 1, MAX_SHIPPING_OPTIONS: 5 }; }, null);
__d("CommerceUI", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { MAX_ITEMS_IN_QUANTITY_SELECTOR: 9, MAX_VARIANTS: 4 }; }, null);
__d("PagesManagerProductToolsConstants", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { MAX_FEATURED_ITEM_COUNT: 10 }; }, null);
__d("ProductItemFilterFieldsExternal", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { AGE_GROUP: "age_group", AVAILABILITY: "availability", BRAND: "brand", CAPABILITY: "capability", CATEGORY: "category", COLOR: "color", CONDITION: "condition", CURRENCY: "currency", CUSTOM_LABEL_0: "custom_label_0", CUSTOM_LABEL_1: "custom_label_1", CUSTOM_LABEL_2: "custom_label_2", CUSTOM_LABEL_3: "custom_label_3", CUSTOM_LABEL_4: "custom_label_4", GENDER: "gender", MATERIAL: "material", NAME: "name", PATTERN: "pattern", PRICE_AMOUNT: "price_amount", PRODUCT_EXPIRATION_TIME: "product_expiration_time", PRODUCT_FEED_ID: "product_feed_id", PRODUCT_ITEM_ID: "product_item_id", PRODUCT_GROUP_ID: "product_group_id", PRODUCT_TYPE: "product_type", RETAILER_ID: "retailer_id", RETAILER_PRODUCT_GROUP_ID: "retailer_product_group_id", SALE_PRICE_AMOUNT: "sale_price_amount", SIZE: "size" }; }, null);
__d("ProductVisibility", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { LEGACY_PUBLIC: "", STAGING: "staging", PUBLISHED: "published" }; }, null);
__d("XCommerceSelfServeParam", [], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = { EXPLANATION: "explanation", PAGE_ID: "page_id", AMOUNT: "amount", ADDRESS: "address", STREET_1: "street1", CITY: "city", STATE: "region", ZIP: "postalCode", ALERT_EMAIL: "alert_email", COLLECTION_NAME: "collection_name", CONTACT_EMAIL: "contact_email", STRIPE_DEFERRED_EMAIL: "stripe_deferred_email", SETTINGS_ID: "settings_id", TAX_NEXUS_LOCATIONS: "tax_nexus_locations", VISIBILITY: "visibility", COLLECTION_ID: "collection_id", CURRENCY_CODE: "currency_code", DEFAULT_SHIPPING_OPTIONS_JSON: "default_shipping_options_json", FEATURED_PRODUCT: "featured_product", INVENTORY: "inventory", PRODUCT_DESCRIPTION: "product_desc", PRODUCT_ID: "product_id", PRODUCT_PHOTO_IDS: "photo_ids", PRODUCT_PRICE: "product_price", PRODUCT_TITLE: "product_title", SHARE_TO_TIMELINE: "share_to_timeline", SHIPPING_OPTION_NAMES: "shipping_option_names", SHIPPING_OPTION_VALUES: "shipping_option_values", TAX_APPLIED_TO_SHIPPING_MAP: "tax_applied_to_shipping_map", TAX_CATEGORY: "tax_category", TAX_LOCATIONS: "tax_locations", TAX_PERCENT_MAP: "tax_percent_map", VARIANT_NAMES: "variant_names", VARIANT_INVENTORY: "variant_inventory_map", VARIANT_PRICE: "variant_price_map", VARIANT_DATA: "variant_serial_data_map", VARIANT_PRODUCT_ID: "variant_product_id_map" }; }, null);
__d('RichMediaEditorStore', ['FluxStore', 'InstantShoppingDocumentElementType', 'RichMediaEditorActionTypes', 'RichMediaEditorDispatcher', 'RichMediaButtonElement', 'RichMediaCarouselElement', 'RichMediaHeaderElement', 'RichMediaPhotoElement', 'RichMediaProductSetElement', 'RichMediaTextElement', 'RichMediaVideoElement', 'AdsCanvasEditorEnums', 'RichMediaDocumentThemeConstants', 'RichMediaElementTypeConstant'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) { if (c.__markCompiled) c.__markCompiled(); var v, w; 'use strict'; var x = s.SaveStateEnum, y = t.LIGHT, z = u.TYPE_NAMES; v = babelHelpers.inherits(aa, h); w = v && v.prototype; function aa() { w.constructor.call(this, k); this.$RichMediaEditorStore1 = ''; this.$RichMediaEditorStore2 = y; this.$RichMediaEditorStore3 = []; this.$RichMediaEditorStore4 = x.SAVED; this.$RichMediaEditorStore5 = false; this.$RichMediaEditorStore6 = false; this.$RichMediaEditorStore7 = false; this.$RichMediaEditorStore8 = false; this.$RichMediaEditorStore9 = -1; this.$RichMediaEditorStore10 = {}; this.$RichMediaEditorStore11 = false; } aa.prototype.__onDispatch = function (ba) { var ca = ba.data; switch (ba.type) { case j.SET_DOCUMENT_NAME: this.$RichMediaEditorStore1 = ca.name; this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore9 = -1; this.__emitChange(); break; case j.SET_DOCUMENT_THEME: this.$RichMediaEditorStore2 = ca.theme; this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore9 = -1; this.__emitChange(); break; case j.SET_DOCUMENT_EDIT_STATE: this.$RichMediaEditorStore4 = ca.editState; this.__emitChange(); break; case j.ADD_DOCUMENT_ELEMENT: if (ca.element.type === i.HEADER) { var da = this.$RichMediaEditorStore3; for (var ea = 0; ea < da.length; ++ea)da[ea] = da[ea].set('index', ea + 1); da.unshift(ca.element.set('index', 0)); this.$RichMediaEditorStore9 = 0; } else { this.$RichMediaEditorStore3.push(ca.element); this.$RichMediaEditorStore9 = ca.element.index; } this.$RichMediaEditorStore4 = x.UNSAVED; this.__emitChange(); break; case j.EDIT_DOCUMENT_ELEMENT: var fa = this.$RichMediaEditorStore3[ca.element.index]; if (fa != ca.element && fa.expanded === ca.element.expanded) this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore3[ca.element.index] = ca.element; this.$RichMediaEditorStore9 = ca.element.index; this.__emitChange(); break; case j.MOVE_ELEMENT_UP: if (ca.element.index > 0) { da = this.$RichMediaEditorStore3; var ga = ca.element.index, ha = da[ga].set('index', ga - 1), ia = da[ga - 1].set('index', ga); if (ia.type !== i.HEADER) { da[ga] = ia; da[ga - 1] = ha; } this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore9 = ga - 1; this.__emitChange(); } break; case j.MOVE_ELEMENT_DOWN: if (ca.element.index < this.$RichMediaEditorStore3.length - 1 && ca.element.type !== i.HEADER) { da = this.$RichMediaEditorStore3; ga = ca.element.index; ha = da[ga]; var ja = da[ga + 1]; da[ga] = ja.set('index', ga); da[ga + 1] = ha.set('index', ga + 1); this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore9 = ga + 1; this.__emitChange(); } break; case j.DELETE_ELEMENT: da = this.$RichMediaEditorStore3; ga = ca.element.index; da.splice(ga, 1); for (ea = ga; ea < da.length; ++ea)da[ea] = da[ea].set('index', ea); this.$RichMediaEditorStore4 = x.UNSAVED; this.$RichMediaEditorStore9 = ga > 0 ? ga - 1 : 0; this.__emitChange(); break; case j.CREATE_DEFAULT_DOCUMENT: this.$RichMediaEditorStore1 = 'New Document'; this.$RichMediaEditorStore3 = [n.createDefault(0), o.createDefault(1), l.createDefault(2)]; this.$RichMediaEditorStore4 = x.UNSAVED; this.__emitChange(); break; case j.SET_PREVIEW_FAILED: this.$RichMediaEditorStore5 = ca.previewFailed; this.__emitChange(); break; case j.SET_SENDING_PREVIEW: this.$RichMediaEditorStore7 = ca.sendingPreview; this.__emitChange(); break; case j.SET_SAVE_FAILED: this.$RichMediaEditorStore6 = ca.saveFailed; this.__emitChange(); break; case j.LOAD_DOCUMENT: if (ca.documentName) this.$RichMediaEditorStore1 = ca.documentName; if (ca.documentTheme) this.$RichMediaEditorStore2 = ca.documentTheme; if (ca.elementsPayload) this.$RichMediaEditorStore12(ca.elementsPayload); this.$RichMediaEditorStore4 = x.SAVED; this.__emitChange(); break; case j.SET_DOCUMENT_URL_DIALOG_SHOWN: this.$RichMediaEditorStore8 = ca.dialogShown; this.__emitChange(); break; case j.SELECT_ELEMENT_TO_ADD: var ka = ca.elementTypeName; if (ka in this.$RichMediaEditorStore10) { this.$RichMediaEditorStore10[ka]++; } else this.$RichMediaEditorStore10[ka] = 1; this.__emitChange(); break; case j.DESELECT_ELEMENT_TO_ADD: ka = ca.elementTypeName; if (ka in this.$RichMediaEditorStore10) { this.$RichMediaEditorStore10[ka]--; if (this.$RichMediaEditorStore10[ka] <= 0) delete this.$RichMediaEditorStore10[ka]; } this.__emitChange(); break; case j.SET_ADD_COMPONENT_DIALOG_SHOWN: this.$RichMediaEditorStore11 = ca.dialogShown; this.__emitChange(); break; case j.ADD_ELEMENTS_SELECTED: for (var la in z) { ka = z[la]; if (ka in this.$RichMediaEditorStore10 && this.$RichMediaEditorStore10[ka] > 0) { this.$RichMediaEditorStore13(ka); this.$RichMediaEditorStore4 = x.UNSAVED; } } this.$RichMediaEditorStore10 = {}; this.$RichMediaEditorStore11 = false; this.__emitChange(); break; } }; aa.prototype.getDocumentName = function () { return this.$RichMediaEditorStore1; }; aa.prototype.getDocumentTheme = function () { return this.$RichMediaEditorStore2; }; aa.prototype.getDocumentEditState = function () { return this.$RichMediaEditorStore4; }; aa.prototype.getDocumentElements = function () { return this.$RichMediaEditorStore3.slice(); }; aa.prototype.getPreviewFailed = function () { return this.$RichMediaEditorStore5; }; aa.prototype.getSendingPreview = function () { return this.$RichMediaEditorStore7; }; aa.prototype.getSaveFailed = function () { return this.$RichMediaEditorStore6; }; aa.prototype.getDocumentURLDialogShown = function () { return this.$RichMediaEditorStore8; }; aa.prototype.getCurrentEditingElementIndex = function () { return this.$RichMediaEditorStore9; }; aa.prototype.getSelectedElementsToAdd = function () { return babelHelpers._extends({}, this.$RichMediaEditorStore10); }; aa.prototype.getShowAddComponentDialog = function () { return this.$RichMediaEditorStore11; }; aa.prototype.getHasHeaderElement = function () { var ba = this.$RichMediaEditorStore3.filter(function (ca) { return ca.type === i.HEADER; }); return ba.length !== 0; }; aa.prototype.$RichMediaEditorStore13 = function (ba) { var ca = this.$RichMediaEditorStore3, da = ca.length, ea = null; switch (ba) { case z.BUTTON: ea = l.createDefault(da); break; case z.CAROUSEL: ea = m.createDefault(da); break; case z.HEADER: ea = n.createDefault(da); break; case z.PHOTO: ea = o.createDefault(da); break; case z.TEXT: ea = q.createDefault(da); break; case z.VIDEO: ea = r.createDefault(da); break; case z.PRODUCT_SET: ea = p.createDefault(da); break; }if (!ea) return; if (ba === z.HEADER) { for (var fa = 0; fa < ca.length; ++fa)ca[fa] = ca[fa].set('index', fa + 1); ca.unshift(ea.set('index', 0)); } else this.$RichMediaEditorStore3.push(ea); }; aa.prototype.$RichMediaEditorStore12 = function (ba) { this.$RichMediaEditorStore3 = []; var ca = JSON.parse(ba); for (var da = 0; da < ca.length; ++da) { var ea = ca[da]; if (!ea.expanded) ea.expanded = false; switch (ea.type) { case i.RICH_TEXT: this.$RichMediaEditorStore3.push(q.createFromObject(ea)); break; case i.PHOTO: this.$RichMediaEditorStore3.push(o.createFromObject(ea)); break; case i.VIDEO: this.$RichMediaEditorStore3.push(r.createFromObject(ea)); break; case i.BUTTON: this.$RichMediaEditorStore3.push(l.createFromObject(ea)); break; case i.SLIDESHOW: this.$RichMediaEditorStore3.push(m.createFromObject(ea)); break; case i.HEADER: this.$RichMediaEditorStore3.push(n.createFromObject(ea)); break; case i.ELEMENT_GROUP: this.$RichMediaEditorStore3.push(p.createFromObject(ea)); break; } } }; f.exports = new aa(k); }, null);
__d('RichMediaEditorVideoUploader.react', ['AdsCanvasAPISetup', 'AdsVideoPlayer.react', 'AdsXUIProgressBar.react', 'BackgroundImage.react', 'CanvasVideoUploader', 'FileInput.react', 'React', 'VideoUploadFile', 'XUIButton.react', 'cx', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var s = n.PropTypes, t = 144, u = n.createClass({ displayName: 'RichMediaEditorVideoUploader', propTypes: { pageID: s.string.isRequired, previewVideo: s.shape({ height: s.number.isRequired, width: s.number.isRequired }), uploadStatus: s.shape({ isEncoding: s.bool, isUploading: s.bool, percentage: s.number }), useCustomVideoUploadEndpoint: s.bool, onUploadStatusChanged: s.func.isRequired, onVideoUploaded: s.func.isRequired }, render: function () { return (n.createElement('div', { className: "_1km8" }, this._renderVideoPreview(), this._renderVideoUploadButton())); }, _renderVideoPreview: function () { if (this.props.previewVideo) { var v = this.props.previewVideo, w = v.preferredThumbnail, x = t / v.height; return (n.createElement('div', { className: "_1km9" }, n.createElement(i, { playerHeight: v.height * x, playerWidth: v.width * x, ref: 'videoPlayer', videoID: v.id }, n.createElement(k, { backgroundSize: 'contain', height: v.height * x, src: w ? w.uri : null, width: v.width * x })))); } return (n.createElement('div', { className: "_1kma" }, n.createElement('img', { className: "_1kmb", src: '/images/ads/rich_media/video_placeholder.png' }))); }, _renderVideoUploadButton: function () { var v = this.props.uploadStatus; if (v && (v.isUploading || v.isEncoding)) { var w = v.isUploading ? r._("Uploading") : r._("Encoding"); return (n.createElement('div', { className: "_1kmc" }, n.createElement(j, { className: "_1kmd", max: 100, min: 0, striped: true, value: v.percentage }), n.createElement('div', { className: "_1kme" }, w))); } else { var x = this.props.previewVideo ? r._("Replace video") : r._("Upload video"); return (n.createElement('div', { className: "_1kmc" }, n.createElement(m, { accept: 'video/*', name: 'uploadVideo', ref: 'fileInputVideo', onChange: this._onVideoUpload }, n.createElement(p, { className: "_1kmf", href: '#', label: x })))); } }, _onVideoUpload: function (event) { if (event.target.files.length <= 0) return; h.setupGraph(); var v = event.target, w = o.fromFileInput(v), x = new l(this.props.pageID, this.props.useCustomVideoUploadEndpoint); x.addListener('upload-progressed', this._onUploadProgress); x.addListener('upload-done', this._onUploadDone); x.addListener('upload-fail', this._onUploadError); x.addListener('encoding-success', this._onEncodingSuccess); x.addListener('encoding-fail', this._onEncodingFail); x.upload(w); event.target.value = null; this.props.onUploadStatusChanged({ isUploading: true, isEncoding: false, percentage: 0 }); }, _onUploadSuccess: function (v) { this.props.onUploadStatusChanged({ isUploading: false }); this.props.onPhotoUploaded(v.response.payload.photo); }, _onUploadDone: function (v) { this.props.onUploadStatusChanged({ isUploading: false, isEncoding: true, percentage: 100 }); }, _onUploadError: function (v) { this.props.onUploadStatusChanged({ isUploading: false, isEncoding: false }); }, _onEncodingFail: function (v) { this.props.onUploadStatusChanged({ isUploading: false, isEncoding: false }); }, _onUploadProgress: function (v) { this.props.onUploadStatusChanged({ isUploading: true, percentage: v.percentage }); }, _onEncodingSuccess: function (v) { this.props.onUploadStatusChanged({ isUploading: false, isEncoding: false }); this.props.onVideoUploaded(v); } }); f.exports = u; }, null);
__d('AdsNumberInput.react', ['AdsTextInput.react', 'React', 'cx', 'fbt', 'intlNumUtils', 'joinClasses', 'mergeDeep'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var o = i.PropTypes, p = i.createClass({ displayName: 'AdsNumberInput', propTypes: { errors: o.object, prefix: o.string, suffix: o.string, value: o.number, onChange: o.func.isRequired }, getInitialState: function () { return { focused: false, formatError: false }; }, render: function () { var q = this.props.errors || {}; if (this.state.formatError) q = n(q, { NON_NUMERIC_INPUT: k._("This input can only contain numbers") }); var r = this.props.value; if (r != null) r = l.formatNumber(r); if (r && !this.state.focused) { var s = this.props.prefix || '', t = this.props.suffix || ''; r = s + r + t; } var u = "_x62"; return (i.createElement(h, babelHelpers._extends({}, this.props, { className: m(this.props.className, u), errors: q, value: r, onBlur: this._onBlur, onChange: this._onChange, onFocus: this._onFocus, onImmediateChange: this._onImmediateChange }))); }, _onBlur: function () { this.setState({ focused: false, formatError: false }); }, _onChange: function (q) { var r = this._findFirstInvalidCharacter(q); if (r >= 0) q = q.substring(0, r); this.props.onChange(l.parseNumber(q)); }, _onFocus: function () { this.setState({ focused: true }); }, _onImmediateChange: function (q) { var r = this._findFirstInvalidCharacter(q), s = r >= 0; this.setState({ formatError: s }); }, _findFirstInvalidCharacter: function (q) { return q.search(/[^0-9\,\.\ ]/); } }); f.exports = p; }, null);
__d('AdsProductSetFilterFieldConfig', ['ProductItemAvailabilities', 'ProductItemFilterFieldsExternal', 'AdsGenericFilterField', 'AdsGenericFilterFieldType', 'AdsGenericFilterOperator', 'AdsProductSetFilterOperatorConfig', 'AdsProductSetFilterInputType', 'AdsCreationConfig', 'fbt', 'intlList'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var r = {}; r[i.AVAILABILITY] = { text: p._("Availability"), placeholder: p._("Add availability"), field: new j(i.AVAILABILITY, k.STRING), inputType: n.TOKENIZED_TEXT_INPUT, operators: [m.EQUAL, m.NOT_EQUAL], defaultOperator: l.EQUAL, invalidMessage: p._("Availability must be one of: {field list}", [p.param('field list', q(Object.keys(h).map(function (v) { return '\'' + h[v] + '\''; }), q.CONJUNCTIONS.OR))]) }; r[i.BRAND] = { text: p._("Brand"), placeholder: p._("Add brand"), field: new j(i.BRAND, k.STRING), inputType: n.TOKENIZED_TEXT_INPUT, operators: [m.IS_ANY_OF_THESE, m.NOT_EQUAL, m.CONTAIN, m.NOT_CONTAIN], defaultOperator: l.EQUAL, invalidMessage: p._("Brand must be a string") }; r[i.CATEGORY] = { text: p._("Category"), placeholder: p._("Enter a category"), field: new j(i.CATEGORY, k.STRING), inputType: n.TOKENIZED_TEXT_INPUT, operators: [m.IS_ANY_OF_THESE, m.NOT_EQUAL, m.CONTAIN, m.NOT_CONTAIN], defaultOperator: l.CONTAIN, invalidMessage: p._("Category must be a string") }; function s(v, w) { return { text: p._("Custom Label {index}", [p.param('index', v)]), placeholder: p._({ "*": "Enter Custom Label {index}'s value" }, [p.param('index', v, [0])]), field: new j(w, k.STRING), inputType: n.TOKENIZED_TEXT_INPUT, operators: [m.IS_ANY_OF_THESE, m.NOT_EQUAL, m.CONTAIN, m.NOT_CONTAIN], defaultOperator: l.CONTAIN, invalidMessage: p._({ "*": "Custom Label {index} must be a string" }, [p.param('index', v, [0])]) }; } if (o.gk.ads_pe_custom_labels_in_dpa_template_ui) { var t = [i.CUSTOM_LABEL_0, i.CUSTOM_LABEL_1, i.CUSTOM_LABEL_2, i.CUSTOM_LABEL_3, i.CUSTOM_LABEL_4]; for (var u = 0; u < t.length; u++)r[t[u]] = s(u, t[u]); } r[i.PRODUCT_TYPE] = { text: p._("Product Type"), placeholder: p._("Enter a product type"), field: new j(i.PRODUCT_TYPE, k.STRING), inputType: n.TOKENIZED_TEXT_INPUT, operators: [m.IS_ANY_OF_THESE, m.NOT_EQUAL, m.CONTAIN, m.NOT_CONTAIN], defaultOperator: l.EQUAL, invalidMessage: p._("Product type must be a string") }; r[i.PRICE_AMOUNT] = { text: p._("Price"), placeholder: p._("Add value in cents"), field: new j(i.PRICE_AMOUNT, k.CURRENCY), inputType: n.NUMERIC_TEXT_INPUT, operators: [m.GREATER_THAN, m.LESS_THAN], defaultOperator: l.GREATER_THAN, invalidMessage: p._("Price must be an integer indicating the number of cents") }; f.exports = r; }, null);
__d('AdsProductItemPropertySearchSource', ['AbstractSearchSource', 'AdsGraphAPI', 'Map', 'SearchableEntry', 'TokenizeUtil', 'adsGKCheck'], function a(b, c, d, e, f, g, h, i, j, k, l, m) { if (c.__markCompiled) c.__markCompiled(); var n, o; 'use strict'; var p = new j(); function q(s, t) { var u = s.getOrder(), v = t.getOrder(); if (u === v) return s.getTitle() > t.getTitle() ? 1 : -1; return u > v ? 1 : -1; } n = babelHelpers.inherits(r, h); o = n && n.prototype; r.getInstance = function (s, t, u) { var v = r.getInstanceID(s, t, u); if (!p.has(v)) p.set(v, new r(s, t, u)); return p.get(v); }; r.getInstanceID = function (s, t, u) { var v = s + '_' + t; if (u) v += '_includeQueryString'; return v; }; function r(s, t, u) { o.constructor.call(this); this.productCatalogID = s; this.property = t; this.includeQueryString = u; } r.prototype.bootstrapImpl = function (s) { this.search('', s); }; r.prototype.searchImpl = function (s, t, u) { if (!s) { t([], s); return; } var v = this.property, w = {}; w[v] = { i_contains: s }; i.get().object('product_catalog_id', this.productCatalogID).edge('products').batched().get({ fields: [v], filter: w }).done((function (x) { var y = [], z = x.data; if (this.includeQueryString && z.length > 0) { var aa = {}; aa.id = Math.random(); aa[v] = s; z.push(aa); } var ba = s.toLowerCase(), ca = {}; for (var da = 0; da < z.length; da++) { if (ca[z[da][v]]) continue; var ea = z[da][v], fa, ga = ea.toLowerCase().indexOf(ba); if (ga < 0) return; if (l.isExactMatch(s, ea) && ga === 0) { fa = 1; } else if (l.isExactMatch(s, ea)) { fa = 2; } else if (ga === 0) { fa = 3; } else if (l.isQueryMatch(s, ea)) { fa = 4; } else if (ga > 0) fa = 5; var ha = new k({ uniqueID: z[da].id, title: z[da][v], order: fa }); y.push(ha); ca[z[da][v]] = true; } y.sort(q); t(y, s); }).bind(this)); }; f.exports = r; }, null);
__d('AdsProductSetUtils', ['AbstractSearchSource', 'AdsGenericFilterOperator', 'AdsProductItemPropertySearchSource', 'ProductItemAvailabilities', 'ProductItemFilterFieldsExternal', 'RegexMatchSearchSource', 'SearchableEntry', 'StaticSearchSource'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var p = { getProductSetDataSpec: function (q, r) { var s = this.convertFilterSpec(r); return babelHelpers._extends({}, s, { name: q }); }, convertFilterSpec: function (q) { var r = q.map(function (s) { var t = s.value.map(function (u) { var v = {}; switch (s.operator) { case i.CONTAIN: v.i_contains = u; break; case i.NOT_CONTAIN: v.i_not_contains = u; break; case i.EQUAL: v.eq = u; break; case i.NOT_EQUAL: v.neq = u; break; case i.GREATER_THAN: v.gt = u; break; case i.LESS_THAN: v.lt = u; break; }var w = {}; w[s.property] = v; return w; }); return { or: t }; }); if (r.length === 0) return { filter: {} }; return { filter: { and: r } }; }, getSearchSource: function (q, r, s) { h; switch (r) { case l.AVAILABILITY: return new o(Object.keys(k).map(function (t) { return new n({ uniqueID: t, title: k[t] }); })); case l.BRAND: case l.CATEGORY: case l.PRODUCT_TYPE: case l.CUSTOM_LABEL_0: case l.CUSTOM_LABEL_1: case l.CUSTOM_LABEL_2: case l.CUSTOM_LABEL_3: case l.CUSTOM_LABEL_4: return j.getInstance(q, r, s); case l.PRICE_AMOUNT: return new m('[0-9]+'); }return new m('.+'); }, shouldIncludeQueryString: function (q) { if (q === i.CONTAIN || q === i.NOT_CONTAIN) return true; return false; } }; f.exports = p; }, null);
__d('AdsProductSetFilterTokenizer.react', ['AdsProductSetFilterFieldConfig', 'AdsProductSetUtils', 'React', 'SearchableEntry', 'XUITokenizer.react', 'removeFromArray'], function a(b, c, d, e, f, g, h, i, j, k, l, m) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var n = j.PropTypes, o = j.createClass({ displayName: 'AdsProductSetFilterTokenizer', propTypes: { className: n.string.isRequired, entries: n.arrayOf(n.instanceOf(k)).isRequired, filterOperator: n.string.isRequired, filterProperty: n.string.isRequired, onChange: n.func.isRequired, onQueryStringChange: n.func.isRequired, productCatalogID: n.string.isRequired, error: n.string }, getInitialState: function () { return { entries: [] }; }, render: function () { var p = i.shouldIncludeQueryString(this.props.filterOperator); return (j.createElement(l, { className: this.props.className, entries: this.props.entries, focusedOnInit: true, placeholder: h[this.props.filterProperty].placeholder, searchSource: i.getSearchSource(this.props.productCatalogID, this.props.filterProperty, p), showEntriesOnFocus: true, xuiError: this.props.error, onAddEntryAttempt: this._handleAddEntryAttempt, onQueryStringChange: this.props.onQueryStringChange, onRemoveEntryAttempt: this._handleRemoveEntryAttempt })); }, _handleAddEntryAttempt: function (p) { if (!this._hasEntry(p)) this.props.onChange(this.props.entries.concat(p)); }, _handleRemoveEntryAttempt: function (p) { if (this._hasEntry(p)) { var q = this.props.entries; m(q, p); this.props.onChange(q.slice()); } }, _hasEntry: function (p) { var q = p.getUniqueID(); return this.props.entries.some(function (r) { return r.getUniqueID() === q; }); } }); f.exports = o; }, null);
__d('AdsProductCatalogActions', ['AdsActionTypes', 'AdsDispatcher'], function a(b, c, d, e, f, g, h, i) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var j = { productCatalogBatchLoaded: function (k) { i.handleUpdateFromServerResponse({ productCatalogs: k, type: h.PRODUCT_CATALOG.BATCH_LOADED }); }, productCatalogBatchLoadError: function (k) { i.handleUpdateFromServerResponse({ errors: k, type: h.PRODUCT_CATALOG.BATCH_LOAD_ERROR }); } }; f.exports = j; }, null);
__d('AdsProductCatalogDataManager', ['AdsBaseDataManager', 'AdsGraphAPI', 'AdsProductCatalogActions', 'CurrentUser', 'Map', 'fbt', 'sprintf'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n) { if (c.__markCompiled) c.__markCompiled(); var o, p; 'use strict'; var q = ['name', 'product_count', n('userpermissions.fields(role).user(%s)', k.getAccountID())]; o = babelHelpers.inherits(r, h); p = o && o.prototype; r.prototype.loadAll = function (t) { t.forEach((function (u) { return this.load(u); }).bind(this)); }; r.prototype.load = function (t) { i.get().object('product_catalog', t).batched().get({ fields: q }).done(this.__handleSuccess.bind(this, ['load'], t, null), this.__handleError.bind(this, ['load'], t, null)); }; r.prototype.__onBatchLoaded = function (t) { j.productCatalogBatchLoaded(t); }; r.prototype.__onBatchLoadError = function (t) { j.productCatalogBatchLoadError(t); }; r.prototype.__getObjectTypeLabel = function () { return m._("Product catalog"); }; function r() { o.apply(this, arguments); } var s = new r(); f.exports = s; }, null);
__d('AdsProductCatalogStore', ['AdsActionTypes', 'AdsBaseDataManager', 'AdsBaseDataStore', 'AdsLoadState', 'AdsProductCatalogDataManager'], function a(b, c, d, e, f, g, h, i, j, k, l) { if (c.__markCompiled) c.__markCompiled(); var m, n; 'use strict'; m = babelHelpers.inherits(o, j); n = m && m.prototype; o.prototype.getDataManager = function () { return l; }; o.prototype.__onDispatch = function (p) { var q = p.action; switch (q.type) { case h.PRODUCT_CATALOG.BATCH_LOADED: this.__handleData(q.productCatalogs, k.LOADED); break; case h.PRODUCT_CATALOG.BATCH_LOAD_ERROR: this.__handleData(q.errors, k.ERROR); break; } }; function o() { m.apply(this, arguments); } f.exports = new o(); }, null);
__d('AdsProductSetFilter.react', ['AdsCurrencyInput.react', 'AdsCurrencySingleSelector.react', 'AdsProductSetFilterInputType', 'AdsProductSetFilterTokenizer.react', 'AdsProductSetFilterFieldConfig', 'ads-lib-formatters', 'ProductItemFilterFieldsExternal', 'React', 'ReactFragment', 'XUIButtonGroup.react', 'XUICloseButton.react', 'XUISelector.react', 'cx', 'fbt', 'mapObject'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var w = o.PropTypes, x = s.Option, y = o.createClass({ displayName: 'AdsProductSetFilter', propTypes: { productCatalogID: w.string.isRequired, filter: w.object.isRequired, onChange: w.func.isRequired, onRemove: w.func.isRequired, onQueryStringChange: w.func.isRequired, onSelectedCurrencyChange: w.func.isRequired, selectedCurrency: w.string.isRequired }, render: function () { return (o.createElement('div', { className: "_5grb" }, o.createElement('div', null, o.createElement(q, { className: "_3-96" }, this._renderProductItemPropertySelector(), this._renderPriceFilterCurrencySelector(), this._renderFilterOperatorSelector()), o.createElement(r, { className: "_5grc", size: 'small', onClick: this.props.onRemove })), o.createElement('div', { className: "_3-96" }, this._renderFilterInput()))); }, _renderProductItemPropertySelector: function () { var z = v(l, function (aa, ba) { return (o.createElement(x, { key: ba, value: ba }, aa.text)); }); return (o.createElement(s, { value: this.props.filter.property, onChange: this._onProductItemPropertyChange }, p.create(z))); }, _renderPriceFilterCurrencySelector: function () { if (this.props.filter.property !== n.PRICE_AMOUNT) return null; return (o.createElement(i, { value: this.props.selectedCurrency, onChange: this._onSelectedCurrencyChange })); }, _renderFilterOperatorSelector: function () { var z = l[this.props.filter.property].operators, aa = z.map(function (ba) { var ca = ba.operator; return (o.createElement(x, { key: ca, value: ca }, ba.text)); }); return (o.createElement(s, { value: this.props.filter.operator, onChange: this._onProductItemFilterOperatorChange }, aa)); }, _renderFilterInput: function () { var z = l[this.props.filter.property], aa = z.inputType; if (aa === j.TOKENIZED_TEXT_INPUT) { return (o.createElement(k, { className: "_5gre", entries: this.props.filter.value, error: this.props.filter.error, filterOperator: this.props.filter.operator, filterProperty: this.props.filter.property, productCatalogID: this.props.productCatalogID, onChange: this._onProductItemFilterTokenizedValueChange, onQueryStringChange: this.props.onQueryStringChange })); } else return (o.createElement(h, { className: "_5grp", currency: this.props.selectedCurrency, eventType: 'change', height: 'tall', placeholder: u._("Amount in {currency type}", [u.param('currency type', this.props.selectedCurrency)]), value: this.props.filter.value[0], withNumberDelimiters: true, xuiError: this.props.filter.error, onDataUpdate: this._onProductItemFilterNumericValueChange })); }, _onProductItemPropertyChange: function (z) { var aa = { property: z.value, operator: l[z.value].defaultOperator, value: [], plainText: '' }; this.props.onChange(aa); }, _onProductItemFilterOperatorChange: function (z) { var aa = Object.assign({}, this.props.filter, { operator: z.value, value: [], plainText: '' }); this.props.onChange(aa); }, _onSelectedCurrencyChange: function (z) { this.props.onSelectedCurrencyChange(z.value); }, _onProductItemFilterNumericValueChange: function (z) { var aa = Object.assign({}, this.props.filter, { value: [m.parseNumber(z)], plainText: '', error: null }); this.props.onChange(aa); }, _onProductItemFilterTokenizedValueChange: function (z) { var aa = Object.assign({}, this.props.filter, { value: z, plainText: '', error: null }); this.props.onChange(aa); } }); f.exports = y; }, null);
__d('AdsNewProductSetDialogView.react', ['AdsGenericFilterOperator', 'AdsGraphAPI', 'AdsLoadState', 'AdsProductCatalogStore', 'AdsProductSetActions', 'AdsProductSetFilter.react', 'AdsProductSetFilterFieldConfig', 'AdsProductSetFilterInputType', 'AdsProductSetPaneStore', 'AdsProductSetUtils', 'FluxMixinLegacy', 'LayerFadeOnShow', 'LayerHideOnEscape', 'Link.react', 'NumberFormat', 'ProductItemFilterFieldsExternal', 'React', 'ReactComponentWithPureRenderMixin', 'XUIButton.react', 'XUIDialog.react', 'XUIDialogBody.react', 'XUIDialogButton.react', 'XUIDialogCancelButton.react', 'XUIDialogFooter.react', 'XUIDialogTitle.react', 'XUINotice.react', 'XUISpinner.react', 'XUIText.react', 'XUITextInput.react', 'cx', 'debounce', 'emptyFunction', 'fbt', 'URI'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ba, ca, da, ea, fa, ga, ha, ia, ja, ka, la, ma, na, oa) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var pa = x.PropTypes, qa = x.createClass({ displayName: 'AdsNewProductSetDialogView', mixins: [y, r([k], { withProps: true })], propTypes: { defaultCurrency: pa.string, productCatalogID: pa.string.isRequired, source: pa.shape({ campaignIDs: pa.arrayOf(pa.string).isRequired, spec: pa.string.isRequired }), onClose: pa.func.isRequired, onConfirm: pa.func }, statics: { calculateState: function (ra, sa) { return { productCatalog: k.get(sa.productCatalogID) }; } }, componentWillMount: function () { this._updateProductCountDebounced = la(this._updateProductCount, 1000); }, componentWillUnmount: function () { this._updateProductCountDebounced.reset(); delete this._updateProductCountDebounced; }, getInitialState: function () { return { name: '', nameError: null, filters: [this._getNewFilter()], selectedCurrency: this.props.defaultCurrency || 'USD', productCount: null, productCountLoading: false }; }, render: function () { return (x.createElement(aa, { behaviors: { LayerHideOnEscape: t, LayerFadeOnShow: s }, fixedTopPosition: 240, ref: 'dialog', shown: true, width: 600, onToggle: this._onToggle }, x.createElement(fa, null, na._("Create Product Set")), x.createElement(ba, null, this._renderDialogContent()), x.createElement(ea, { leftContent: this._renderProductCountText() }, x.createElement(da, null), x.createElement(ca, { action: 'confirm', label: na._("Create"), use: 'confirm', onClick: this._onConfirm })))); }, _renderDialogContent: function () { var ra = na._("Filter Catalog"), sa = x.createElement('div', { className: "_2kyl" }); if (this.state.filters.length !== 0) ra = na._("Add Filter"); return (x.createElement('div', null, this._renderErrorMessage(), this._renderNameInputRow(), sa, this._renderProductCatalogNameContent(), this._renderFilters(), x.createElement('div', { className: "_4fki" }, x.createElement(z, { className: "_2kym", label: ra, onClick: this._addFilter })))); }, _renderErrorMessage: function () { if (this.state.productCount === 0) return (x.createElement(ga, null, na._("You're creating a product set with 0 products."))); return null; }, _renderProductCatalogNameContent: function () { var ra = new oa('https://developers.facebook.com/docs/marketing-api/' + 'dynamic-product-ads/product-catalog#productset'), sa = this.state.productCatalog.loadState === j.LOADING; return sa ? x.createElement(ha, null) : x.createElement('div', { className: "_4fkj" }, x.createElement(ia, { size: 'small' }, na._("Filter from {catalog_name} catalog to create a product set. {learn_more_link}.", [na.param('catalog_name', x.createElement(ia, { size: 'small', weight: 'bold' }, this.state.productCatalog.name)), na.param('learn_more_link', x.createElement(u, { href: ra, target: '_blank' }, 'Learn more'))]))); }, _renderProductCountText: function () { var ra = this.state.productCatalog.loadState === j.LOADING; if (ra) return (x.createElement(ha, null)); var sa = this.state.productCount; if (sa === null) sa = this.state.productCatalog.product_count; var ta = this.state.productCountLoading ? x.createElement(ha, null) : x.createElement(ia, { weight: 'bold' }, v.formatInteger(sa)); return (x.createElement('div', { className: "_4fkk" }, x.createElement(ia, { size: 'small' }, na._("You are creating a product set with {product_count} of {total_product_count} products.", [na.param('product_count', ta), na.param('total_product_count', v.formatInteger(this.state.productCatalog.product_count))])))); }, _renderFilters: function () { if (this.state.filters.length === 0) return null; var ra = this.state.filters.slice().map((function (sa, ta) { var ua = ta === 0 ? null : x.createElement('label', { className: "_5dr1" }, 'And'); return (x.createElement('div', null, ua, x.createElement(m, { filter: sa, key: ta, productCatalogID: this.props.productCatalogID, selectedCurrency: this.state.selectedCurrency, onChange: this._onFilterChange.bind(this, ta), onQueryStringChange: this._onFilterQueryStringChange.bind(this, ta), onRemove: this._onRemoveFilter.bind(this, ta), onSelectedCurrencyChange: this._onSelectedCurrencyChange }))); }).bind(this)); return (x.createElement('div', { className: "_4fkl" }, x.createElement('div', { className: "_2kyo" }, ra))); }, _renderNameInputRow: function () { return (x.createElement('div', { className: "_2kyp" }, x.createElement('div', null, x.createElement(ia, { className: "_2kyq", size: 'medium' }, na._("Name of Product Set"))), x.createElement('div', { className: "_2kyo" }, x.createElement(ja, { className: "_2kyr", height: 'tall', placeholder: na._("Name new product set"), value: this.state.name, xuiError: this.state.nameError, onChange: this._onProductSetNameChange })))); }, _updateProductCountDebounced: ma, _updateProductCount: function () { i.get().object('product_catalog_id', this.props.productCatalogID).edge('products').batched().get({ filter: q.convertFilterSpec(this._getFiltersForAPI()).filter, summary: true }).done((function (ra) { if (this.isMounted()) this.setState({ productCountLoading: false, productCount: ra.summary.total_count }); }).bind(this)); }, _getNameInvalidMessage: function () { return na._("Name is required and cannot be empty"); }, _onProductSetNameChange: function (event) { if (this.isMounted()) this.setState({ name: event.target.value, nameError: event.target.value.trim().length > 0 ? null : this._getNameInvalidMessage() }); }, _getFilterInvalidMessage: function (ra) { if (n[ra.property].inputType === o.TOKENIZED_TEXT_INPUT) return na._("Filter must be in token format"); return n[ra.property].invalidMessage; }, _addFilter: function () { var ra = this.state.filters.slice(); ra.push(this._getNewFilter()); if (this.isMounted()) this.setState({ filters: ra }); }, _getNewFilter: function () { return { property: w.CATEGORY, operator: h.CONTAIN, value: [], plainText: '' }; }, _onFilterChange: function (ra, sa) { var ta = this.state.filters.slice(); ta[ra] = sa; if (this.isMounted()) { this.setState({ filters: ta }); this.setState({ productCountLoading: true }, this._updateProductCountDebounced); } }, _onSelectedCurrencyChange: function (ra) { this.setState({ productCountLoading: true, selectedCurrency: ra }, this._updateProductCountDebounced); }, _onFilterQueryStringChange: function (ra, event) { var sa = this.state.filters.slice(), ta = sa[ra]; ta.plainText = event.target.value; if (!ta.plainText) ta.error = null; sa[ra] = ta; if (this.isMounted()) this.setState({ filters: sa }); }, _onRemoveFilter: function (ra) { var sa = this.state.filters.slice(); sa.splice(ra, 1); if (this.isMounted()) this.setState({ filters: sa, productCountLoading: true }, this._updateProductCountDebounced); }, _validateFilters: function () { var ra = true, sa = this.state.filters.slice(); sa.forEach((function (ta) { if (ta.plainText) { ra = false; ta.error = this._getFilterInvalidMessage(ta); } }).bind(this)); if (this.isMounted() && !ra) this.setState({ filters: sa }); return ra; }, _getFiltersForAPI: function () { var ra = [], sa = false; this.state.filters.slice().forEach(function (ta) { if (ta.value.length === 0) return; if (ta.property === w.PRICE_AMOUNT) sa = true; ra.push(babelHelpers._extends({}, ta, { value: ta.value.map(function (ua) { return (n[ta.property].inputType === o.TOKENIZED_TEXT_INPUT ? ua.getTitle() : ua); }) })); }); if (sa) ra.push({ property: w.CURRENCY, operator: h.EQUAL, value: [this.state.selectedCurrency], plainText: '', error: null }); return ra; }, _validateForm: function () { var ra = true; if (this.isMounted() && this.state.name.trim().length === 0) { this.setState({ nameError: this._getNameInvalidMessage() }); ra = false; } if (!this._validateFilters()) ra = false; return ra; }, _onProductSetCreationConfirmed: function (ra) { var sa = q.getProductSetDataSpec(ra.name, ra.filters), ta = babelHelpers._extends({}, sa); ta.tempID = p.getNewCreationID(); l.createProductSet(this.props.productCatalogID, ta, this.props.source); }, _onConfirm: function () { if (!this._validateForm()) return; var ra = this._getFiltersForAPI(); this._onProductSetCreationConfirmed({ name: this.state.name, filters: ra }); if (this.isMounted()) this.setState(this.getInitialState()); if (this.props.onConfirm) this.props.onConfirm(); this.props.onClose(); }, _onToggle: function (ra) { if (!ra) { if (this.isMounted()) this.setState(this.getInitialState()); this.props.onClose(); } } }); f.exports = qa; }, null);
__d('AdsProductSetListActions', ['AdsDispatcher', 'AdsActionTypes'], function a(b, c, d, e, f, g, h, i) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var j = { productSetListPartialLoad: function (k, l) { h.handleUpdateFromServerResponse({ productCatalogID: k, productSets: l, type: i.PRODUCT_SET.LIST.PARTIAL_LOAD }); }, productSetListLoaded: function (k, l) { h.handleUpdateFromServerResponse({ productCatalogID: k, productSets: l, type: i.PRODUCT_SET.LIST.LOADED }); }, productSetListLoadError: function (k) { h.handleUpdateFromServerResponse({ productCatalogID: k, type: i.PRODUCT_SET.LIST.LOAD_ERROR }); } }; f.exports = j; }, null);
__d('AdsProductSetListDataManager', ['AdsBaseListDataManager', 'AdsGraphAPI', 'AdsProductSetListActions', 'GraphAPIPaging', 'Map', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m) { if (c.__markCompiled) c.__markCompiled(); var n, o; 'use strict'; var p = ['created_time', 'id']; n = babelHelpers.inherits(q, h); o = n && n.prototype; q.prototype.loadFor = function (s) { i.get().object('product_catalog', s).edge('product_sets').batched().get({ fields: p }).then(k.eachPage((function (t) { return this.$AdsProductSetListDataManagerClass1(s, t.data); }).bind(this))).done(this.__handleSuccess.bind(this, ['load'], s, null), this.__handleError.bind(this, ['load'], s, null)); }; q.prototype.$AdsProductSetListDataManagerClass1 = function (s, t) { j.productSetListPartialLoad(s, t); }; q.prototype.__onBatchLoaded = function (s) { s.forEach(function (t, u) { j.productSetListLoaded(u, t.data); }); }; q.prototype.__onBatchLoadError = function (s) { s.forEach(function (t, u) { j.productSetListLoadError(u); }); }; q.prototype.__getObjectTypeLabel = function () { return m._("Product Catalog"); }; function q() { n.apply(this, arguments); } var r = new q(); f.exports = r; }, null);
__d('AdsProductSetListStore', ['AdsLoadState', 'AdsBaseListStore', 'AdsActionTypes', 'AdsProductSetListDataManager'], function a(b, c, d, e, f, g, h, i, j, k) { if (c.__markCompiled) c.__markCompiled(); var l, m; 'use strict'; l = babelHelpers.inherits(n, i); m = l && l.prototype; n.prototype.getDataManager = function () { return k; }; n.prototype.__onDispatch = function (p) { var q = p.action; switch (q.actionType) { case j.PRODUCT_SET.LIST.LOADED: this.__handleDataFor(q.productCatalogID, q.productSets, h.LOADED); break; case j.PRODUCT_SET.LIST.LOAD_ERROR: this.__handleDataFor(q.productCatalogID, null, h.ERROR); break; case j.PRODUCT_SET.LIST.PARTIAL_LOAD: this.__handleDataFor(q.productCatalogID, q.productSets, h.LOADING); break; case j.PRODUCT_SET.BATCH_CREATED: this.$AdsProductSetListStoreClass1(q.productCatalogID); break; case j.PRODUCT_SET.BATCH_DELETED: this.$AdsProductSetListStoreClass1(q.productCatalogID); break; } }; n.prototype.$AdsProductSetListStoreClass1 = function (p) { if (this.__invalidate(p)) this.__emitChange(); }; function n() { l.apply(this, arguments); } var o = new n(); f.exports = o; }, null);
__d('Headline.atlas', ['PureRenderComponent.atlas', 'React', 'Typography.atlas', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l) { if (c.__markCompiled) c.__markCompiled(); var m, n; 'use strict'; var o = i.PropTypes, p = { color: 'medium', display: 'inline', size: 'medium' }; m = babelHelpers.inherits(q, i.Component); n = m && m.prototype; q.defaultProps = p; q.propTypes = { color: o.oneOf(['blue', 'dark', 'medium']).isRequired, display: o.oneOf(['inline', 'block']).isRequired, size: o.oneOf(['large', 'medium', 'small']).isRequired }; q.prototype.render = function () { var r = this.props, s = r.color, t = r.size, u = babelHelpers.objectWithoutProperties(r, ['color', 'size']), v = j.getClassName(null, null, s), w = (t === 'large' ? "_2ak3" : '') + (t === 'medium' ? ' ' + "_2ak4" : '') + (t === 'small' ? ' ' + "_2ak5" : ''), x = l(this.props.className, "_3ma", "_2ak6", v, w); if (this.props.display === 'block') return (i.createElement('div', babelHelpers._extends({}, u, { className: x }), this.props.children)); return (i.createElement('span', babelHelpers._extends({}, u, { className: x }), this.props.children)); }; function q() { m.apply(this, arguments); } f.exports = h.create(q); }, null);
__d('Card.atlas', ['FbtResult', 'Headline.atlas', 'PureRenderComponent.atlas', 'React', 'underscore.ads', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n) { if (c.__markCompiled) c.__markCompiled(); var o, p; 'use strict'; var q = k.PropTypes, r = { contentPadding: 'normal', footerPadding: 'normal', headerPadding: 'normal' }; o = babelHelpers.inherits(s, k.Component); p = o && o.prototype; s.defaultProps = r; s.propTypes = { contentPadding: q.oneOf(['none', 'normal']).isRequired, footerPadding: q.oneOf(['none', 'normal']).isRequired, headerPadding: q.oneOf(['none', 'normal']).isRequired, footer: q.node, hasFullHeaderBorder: q.bool, header: q.node }; s.prototype.render = function () { var t = this.props.header || null; if (l.isString(t) || t instanceof h) t = k.createElement('div', { className: "_3ma _5c8h" }, k.createElement(i, { size: 'small' }, t)); return (k.createElement('div', { className: n(this.props.className, "_5s4i"), 'data-testid': this.props['data-testid'] }, this.props.header ? k.createElement('div', { className: "_5s4j" + (!this.props.hasFullHeaderBorder && this.props.headerPadding === 'normal' ? ' ' + "_fo7" : '') + (this.props.hasFullHeaderBorder && this.props.headerPadding === 'normal' ? ' ' + "_fo8" : '') }, t) : null, k.createElement('div', { className: this.props.contentPadding === 'normal' ? "_5szr" : '' }, this.props.children), this.props.footer ? k.createElement('div', { className: "_5sfc" + (this.props.footerPadding === 'normal' ? ' ' + "_fo9" : '') }, this.props.footer) : null)); }; function s() { o.apply(this, arguments); } f.exports = j.create(s); }, null);
__d('HighlightedText.atlas', ['PureRenderComponent.atlas', 'React', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k) { if (c.__markCompiled) c.__markCompiled(); var l, m; 'use strict'; l = babelHelpers.inherits(n, i.Component); m = l && l.prototype; n.prototype.render = function () { return (i.createElement('span', { className: k(this.props.className, "_pi") }, this.props.children)); }; function n() { l.apply(this, arguments); } f.exports = h.create(n); }, null);
__d('TextSearchUtil', ['TokenizeUtil'], function a(b, c, d, e, f, g, h) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var i = { isMatch: function (j, k) { if (!k) return false; return this._getNonMatchingTokens(j, k).length > 1; }, getTokens: function (j, k) { k = k.trim(); var l = this._getNonMatchingTokens(j, k); j = j.replace(/\s+/g, ' '); k = k.replace(/\s+/g, ' '); var m = []; l.forEach(function (p, q) { m.push(p); if (q !== l.length - 1) m.push(k); }); var n = [], o = 0; m.forEach(function (p, q) { if (!p) return; var r = q % 2 === 1, s = p.length, t = j.substr(o, s); n.push({ text: t, isHighlighted: r }); o += s; }); return n; }, _getNonMatchingTokens: function (j, k) { var l = h.flatten(j), m = h.flatten(k); return m ? l.split(m) : [l]; } }; f.exports = i; }, null);
__d('TextWithHighlights.atlas', ['HighlightedText.atlas', 'PureRenderComponent.atlas', 'React', 'Text.atlas', 'TextSearchUtil'], function a(b, c, d, e, f, g, h, i, j, k, l) { if (c.__markCompiled) c.__markCompiled(); var m, n; 'use strict'; var o = j.PropTypes, p = babelHelpers._extends({}, k.defaultProps, { highlight: '' }); m = babelHelpers.inherits(q, j.Component); n = m && m.prototype; q.defaultProps = p; q.propTypes = babelHelpers._extends({}, k.propTypes, { highlight: o.string.isRequired, text: o.string.isRequired }); q.prototype.render = function () { var r = this.props, s = undefined; if (!r.highlight) { s = r.text; } else { var t = l.getTokens(r.text, r.highlight); s = t.map(function (u, v) { if (u.isHighlighted) return (j.createElement(h, { key: v }, u.text)); return u.text; }); } return (j.createElement(k, this.props, s)); }; function q() { m.apply(this, arguments); } f.exports = i.create(q); }, null);
__d('CheckboxInput.atlas', ['PureRenderComponent.atlas', 'React', 'Typography.atlas', 'XUICheckboxInput.react', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l, m) { if (c.__markCompiled) c.__markCompiled(); var n, o; 'use strict'; var p = i.PropTypes, q = { disabled: false }; n = babelHelpers.inherits(r, i.Component); o = n && n.prototype; r.defaultProps = q; r.propTypes = { disabled: p.bool.isRequired, onChange: p.func.isRequired, label: p.node, labelWeight: p.oneOf(j.Weights), tooltip: p.string, value: p.bool }; function r(s, t) { o.constructor.call(this, s, t); this.$CheckboxInput1 = this.$CheckboxInput1.bind(this); } r.prototype.$CheckboxInput1 = function (event) { var s = event.target; this.props.onChange(!!s.checked, event); }; r.prototype.render = function () { var s = i.createElement(k, { checked: this.props.value, className: "_2xpe" + (!!this.props.label ? ' ' + "_42cx" : ''), 'data-testid': this.props['data-testid'], disabled: this.props.disabled, id: this.props.id, onChange: this.$CheckboxInput1, tooltip: this.props.tooltip }), t = "_5u-3"; if (!this.props.label) return i.cloneElement(s, { className: m(this.props.className, t, s.props.className) }); var u = this.props.disabled ? 'light' : 'dark', v = this.props.labelWeight || 'regular'; return (i.createElement('label', { className: m(this.props.className, j.getClassName('s', v, u, 'text'), t) }, s, this.props.label ? i.createElement('span', { className: "_40q9" }, this.props.label) : null)); }; f.exports = h.create(r); }, null);
__d('ContextualLayerHideOnScrollOverHeader.atlas', ['DOMQuery', 'Event', 'ExecutionEnvironment', 'SubscriptionsHandler', 'csx'], function a(b, c, d, e, f, g, h, i, j, k, l) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); function m(n) { this.$ContextualLayerHideOnScrollOverHeader1 = n; } m.prototype.enable = function () { if (!this.$ContextualLayerHideOnScrollOverHeader2) { var n = new k(); this.$ContextualLayerHideOnScrollOverHeader2 = n; n.addSubscriptions(this.$ContextualLayerHideOnScrollOverHeader1.subscribe('contextchange', this.$ContextualLayerHideOnScrollOverHeader3.bind(this)), this.$ContextualLayerHideOnScrollOverHeader1.subscribe('show', this.$ContextualLayerHideOnScrollOverHeader4.bind(this)), this.$ContextualLayerHideOnScrollOverHeader1.subscribe('hide', this.$ContextualLayerHideOnScrollOverHeader5.bind(this))); } }; m.prototype.disable = function () { if (this.$ContextualLayerHideOnScrollOverHeader2) { this.$ContextualLayerHideOnScrollOverHeader2.release(); this.$ContextualLayerHideOnScrollOverHeader2 = undefined; } this.$ContextualLayerHideOnScrollOverHeader5(); }; m.prototype.$ContextualLayerHideOnScrollOverHeader4 = function () { if (this.$ContextualLayerHideOnScrollOverHeader6 || !j.canUseDOM) return; var n = this.$ContextualLayerHideOnScrollOverHeader1.getContextScrollParent(); if (n !== window) return; var o = h.scry(document.body, "div._i2b"); if (o.length !== 1) return; var p = o[0].getBoundingClientRect(); this.$ContextualLayerHideOnScrollOverHeader7 = p.bottom; this.$ContextualLayerHideOnScrollOverHeader6 = i.listen(n, 'scroll', this.$ContextualLayerHideOnScrollOverHeader8.bind(this)); }; m.prototype.$ContextualLayerHideOnScrollOverHeader5 = function () { this.$ContextualLayerHideOnScrollOverHeader6 && this.$ContextualLayerHideOnScrollOverHeader6.remove(); this.$ContextualLayerHideOnScrollOverHeader6 = null; }; m.prototype.$ContextualLayerHideOnScrollOverHeader8 = function () { var n = this.$ContextualLayerHideOnScrollOverHeader1.getContent().getBoundingClientRect().top; if (n <= this.$ContextualLayerHideOnScrollOverHeader7) this.$ContextualLayerHideOnScrollOverHeader1.hide(); }; m.prototype.$ContextualLayerHideOnScrollOverHeader3 = function () { this.$ContextualLayerHideOnScrollOverHeader5(); if (this.$ContextualLayerHideOnScrollOverHeader1.isShown()) this.$ContextualLayerHideOnScrollOverHeader4(); }; f.exports = m; }, null);
__d('FormatNumberUtil.atlas', ['NumberFormatConfig', 'intlNumUtils'], function a(b, c, d, e, f, g, h, i) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var j = { _getDecimals: function (k, l, m) { if (!l && !m) { var n = k.toString(), o = n.split(h.decimalSeparator); return o.length === 2 ? o[1].length : 0; } if (k === 0) return l; var p = Math.floor(k * Math.pow(10, m)), q = m, r = 10; while (q > l && p > 1) if (p % r === 0) { r *= 10; --q; } else break; return q; }, formatWithVariablePrecision: function (k, l, m, n) { if (n) return i.formatNumberWithThousandDelimiters(k, j._getDecimals(k, l, m)); return i.formatNumberRaw(k, j._getDecimals(k, l, m)); } }; f.exports = j; }, null);
__d('NumberInput.atlas', ['FormatNumberUtil.atlas', 'ads-lib-formatters', 'Keys', 'NumberFormatConfig', 'PureRenderComponent.atlas', 'React', 'TextInput.atlas'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n) { if (c.__markCompiled) c.__markCompiled(); var o, p; 'use strict'; var q = m.PropTypes, r = { isZeroValidValue: false, maxPrecision: 0, minPrecision: 0 }; o = babelHelpers.inherits(s, m.Component); p = o && o.prototype; s.defaultProps = r; s.propTypes = { isZeroValidValue: q.bool.isRequired, minPrecision: q.number.isRequired, maxPrecision: q.number.isRequired, disabled: q.bool, onBlur: q.func, onFocus: q.func, onKeyUp: q.func, onValueUpdated: q.func, value: q.number }; function s(t, u) { p.constructor.call(this, t, u); this.$NumberInput1 = this.$NumberInput1.bind(this); this.$NumberInput2 = this.$NumberInput2.bind(this); this.$NumberInput3 = this.$NumberInput3.bind(this); this.$NumberInput4 = this.$NumberInput4.bind(this); this.state = { dirtyValue: null }; } s.prototype.$NumberInput2 = function (t) { if (this.$NumberInput5(t)) { this.setState({ dirtyValue: t }); var u = this.$NumberInput6(t); if (this.props.onValueUpdated) this.props.onValueUpdated(u); } }; s.prototype.$NumberInput1 = function (event) { this.setState({ dirtyValue: null }); if (this.props.onBlur) this.props.onBlur(event); }; s.prototype.$NumberInput3 = function (event) { this.setState({ dirtyValue: null }); if (this.props.onFocus) this.props.onFocus(event); }; s.prototype.$NumberInput5 = function (t) { var u = new RegExp('^[0-9.,]*$'); return u.test(t); }; s.prototype.$NumberInput6 = function (t) { return i.parseNumber(t) || 0; }; s.prototype.$NumberInput4 = function (event) { var t = event.keyCode; if (t === j.RETURN || t === j.TAB) this.setState({ dirtyValue: null }); if (this.props.onKeyUp) this.props.onKeyUp(event); }; s.prototype.render = function () { var t = undefined, u = this.props.minPrecision; if (this.state.dirtyValue === null) { t = this.props.value; if (!t) t = this.props.isZeroValidValue ? 0 : null; t = t === null ? '' : h.formatWithVariablePrecision(t, u, this.props.maxPrecision, false).toString(); } else t = this.state.dirtyValue; var v = Array(u + 1).join('0'), w = u ? '0' + k.decimalSeparator + v : '0'; return (m.createElement(n, { className: this.props.className, disabled: this.props.disabled, onBlur: this.$NumberInput1, onChange: this.$NumberInput2, onFocus: this.$NumberInput3, onKeyUp: this.$NumberInput4, placeholder: w, value: t })); }; f.exports = l.create(s); }, null);
__d('CurrencyInput.atlas', ['Currency', 'FormBinding.atlas', 'NumberInput.atlas', 'PureRenderComponent.atlas', 'React', 'Text.atlas', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o) { if (c.__markCompiled) c.__markCompiled(); var p, q, r, s; 'use strict'; var t = l.PropTypes, u = { isBold: false, isZeroValidValue: false }, v = babelHelpers._extends({}, u, { isZeroValidValue: false }); p = babelHelpers.inherits(w, l.Component); q = p && p.prototype; w.propTypes = { binding: t.instanceOf(i).isRequired, isZeroValidValue: t.bool.isRequired, currency: t.string, minPrecision: t.number, maxPrecision: t.number }; w.defaultProps = v; function w(y, z) { q.constructor.call(this, y, z); this.$CurrencyInputFormWrapper1 = this.$CurrencyInputFormWrapper1.bind(this); } w.prototype.$CurrencyInputFormWrapper1 = function (y) { this.props.binding.update(y); }; w.prototype.render = function () { return (l.createElement(x, { className: this.props.className, currency: this.props.currency, isZeroValidValue: this.props.isZeroValidValue, maxPrecision: this.props.maxPrecision, minPrecision: this.props.minPrecision, onBlur: this.props.onBlur, onChange: this.$CurrencyInputFormWrapper1, onFocus: this.props.onFocus, onKeyUp: this.props.onKeyUp, value: this.props.binding.value })); }; r = babelHelpers.inherits(x, l.Component); s = r && r.prototype; x.propTypes = { isBold: t.bool.isRequired, isZeroValidValue: t.bool.isRequired, currency: t.string, disabled: t.bool, onBlur: t.func, onChange: t.func, onFocus: t.func, onKeyUp: t.func, minPrecision: t.number, maxPrecision: t.number, value: t.number }; x.defaultProps = u; x.FormWrapper = w; function x(y, z) { 'use strict'; s.constructor.call(this, y, z); this.$CurrencyInput1 = this.$CurrencyInput1.bind(this); } x.prototype.$CurrencyInput1 = function (y) { 'use strict'; this.props.onChange && this.props.onChange(y || 0); }; x.prototype.render = function () { 'use strict'; var y = this.props.value; if (!y) y = this.props.isZeroValidValue ? 0 : null; var z = null, aa = null; if (this.props.currency) { z = l.createElement(m, { className: "_3mef" + (y === null ? ' ' + "_35ka" : '') }, h.getSymbol(this.props.currency)); aa = "_35kc" + (this.props.isBold ? ' ' + "_g9l" : ''); } return (l.createElement('div', { className: o(this.props.className, aa) }, l.createElement(j, { disabled: this.props.disabled, isZeroValidValue: this.props.isZeroValidValue, maxPrecision: this.props.maxPrecision, minPrecision: this.props.minPrecision, onBlur: this.props.onBlur, onFocus: this.props.onFocus, onKeyUp: this.props.onKeyUp, onValueUpdated: this.$CurrencyInput1, value: y }), z)); }; f.exports = k.create(x); }, null);
__d('XUIDialogHeader.react', ['React', 'XUICardHeader.react', 'XUICloseButton.react', 'cx', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l) { if (c.__markCompiled) c.__markCompiled(); var m = h.PropTypes, n = h.createClass({ displayName: 'XUIDialogHeader', propTypes: { closeButtonText: m.string, showCloseButton: m.bool, activeTabKey: m.string, defaultActiveTabKey: m.string, onTabClick: m.func }, getDefaultProps: function () { return { closeButtonText: l._("Close"), onTabClick: function () { return true; }, showCloseButton: true }; }, render: function () { var o = null; if (this.props.showCloseButton) o = h.createElement(j, { label: this.props.closeButtonText, className: "layerCancel _51-t" }); return (h.createElement(i, babelHelpers._extends({}, this.props, { className: "_4-i0", link: o, type: 'primary' }), this.props.children)); } }); f.exports = n; }, null);
__d('PageCommerceStripeRedirectConfirmationDialog.react', ['React', 'XUIDialog.react', 'XUIDialogBody.react', 'XUIDialogButton.react', 'XUIDialogFooter.react', 'XUIDialogHeader.react', 'XUIDialogHeaderTitle.react', 'XUIText.react', 'cx', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var r = h.PropTypes, s = 500, t = h.createClass({ displayName: 'PageCommerceStripeRedirectConfirmationDialog', propTypes: { onContinue: r.func.isRequired }, getInitialState: function () { return { dialogShown: false }; }, render: function () { if (!this.state.dialogShown) return null; return (h.createElement(i, { width: s, onToggle: (function (u) { return this.setState({ dialogShown: u }); }).bind(this), shown: this.state.dialogShown }, h.createElement(m, null, h.createElement(n, null, q._("You Have Pending Orders"))), h.createElement(j, { className: "_2ph_" }, h.createElement(o, null, q._("Your shop has orders that haven't been shipped yet. If you connect to a different Stripe account, you'll no longer be able to receive payment for those orders. Consider completing and shipping your pending orders before changing the Stripe account for your shop."))), h.createElement(l, null, h.createElement(k, { label: q._("Change Stripe Account"), use: 'default', onClick: this.props.onContinue }), h.createElement(k, { label: q._("Cancel"), use: 'confirm', onClick: this.hide })))); }, show: function () { this.setState({ dialogShown: true }); }, hide: function () { this.setState({ dialogShown: false }); } }); f.exports = t; }, null);
__d("XCommerceSelfServeHasPendingOrdersQueryController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/commerce\/self-serve\/has-pending-orders\/", { page_id: { type: "Int", required: true } }); }, null);
__d('CommerceStripeConnectLink.react', ['AsyncRequest', 'DOM', 'DTSG', 'Link.react', 'PageCommerceStripeRedirectConfirmationDialog.react', 'React', 'ReactDOM', 'XStripeConnectBOFController', 'XCommerceSelfServeHasPendingOrdersQueryController', 'XUIText.react', 'cx'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) { if (c.__markCompiled) c.__markCompiled(); var s = m.PropTypes, t = m.createClass({ displayName: 'CommerceStripeConnectLink', propTypes: { confirmationURI: s.string, content: s.oneOfType([s.string, s.object]).isRequired, pageID: s.string.isRequired }, render: function () { var u = o.getURIBuilder().setInt('page_id', this.props.pageID).getURI(); return (m.createElement('span', null, m.createElement('form', { className: "hidden_elem", action: u, method: 'post', ref: 'connectStripeForm', target: '_blank' }, m.createElement('input', { type: 'hidden', name: 'fb_dtsg', value: j.getToken() })), m.createElement(k, { onClick: this._onClick.bind(this, (function () { return this.refs.connectStripeForm.submit(); }).bind(this)) }, m.createElement(q, { size: 'small' }, this.props.content)))); }, _onClick: function (u) { var v = p.getURIBuilder().setInt('page_id', this.props.pageID).getURI(); new h().setURI(v).setHandler(function (w) { var x = w.payload.has_pending_orders; if (x) { var y = n.render(m.createElement(l, { onContinue: function () { return u(); } }), i.create('div')); y.show(); } else u(); }).send(); } }); f.exports = t; }, null);
__d('CommerceExceptionHandlerMixin.react', ['AsyncRequest', 'CommerceErrorCode', 'CommerceErrorNotice.react', 'CommerceStripeConnectLink.react', 'React', 'URI', 'XCommerceResponse', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var p = { getInitialState: function () { return { xResponse: null }; }, sendAsync: function (q, r, s, t) { new h(q).setData(r || {}).setHandler((function (u) { var v = new n(u.payload); this.setState({ xResponse: v }); if (!v.hasErrors()) { s && s(u); } else t && t(u); }).bind(this)).setErrorHandler((function (u) { this.setGeneralError(i.COMMERCE__GENERIC_EXCEPTION); t && t(u); }).bind(this)).send(); }, setGeneralError: function (q) { var r = this.state.xResponse ? this.state.xResponse : new n({}); r.setGeneralError(q); this.setState({ xResponse: r }); }, addFieldError: function (q, r) { var s = this.state.xResponse ? this.state.xResponse : new n({}); s.addFieldError(q, r); this.setState({ xResponse: s }); }, _getFullErrorMessage: function (q) { if (!q) return null; if (q.code.toString() === i.COMMERCE__STRIPE_DEFERRED_ACCOUNT_EMAIL_USED.code.toString()) { var r = o._("connect your shop with an existing account"); return o._("A Stripe account with this email address already exists. Please use a different email address or {connect to a different Stripe account link}.", [o.param('connect to a different Stripe account link', l.createElement(k, { pageID: this.props.pageID, content: r }))]); } return q.title + ': ' + q.message; }, hasErrors: function () { return !!this.state.xResponse && this.state.xResponse.hasErrors(); }, hasGeneralError: function () { return !!this.state.xResponse && this.state.xResponse.hasGeneralError(); }, hasFieldErrors: function () { return !!this.state.xResponse && this.state.xResponse.hasFieldErrors(); }, renderAllErrors: function () { var q = this.state.xResponse, r = []; if (this.hasFieldErrors()) { var s = q.getFieldErrors(); s.forEach(function (u) { return r.push(u); }); } if (this.hasGeneralError()) r.push(q.getGeneralError()); var t = r.map((function (u) { return this._getFullErrorMessage(u); }).bind(this)); return this.renderErrorMessages(t); }, renderGeneralError: function () { if (this.hasGeneralError()) { return this.renderErrorMessages([this.getGeneralErrorMessage()]); } else return null; }, renderErrorMessages: function (q) { if (q.length === 0) { return null; } else { var r = l.createElement('ul', null, q.map(function (s) { return l.createElement('li', null, s); })); return l.createElement(j, { error: r }); } }, getGeneralErrorMessage: function () { if (this.hasGeneralError) { var q = this.state.xResponse.getGeneralError(); return this._getFullErrorMessage(q); } else return null; }, getFieldErrorMessage: function (q) { if (!this.hasFieldErrors()) return null; return this._getFullErrorMessage(this.state.xResponse.getFieldErrors()[q]); } }; f.exports = p; }, null);
__d('BOFSellerLogger', ['BanzaiLogger', 'Event'], function a(b, c, d, e, f, g, h, i) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var j = 'BOFSellerLoggerConfig', k = { log: function (l, m, n) { n.event = l; n.seller_profile_id = m; h.log(j, n); }, initClickListener: function (l, m, n, o) { i.listen(l, 'click', (function () { return this.log(m, n, o); }).bind(this)); } }; f.exports = k; }, null);
__d('CommerceSelfServeProductTaxRatesTable.react', ['AdsNumberInput.react', 'CheckboxInput.atlas', 'CommerceUSAStates', 'Image.react', 'React', 'TextInput.atlas', 'XUIButton.react', 'XUITable.react', 'cx', 'fbt', 'invariant', 'xuiglyph'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) { if (c.__markCompiled) c.__markCompiled(); var t = l.PropTypes, u = l.createClass({ displayName: 'CommerceSelfServeProductTaxRatesTable', propTypes: { taxRates: t.object.isRequired, onChangeTaxRates: t.func.isRequired }, getInitialState: function () { return { newRateLocationError: false, newTaxRateLocation: '', newTaxRatePercentage: 0, newIsAppliedToShipping: false, showNewRateRow: false }; }, render: function () { var v = []; for (var w in this.props.taxRates) { var x = this.props.taxRates[w]; for (var y in x) v[v.length] = this._getTaxRateRow(y, x[y]); } v[v.length] = this._getTaxRateInput(); return (l.createElement('div', null, l.createElement(o, { outerBorder: true }, l.createElement('thead', null, l.createElement('tr', null, l.createElement('th', null, q._("Location")), l.createElement('th', null, q._("Tax Rate")), l.createElement('th', null, q._("Apply tax to shipping cost?")), l.createElement('th', null))), l.createElement('tbody', null, v)))); }, _getTaxRateRow: function (v, w) { return (l.createElement('tr', { key: 'tax_rate_' + v }, l.createElement('td', null, l.createElement('span', null, v)), l.createElement('td', null, l.createElement(h, { value: this._convertDecimalToPercent(w.tax_rate, 3), suffix: '%', className: "_2263", onChange: (function (x) { if (x !== null) { x = this._convertPercentToDecimal(x, 3); this._setTaxRate(v, x, w.is_applied_to_shipping); } }).bind(this) })), l.createElement('td', null, l.createElement(i, { label: w.is_applied_to_shipping ? q._("Yes") : q._("No"), value: w.is_applied_to_shipping, onChange: (function (x) { this._setTaxRate(v, w.tax_rate, x); }).bind(this) })), l.createElement('td', { className: "_5rpt" }, l.createElement(k, { className: "_ksy _3-9b", src: s({ name: 'cross', size: 'small', shade: 'dark' }), onClick: (function () { this._removeTaxRate(v); }).bind(this) })))); }, _getTaxRateInput: function () { return (l.createElement('tr', { key: 'new_tax_rate_row' }, l.createElement('td', null, l.createElement(m, { className: "_2263", onChange: (function (v) { this.setState({ newTaxRateLocation: v.toUpperCase() }); }).bind(this) })), l.createElement('td', null, l.createElement(h, { value: this._convertDecimalToPercent(this.state.newTaxRatePercentage, 3), suffix: '%', className: "_2263", onChange: (function (v) { if (v !== null) { v = this._convertPercentToDecimal(v, 3); this.setState({ newTaxRatePercentage: v }); } }).bind(this) })), l.createElement('td', null, l.createElement(i, { label: this.state.newIsAppliedToShipping ? q._("Yes") : q._("No"), value: this.state.newIsAppliedToShipping, onChange: (function (v) { this.setState({ newIsAppliedToShipping: v }); }).bind(this) })), l.createElement('td', { className: "_5rpt" }, l.createElement(n, { label: q._("Confirm"), use: 'confirm', disabled: !this._isValidLocation(this.state.newTaxRateLocation), onClick: this._handleSaveNewTaxRate })))); }, _removeTaxRate: function (v) { var w = this._getLocationType(v), x = this.props.taxRates; delete x[w][v]; this.props.onChangeTaxRates(x); }, _setTaxRate: function (v, w, x) { var y = this._getLocationType(v), z = this.props.taxRates; z[y][v] = { tax_rate: w, is_applied_to_shipping: x }; this.props.onChangeTaxRates(z); }, _handleSaveNewTaxRate: function () { var v = this.state.newTaxRateLocation; this._setTaxRate(v, this.state.newTaxRatePercentage, this.state.newIsAppliedToShipping); this.setState({ newTaxRatePercentage: 0, newTaxRateLocation: '', newIsAppliedToShipping: false }); }, _getLocationType: function (v) { !this._isValidLocation(v) ? r(0) : undefined; if (this._isValidZipCode(v)) { return 'zip_code'; } else return 'state_abbr'; }, _convertDecimalToPercent: function (v, w) { var x = Math.round(v * Math.pow(10, w + 2)); return x / Math.pow(10, w); }, _convertPercentToDecimal: function (v, w) { var x = Math.round(v * Math.pow(10, w)); return x / Math.pow(10, w + 2); }, _isValidLocation: function (v) { return this._isValidZipCode(v) || this._isValidStateAbbr(v); }, _isValidZipCode: function (v) { var w = /^[0-9]{5}$/; return v.match(w) !== null; }, _isValidStateAbbr: function (v) { var w = 'STATE_'; return w + v in j; } }); f.exports = u; }, null);
__d('SearchableListPrompt.contrib', ['AbstractSearchSource', 'AbstractTypeahead.react', 'Layout.react', 'React', 'ReactDOM', 'ReactComponentWithPureRenderMixin', 'Scroll', 'SearchableEntry', 'Set', 'Text.atlas', 'TextWithHighlights.atlas', 'TypeaheadViewItem', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var v = c('Layout.react').Column, w = c('Layout.react').FillColumn, x = 100, y = k.PropTypes, z = k.createClass({ displayName: 'SearchableListPrompt', propTypes: { onSelect: y.func.isRequired, resetQueryStringOnSelect: y.bool.isRequired, searchSource: y.instanceOf(h).isRequired, disabledEntryIDs: y.instanceOf(p), emptySearchResultsText: y.node, excludedEntries: y.object, header: y.node, placeholder: y.node, searchSourceOptions: y.object, selectedEntry: y.instanceOf(o), showEntriesBeforeSearch: y.bool }, mixins: [m], getDefaultProps: function () { return { resetQueryStringOnSelect: false }; }, getInitialState: function () { return { queryString: '' }; }, _onChange: function (event) { var da = event.target; this.setState({ queryString: da.value }); }, _onSelect: function (da) { this.props.onSelect(da); if (this.props.resetQueryStringOnSelect) this.setState({ queryString: '' }); }, focusInput: function () { this.refs && this.refs.typeahead.focusInput(); }, render: function () { return (k.createElement('div', { className: u(this.props.className, "_4ktx") }, k.createElement(aa, { disabledEntryIDs: this.props.disabledEntryIDs, emptySearchResultsText: this.props.emptySearchResultsText, excludedEntries: this.props.excludedEntries, header: this.props.header, onChange: this._onChange, onSelectAttempt: this._onSelect, placeholder: this.props.placeholder, queryString: this.state.queryString, ref: 'typeahead', searchSource: this.props.searchSource, searchSourceOptions: this.props.searchSourceOptions, selectedEntry: this.props.selectedEntry, showEntriesBeforeSearch: this.props.showEntriesBeforeSearch }))); } }), aa = k.createClass({ displayName: 'InlineTypeahead', propTypes: { onChange: y.func.isRequired, onSelectAttempt: y.func.isRequired, searchSource: y.object.isRequired, disabledEntryIDs: y.instanceOf(p), emptySearchResultsText: y.string, excludedEntries: y.object, header: y.node, onBlur: y.func, onFocus: y.func, placeholder: y.string, queryString: y.string, searchSourceOptions: y.object, selectedEntry: y.instanceOf(o), showEntriesBeforeSearch: y.bool }, mixins: [m], getInitialState: function () { return { isFocused: false }; }, _onFocus: function () { this.setState({ isFocused: true }); this.props.onFocus && this.props.onFocus(); }, _onBlur: function () { this.setState({ isFocused: false }); this.props.onBlur && this.props.onBlur(); }, focusInput: function () { this.refs.typeahead.focusInput(); }, render: function () { var da = "_4kty" + (this.state.isFocused ? ' ' + "_4ktz" : '') + (!!this.props.header ? ' ' + "_5lly" : ''); return (k.createElement('div', { className: this.props.className, 'data-testid': 'SearchableListPrompt-contrib/root' }, this.props.header ? k.createElement(q, { className: "_2pi3 _2pi9", color: 'dark', display: 'block', size: 's' }, this.props.header) : null, k.createElement(i, { autoHighlight: true, excludedEntries: this.props.excludedEntries, hideViewWithEntries: false, inputClassName: da, onBlur: this._onBlur, onChange: this.props.onChange, onFocus: this._onFocus, onSelectAttempt: this.props.onSelectAttempt, placeholder: this.props.placeholder, presenter: { ViewRenderer: ba, alwaysVisibleOnFocus: !!this.props.emptySearchResultsText, extraRendererProps: { disabledEntryIDs: this.props.disabledEntryIDs, emptySearchResultsText: this.props.emptySearchResultsText, showEntriesBeforeSearch: this.props.showEntriesBeforeSearch }, maxEntries: x, useLayer: false }, queryString: this.props.queryString, ref: 'typeahead', searchSource: this.props.searchSource, searchSourceOptions: this.props.searchSourceOptions, selectedEntry: this.props.selectedEntry, selectOnBlur: false, showEntriesOnFocus: true }))); } }), ba = k.createClass({ displayName: 'InlineTypeaheadView', propTypes: { entries: y.array.isRequired, onSelect: y.func.isRequired, disabledEntryIDs: y.instanceOf(p), emptySearchResultsText: y.string, highlightedEntry: y.object, onHighlight: y.func, onRenderHighlight: y.func, queryString: y.string, selectedEntry: y.object, showEntriesBeforeSearch: y.bool }, getDefaultProps: function () { return { showEntriesBeforeSearch: true }; }, mixins: [m], _renderItem: function (da) { var ea = da.getUniqueID(), fa = this.props.highlightedEntry ? this.props.highlightedEntry.getUniqueID() : null, ga = this.props.selectedEntry ? this.props.selectedEntry.getUniqueID() : null, ha = ea === fa, ia = ea === ga, ja = this.props.disabledEntryIDs && this.props.disabledEntryIDs.has(ea); return (k.createElement(ca, { disabled: ja, entry: da, highlighted: ha, key: da.getUniqueID(), selected: ia, onSelect: this.props.onSelect, onHighlight: this.props.onHighlight, onRenderHighlight: this.props.onRenderHighlight, queryString: this.props.queryString })); }, _onMouseLeave: function (event) { if (this.props.onHighlight) this.props.onHighlight(null, event); }, render: function () { var da = null, ea = this.props.entries.length && (this.props.showEntriesBeforeSearch || this.props.queryString); if (ea) { da = this.props.entries.map(this._renderItem); } else if (this.props.queryString) da = k.createElement('li', null, k.createElement(q, { className: "_4kt-", color: 'light', size: 's' }, this.props.emptySearchResultsText)); return (k.createElement('ul', { className: u(this.props.className, "_4kt_"), 'data-testid': 'SearchableListPrompt/itemList', onMouseLeave: this._onMouseLeave }, da)); } }), ca = k.createClass({ displayName: 'InlineTypeaheadViewItem', mixins: [babelHelpers._extends({}, s.Mixin, m)], propTypes: s.propTypes, componentDidUpdate: function () { var da = l.findDOMNode(this); if (this.props.highlighted) { var ea = da.offsetParent, fa = ea && da.offsetTop < n.getTop(ea) + ea.offsetHeight && da.offsetTop + da.offsetHeight > n.getTop(ea); if (!fa) da.scrollIntoView(false); } }, render: function () { var da = this.props.entry.getSubtitle(), ea = k.createElement('div', null, k.createElement(r, { className: "_4ku0", highlight: this.props.queryString, text: this.props.entry.getTitle(), size: 's', color: this.props.disabled ? 'light' : 'dark', display: 'block' }), da ? k.createElement(r, { className: "_4ku1", color: 'light', display: 'block', highlight: this.props.queryString, size: 's', text: da }) : null), fa = this.props.disabled ? k.createElement(j, null, k.createElement(w, null, ea), k.createElement(v, null, k.createElement(q, { size: 's', color: 'light', display: 'block' }, ' ? '))) : ea, ga = "_4ku2" + (this.props.highlighted ? ' ' + "_4ku3" : '') + (this.props.selected ? ' ' + "_4ku4" : '') + (!da ? ' ' + "_4ku5" : ''); return (k.createElement('li', { className: ga, 'data-testid': 'SearchableListPrompt/item', onMouseDown: this._onSelect, onMouseEnter: this._onHighlight }, fa)); } }); f.exports = z; }, null);
__d('SearchableDropdownInput.contrib', ['AbstractSearchSource', 'Card.atlas', 'ContextualLayer.react', 'ContextualLayerAutoFlip', 'ContextualLayerHideOnScrollOverHeader.atlas', 'ContextualLayerUpdateOnScroll', 'Keys', 'LayerAutoFocus', 'LayerHideOnBlur', 'LayerHideOnEscape', 'React', 'ReactDOM', 'ReactComponentWithPureRenderMixin', 'ReactLayeredComponentMixin', 'SearchableListPrompt.contrib', 'Set', 'Text.atlas', 'XUIPopoverButton.react', 'cx', 'joinClasses'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var ba = r.PropTypes, ca = r.createClass({ displayName: 'SearchableDropdownInput', propTypes: { onSelect: ba.func.isRequired, resetQueryStringOnSelect: ba.bool.isRequired, searchSource: ba.instanceOf(h).isRequired, showSelectedSubtitle: ba.bool.isRequired, 'data-testid': ba.string, customHeader: ba.element, chevron: ba.element, disabled: ba.bool, disabledEntryIDs: ba.instanceOf(w), dropdownWidth: ba.number, emptySearchResultsText: ba.string, excludedEntries: ba.object, header: ba.node, placeholder: ba.string, searchSourceOptions: ba.object, showEntriesBeforeSearch: ba.bool, skipAutoWidth: ba.bool, title: ba.string }, mixins: [t, u], getDefaultProps: function () { return { resetQueryStringOnSelect: false, showSelectedSubtitle: true }; }, getInitialState: function () { return { isShowing: false }; }, _onLayerToggle: function (da) { if (!da && this.state.isShowing) { this.setState({ isShowing: false }); this.focusInput(); } }, _toggleLayer: function () { if (!this.props.disabled) this.setState({ isShowing: !this.state.isShowing }); }, _onKeyDown: function (event) { switch (event.keyCode) { case n.DOWN: case n.UP: case n.SPACE: this.setState({ isShowing: true }); break; } }, open: function () { this.setState({ isShowing: true }); }, close: function () { this.setState({ isShowing: false }); }, focusInput: function () { this.refs && s.findDOMNode(this.refs.button).focus(); }, _onSelect: function (da) { this.setState({ isShowing: false }); this.focusInput(); this.props.onSelect(da); }, renderLayers: function () { var da; if (!this.props.skipAutoWidth) da = s.findDOMNode(this.refs.button).offsetWidth; da = this.props.dropdownWidth || da || null; return { prompt: r.createElement(j, { behaviors: { ContextualLayerAutoFlip: k, ContextualLayerUpdateOnScroll: m, ContextualLayerHideOnScrollOverHeader: l, LayerAutoFocus: o, LayerHideOnBlur: p, LayerHideOnEscape: q }, contextRef: (function () { return this.refs.button; }).bind(this), position: 'below', alignment: 'left', offsetY: 4, shown: this.state.isShowing, autofocus: true, onToggle: this._onLayerToggle }, r.createElement('div', { style: { width: da }, className: this.props.divClassName, onFocus: this.props.onFocus }, r.createElement(i, { className: this.props.listClassName, contentPadding: 'none' }, this.props.customHeader, r.createElement(v, { disabledEntryIDs: this.props.disabledEntryIDs, emptySearchResultsText: this.props.emptySearchResultsText, excludedEntries: this.props.excludedEntries, header: this.props.header, onSelect: this._onSelect, resetQueryStringOnSelect: this.props.resetQueryStringOnSelect, searchSource: this.props.searchSource, searchSourceOptions: this.props.searchSourceOptions, selectedEntry: this.props.value, showEntriesBeforeSearch: this.props.showEntriesBeforeSearch })))) }; }, render: function () { var da = this.props.placeholder, ea = this.props.value; if (ea) { var fa = this.props.title || ea.getTitle(), ga = this.props.showSelectedSubtitle && ea.getSubtitle() ? r.createElement(x, { color: 'light', size: 's' }, ' ', ea.getSubtitle()) : null; da = r.createElement('span', null, fa, ga); } return (r.createElement(y, { className: aa(this.props.className, "__yl"), chevron: this.props.chevron, 'data-testid': this.props['data-testid'], disabled: this.props.disabled, ref: 'button', label: da, onClick: this._toggleLayer, onKeyDown: this._onKeyDown, size: 'large', maxwidth: null })); } }); f.exports = ca; }, null);
__d('BUIPresetFilters.react', ['BUIPopoverSection.react', 'BUIPresetFilterModes', 'BUIPresetFiltersGroup', 'cssVar', 'Image.react', 'immutable', 'ImmutableObject', 'BUIPresetFiltersSelectableItem.react', 'React', 'ReactDOM', 'ReactComponentWithPureRenderMixin', 'ResponsiveBlock.react', 'BUIPresetFiltersUniqueItem.react', 'curry', 'cx', 'ix'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var x = p.PropTypes, y = "32", z = p.createClass({ displayName: 'BUIPresetFilters', mixins: [r], propTypes: { className: x.string, filterGroups: x.arrayOf(x.instanceOf(j)).isRequired, heightList: x.instanceOf(m.List), shouldAnimate: x.bool, uniqueFilters: x.array, mode: i.propTypes.isRequired }, getDefaultProps: function () { return { mode: i.DRAWER }; }, getInitialState: function () { return { heightList: m.List(), prevSelected: -1, selected: 0 }; }, render: function () { return (p.createElement('div', { className: (this.isDrawer() ? "_1g0m" : '') + (this.isPopover() ? ' ' + "_1g0n" : '') }, this._renderSections(), this._renderUniqueFilters())); }, _renderSections: function () { return this.props.filterGroups.map((function (ca, da) { var ea = p.createElement(aa, { shouldAnimate: this.props.shouldAnimate, className: ca.isCollapsible() ? "_1h0s" : '', group: ca, key: ca.getID(), mode: this.props.mode, isPrev: this.state.prevSelected === da, isHidden: this.isDrawer() ? false : this.state.selected !== da, onHeaderClick: this._onSectionHeaderClick.bind(this, da), ref: da }); if (this.props.shouldAnimate) { var fa, ga = this.state.heightList.get(da, 0); if (ga !== undefined) fa = { height: ga, marginTop: -1 * ga }; var ha = p.createElement('div', { className: "_3ojj", key: 'placeHolder', style: fa }); return (p.createElement(s, { key: ca.getID(), onResize: (function () { return this._setHeight(da); }).bind(this) }, ea, ha)); } else return (p.createElement('div', { key: ca.getID() }, ea)); }).bind(this)); }, _renderUniqueFilters: function () { if (!this.props.uniqueFilters) return null; return this.props.uniqueFilters.map(function (ca, da) { return p.createElement(t, babelHelpers._extends({}, ca, { key: da })); }); }, isDrawer: function () { return this.props.mode === i.DRAWER; }, isPopover: function () { return this.props.mode === i.POPOVER; }, _setHeight: function (ca) { if (this.state.prevSelected !== ca && (this.state.heightList.get(ca) === 0 || this.state.heightList.get(ca) === undefined)) { var da = q.findDOMNode(this.refs[ca]).offsetHeight; if (da > y) { var ea = this.state.prevSelected; if (ea === -1 && ca !== 0) ea = 0; var fa = this.state.heightList.set(ca, da); if (ea !== -1) fa = fa.set(ea, 0); this.setState({ heightList: fa, prevSelected: ea }); } } }, _onSectionHeaderClick: function (ca) { if (!this.isPopover()) return; this.setState({ prevSelected: this.state.selected }); if (this.state.selected === ca) { var da = this.state.heightList.set(ca, 0); this.setState({ heightList: da }); } var ea = this.state.selected === ca && this.state.selected !== undefined ? { selected: undefined } : { selected: ca }; this.setState(ea); } }), aa = p.createClass({ displayName: 'Section', mixins: [r], propTypes: { group: x.instanceOf(j).isRequired, isHidden: x.bool, isPrev: x.bool, mode: i.propTypes.isRequired, onHeaderClick: x.func, shouldAnimate: x.bool }, getInitialState: function () { return this._calculateState(this.props, {}); }, componentWillReceiveProps: function (ca) { this.setState(this._calculateState(ca, this.state)); }, _calculateState: function (ca, da) { var ea = ca.group, fa = ca.isHidden != null ? ca.isHidden : da.isHidden != null ? da.isHidden : ea.isHidden(), ga = {}; if (ea.getMaxItemCount()) { var ha = ea.getFilters().slice(0); ha.sort(ea.doCompare.bind(ea)); ha.forEach(function (ia, ja) { ga[ia.getID()] = ja + 1; }); } return { filterIDToRankMap: new n(ga), howManyToShow: da.howManyToShow || ea.getMaxItemCount(), isHidden: fa }; }, _onHeaderClick: function () { this.setState({ isHidden: !this.state.isHidden }); this.props.onHeaderClick && this.props.onHeaderClick(); }, _getSelectedFilters: function (ca, da) { return this.props.group.getFilters().filter(function (ea) { if (ea.getID() === ca.getID()) return da; return ea.isChecked(); }); }, _onFilterClick: function (ca) { var da = !ca.isChecked(); this.props.group.doOnChange(this._getSelectedFilters(ca, da), [ca], da); }, _onHeaderCheckmarkClick: function () { var ca = false, da = []; this.props.group.getFilters().forEach(function (ea) { if (ea.isChecked()) { da.push(ea); ca = true; } }); if (ca) this.props.group.doOnChange([], da, false); }, _renderItems: function (ca) { return (p.createElement('ul', { className: "_5q8z" }, ca.map((function (da) { return (p.createElement(o, { checked: da.isChecked(), disabled: da.isDisabled(), key: da.getID(), mode: this.props.mode, onClick: u(this._onFilterClick, da), onDelete: da.canBeDeleted() ? da.doOnDelete.bind(da) : null, text: da.getText() })); }).bind(this)))); }, _renderShowMoreLink: function (ca) { return p.createElement(ba, { group: ca, onClick: this._onShowMoreLinkClick }); }, _onShowMoreLinkClick: function (ca) { var da = this.state.howManyToShow; da += ca.getMaxItemCount(); this.setState({ howManyToShow: da }); }, render: function () { var ca = this.props.group, da = ca.getFilters(), ea = this.state.howManyToShow, fa = null, ga = ea && da.length > ea; if (ga && !this.state.isHidden) { da = da.filter((function (ha) { return this.state.filterIDToRankMap[ha.getID()] <= ea; }).bind(this)); fa = this._renderShowMoreLink(ca); } return (p.createElement(h, { className: this.props.className, id: ca.getID(), isHidden: this.state.isHidden, isAnyChecked: ca.getFilters().some(function (ha) { return ha.isChecked(); }), isCollapsible: ca.isCollapsible(), onCheckmarkClick: u(this._onHeaderCheckmarkClick, ca), onTextClick: u(this._onHeaderClick, ca), mode: this.props.mode, shouldAnimate: this.props.shouldAnimate, title: ca.getTitle(), renderItems: u(this._renderItems, da) }, fa)); } }), ba = p.createClass({ displayName: 'ShowMoreLink', propTypes: { group: x.instanceOf(j).isRequired }, _onClick: function (event) { event.preventDefault(); this.props.onClick(this.props.group); }, render: function () { return (p.createElement('div', { className: "_5q8_", onClick: this._onClick }, p.createElement(l, { className: "_1jqd", src: w('images/deprecated/glyphs/dark/3-dots_s-2x.png') }))); } }); f.exports = z; }, null);
__d('FreeformSearchSource', ['AbstractSearchSource', 'RegexMatchSearchSource', 'SearchableEntry'], function a(b, c, d, e, f, g, h, i, j) { if (c.__markCompiled) c.__markCompiled(); var k, l; k = babelHelpers.inherits(m, h); l = k && k.prototype; function m(n, o, p) { 'use strict'; l.constructor.call(this); this.$FreeformSearchSource1 = n; this.$FreeformSearchSource2 = new i('\\S+'); this.$FreeformSearchSource3 = o; this.$FreeformSearchSource4 = p; } m.prototype.getBootstrappedEntries = function (n) { 'use strict'; return this.$FreeformSearchSource1.getBootstrappedEntries(n); }; m.prototype.bootstrapImpl = function (n) { 'use strict'; this.$FreeformSearchSource1.bootstrapImpl(n); }; m.prototype.validateQuery = function (n) { 'use strict'; return n.length >= this.$FreeformSearchSource4; }; m.prototype.searchImpl = function (n, o, p) { 'use strict'; this.$FreeformSearchSource2.searchImpl(n, (function (q, r) { var s = []; if (q.length === 1 && this.validateQuery(r)) { s = [new j({ uniqueID: q[0].getUniqueID(), title: this.$FreeformSearchSource3(q[0].getTitle().trim()) })]; o(s, n); } this.$FreeformSearchSource1.searchImpl(n, function (t, u) { if (t.length > 0) o(t.concat(s), u); }, p); }).bind(this), p); }; f.exports = m; }, null);
__d('PostExpireDialogBody.react', ['ActorURI', 'AsyncRequest', 'DatePickerRestraints', 'Dialog', 'ExpirationType', 'FBToggleSwitch.react', 'HelpLink.react', 'InputLabel.react', 'React', 'ReloadPage', 'XPagePostExpirationController', 'XUICard.react', 'XUICardSection.react', 'XUICheckboxInput.react', 'XUIDateTimePicker.react', 'XUIDialogBody.react', 'XUIDialogButton.react', 'XUIDialogCancelButton.react', 'XUIDialogFooter.react', 'XUIGrayText.react', 'XUINotice.react', 'cx', 'fbt', 'requiredIfPropIsFalsy'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ba, ca, da, ea) { if (c.__markCompiled) c.__markCompiled(); var fa = p.PropTypes, ga = 60 * 1000, ha = 60 * ga, ia = 24 * ha, ja = 182 * ia + 12 * ha, ka = 5 * ga + 30 * 1000, la = p.createClass({ displayName: 'PostExpireDialogBody', propTypes: { originalExpirationTimestamp: fa.number, originalExpirationType: fa.number, timezone: fa.string.isRequired, onSubmit: fa.func, isRepublish: fa.bool, submitLabel: fa.string, postID: ea('onSubmit', fa.number), pageID: ea('onSubmit', fa.number) }, getInitialState: function () { return { expirationDate: this.props.originalExpirationTimestamp ? new Date(this.props.originalExpirationTimestamp) : new Date(Date.now() + ha), expirationType: this.props.originalExpirationType ? this.props.originalExpirationType : l.HIDE, expirationToggle: this.props.originalExpirationTimestamp ? true : false }; }, render: function () { var ma = this.props.submitLabel ? this.props.submitLabel : this.props.isRepublish ? da._("Republish") : da._("Save"), na = this.props.isRepublish ? p.createElement(ba, null, da._("Republishing this post will make it visible to the public. You can set a new expiration time here to make the post expire again later.")) : null, oa = this.state.expirationToggle ? da._("Turn Off to Cancel Expiration") : da._("Turn On to Schedule Expiration"), pa = da._("When a post expires it will unpublish, which means it will no longer be visible to the public. Page admins can still view unpublished posts and their Insights."), qa = this._renderInvalidTimeNotice(); return (p.createElement(s, { className: "_3-4u" }, na, p.createElement(w, null, p.createElement(o, null, p.createElement(m, { checked: this.state.expirationToggle, onToggle: this._expireToggleChange, tooltip: oa }), p.createElement('label', null, da._("Expire"), p.createElement(n, { tooltip: pa, alignv: 'bottom' }))), this._renderExpire(), qa), p.createElement(z, null, p.createElement(y, null), p.createElement(x, { action: 'confirm', onClick: this._onSubmitClick, disabled: qa !== null || !this._hasChanges(), label: ma, use: 'confirm' })))); }, _renderExpire: function () { if (!this.state.expirationToggle) return null; return (p.createElement(s, { background: 'light-wash', className: "_3-8n" }, p.createElement(t, { className: "_2ph-" + (' ' + "_3-8x") + (' ' + "_3-4v") }, p.createElement(v, { dateRestraints: [j.enforceDateIsNoEarlierThan(new Date(Date.now() - ia)), j.enforceDateIsNoLaterThan(new Date(Date.now() + ja))], date: this.state.expirationDate, onChange: this._onExpirationDateChange, timezone: this.props.timezone })), p.createElement(t, { className: "_2ph-" + (' ' + "_3-8x") + (' ' + "_3-4v") }, p.createElement(o, { className: "_3-8x" }, p.createElement(u, { checked: this.state.expirationType === l.DELETE, onChange: this._handleExpirationTypeChanged }), p.createElement('label', null, p.createElement(aa, { shade: 'light', size: 'small', weight: 'normal' }, da._("Delete the post. Permanently remove the post and its insights at the scheduled time."))))))); }, _renderInvalidTimeNotice: function () { var ma = this._isAbsoluteTimeValid(), na = this._isRelativeTimeValid(), oa = ma && na; if (oa) return null; if (this._isExpirationTimeTheSame()) return null; var pa = null; if (!ma) { pa = da._("Posts need to be expired between 10 minutes and 6 months from now."); } else if (!na) pa = da._("Your new expiration should be more than 6 mins apart from your old expiration time."); return (p.createElement(ba, { use: 'warn', className: "_3-8x" }, pa)); }, _isAbsoluteTimeValid: function () { if (!this.state.expirationToggle) return true; var ma = this.state.expirationDate.getTime(), na = Date.now() + 10 * ga, oa = Date.now() + ja; return (ma >= na && ma <= oa); }, _isRelativeTimeValid: function () { if (!this.state.expirationToggle || !this.props.originalExpirationTimestamp) return true; var ma = this.state.expirationDate.getTime(); return (ma >= this.props.originalExpirationTimestamp || ma < this.props.originalExpirationTimestamp - ka); }, _expireToggleChange: function () { this.setState({ expirationToggle: !this.state.expirationToggle }); }, _onExpirationDateChange: function (ma) { this.setState({ expirationDate: ma }); }, _handleExpirationTypeChanged: function (event) { var ma = event.target.checked ? l.DELETE : l.HIDE; this.setState({ expirationType: ma }); }, _onSubmitClick: function () { var ma; if (this.props.onSubmit) return this._handleSubmitPassed(); if (this.state.expirationToggle) { ma = { post_id: this.props.postID, expiration_time: this._isExpirationTimeTheSame() ? null : Math.floor(this.state.expirationDate.getTime() / 1000), expiration_type: this.state.expirationType }; this._submitPostExpirationData(ma); } else if (this.props.originalExpirationTimestamp || this.props.isRepublish) { ma = { post_id: this.props.postID, expiration_time: 0 }; this._submitPostExpirationData(ma); } }, _handleSubmitPassed: function () { if (this.state.expirationToggle) { var ma = this._isExpirationTimeTheSame() ? null : Math.floor(this.state.expirationDate.getTime() / 1000), na = this.state.expirationType; this.props.onSubmit(ma, na); } else if (this.props.originalExpirationTimestamp || this.props.isRepublish) this.props.onSubmit(0, null); }, _isExpirationTimeTheSame: function () { if (!this.props.originalExpirationTimestamp) return false; var ma = this.props.originalExpirationTimestamp - ga, na = this.props.originalExpirationTimestamp + ga, oa = this.state.expirationDate.getTime(); return (oa > ma && oa < na); }, _onSubmitResponseError: function () { var ma = 'We encountered an error while performing this operation'; new k().setBody(ma).setButtons([k.OK]).show(); }, _submitPostExpirationData: function (ma) { var na = r.getURIBuilder().getURI(); na = h.create(na, this.props.pageID); new i().setURI(na).setMethod('POST').setData(ma).setHandler(function () { return q.now(); }).setErrorHandler(this._onSubmitResponseError).send(); }, _hasChanges: function () { var ma = null != this.props.originalExpirationTimestamp, na = this.state.expirationToggle != ma, oa = Math.floor(this.props.originalExpirationTimestamp / ga), pa = Math.floor(this.state.expirationDate.getTime() / ga), qa = pa != oa, ra = this.state.expirationType != this.props.originalExpirationType; return (na || qa || ra || this.props.isRepublish); } }); f.exports = la; }, null);
__d('InsightsConstants', ['UTCUtils', 'fbt', 'uki-utils'], function a(b, c, d, e, f, g, h, i, j) { if (c.__markCompiled) c.__markCompiled(); var k = { blue: '#3b5998', green: '#a9bc60', magenta: '#a856a1', teal: '#5d9d90', brown: '#886d4f' }, l = { API_ERROR_NUM_RETRIES: 2, SEC_PER_DAY: 24 * 60 * 60, MS_PER_DAY: 24 * 60 * 60 * 1000, MS_PER_MINUTE: 60 * 1000, DAYS_TO_LOOK_BACK: 7, INSIGHTS_CUTOFF_TIME: 1311058800, DEMOGRAPHICS_MIN_DATE_REACH: 1315119600, DEMOGRAPHICS_MIN_PEOPLE_COUNT: 30, CHECKINS_TYPE_MIN_DATE_TIMESTAMP: 1320217200 * 1000, FOLLOWS_MIN_DATE_TIMESTAMP: 1343804400 * 1000, MIN_FOLLOWERS_FOR_INSIGHTS: 1000, MissingValueString: '--', Periods: ['day', 'week', 'days_28'], DaysInPeriod: { day: 1, week: 7, days_28: 28 }, ReachTypeLabel: { total: i._("Total"), organic: i._("Organic"), paid: i._("Paid"), viral: i._("Viral") }, ReachSourceTypes: ['all', 'page_posts', 'stories'], ReachSourceTypeSelectorText: { all: i._("All Page Content"), page_posts: i._("Your Posts"), stories: i._("Stories by Others") }, BREAKDOWN_LIST_LENGTH_INITIAL: 7, BREAKDOWN_LIST_LENGTH_MAX: 20, BreakdownStoryTypes: ['all', 'fan', 'page post', 'mention', 'user post'], BreakdownStoryTypesOptional: ['question', 'coupon', 'checkin'], BreakdownStoryTypeSelectorText: { all: i._("All Stories"), fan: i._("Page Likes"), 'page post': i._("Stories from Your Posts"), mention: i._("Mentions and Photo Tags"), 'user post': i._("Posts by Others"), checkin: i._("Check-Ins"), question: i._("Questions"), coupon: i._("Offers") }, PostStoryTypes: { like: i._("Likes"), comment: i._("Comments"), answer: i._("Answers"), follow: i._("Question Follows"), rsvp: i._("RSVPs"), share: i._("Shares"), post: i._("Posts"), claim: i._("Offer Claims"), other: i._("Others") }, EngagementBreakdownBuckets: { stories: 'stories', link_clicks: 'link clicks', photo_views: 'photo view', video_plays: 'video play', other: 'other clicks' }, EngagementBreakdownLegend: { stories: i._("Stories Generated"), 'link clicks': i._("Link Clicks"), 'other clicks': i._("Other Clicks"), 'photo view': i._("Photo Views"), 'video play': i._("Video Plays") }, LikeAndFollowSources: { page_suggestion: i._("Invites from Admins"), timeline: i._("Timeline"), ads: i._("Ads and Sponsored Stories"), registration: i._("New Admins"), mobile: i._("Mobile"), wizard_suggestion: i._("New User Suggestions"), social_graph: i._("Likes Manager"), profile_connect: i._("On Page, news feed, or ticker"), external_connect: i._("Like Box and Like Button"), recommended_pages: i._("Facebook Recommendations"), external_page_like: i._("External Like"), favorites: i._("Page Likes Another Page"), api: i._("Third-Party Apps"), page_browser: i._("Page Browser"), hovercard: i._("On Hover"), search: i._("Search Results"), page_profile: i._("On Page"), ticker: i._("Ticker"), like_story: i._("Friend Referrals"), nearby_dash: i._("Nearby Places"), from_coupon: i._("Offer"), video_flyout: i._("On Video"), photo_snowlift: i._("On Photo"), post_checkin: i._("Callout After Check-In"), app_center: i._("App Center"), social_wifi: i._("Facebook Wi-Fi"), page_group_join: i._("From Group"), other: i._("Other"), feed_x_undo: i._("From News Feed"), followee_list: i._("From Follower"), friend_list_flyout: i._("From Page Like Button") }, LikeSourcesDeprecatedAggregations: { profile_connect: ['hovercard', 'search', 'page_profile', 'ticker', 'like_story'] }, Tabs: { wall: i._("Timeline"), info: i._("About Section"), photos: i._("Photos"), friendactivity: i._("Friend Activity"), videos: i._("Videos"), events: i._("Events"), pe: i._("Past Events") }, FrequencyBuckets: ['1', '2', '3', '4', '5', '6-10', '11-20', '21+'], AgeBuckets: ['13-17', '18-24', '25-34', '35-44', '45-54', '55-64', '65+'], PostIcons: { photo: '/images/icons/photo.gif', link: '/images/icons/post.gif', coupon: '/images/icons/pages/coupons/offers.png', post: '/images/icons/wall_post.gif' }, LOADING_IMAGE: '/images/loaders/indicator_blue_small.gif', DOWN_ARROW_IMAGE: '/images/icons/down_arrow_blue.gif', UP_ARROW_IMAGE: '/images/icons/up_arrow_blue.gif', ColorsMap: k, Colors: j.values(k), TICK_SIZE_THRESHOLD: 42, TICK_SIZE_SHORT: 7, TICK_SIZE_LONG: 14, GraphMaxPoints: { Likes: 60, Reach: 30, Visits: 120, Talking: 60, ViralReach: 60, CheckinsType: 120 }, GraphType: { BAR: 0, AREA: 1, LINE: 2 }, ReachBreakdownColors: [k.blue, k.green, k.magenta], EngagementGraphColors: [k.blue, '#758ab7', '#b1bdd6', '#e2e6f0'], TalkingBreakdownColors: [k.green, '#c3d08f', '#dde4bf', '#f2f5e7'], PrivacyIconClasses: { CUSTOM: 'privacy-custom', EVERYONE: 'privacy-everyone' }, DateFormat: { 'n/j/y': 'n/j/y', 'M j': 'M j', 'M j, Y': 'M j, Y', 'm/d/Y g:ia': 'm/d/Y g:ia' }, MonthAbbrev: { 1: 'Jan', 2: 'Feb', 3: 'Mar', 4: 'Apr', 5: 'May', 6: 'Jun', 7: 'Jul', 8: 'Aug', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dec' }, AbbrevNumberFormat: { 0: '{x0}', 1: '{x0}', 2: '{x0}', 3: '{x3}K', 4: '{x3}K', 5: '{x3}K', 6: '{x6}M', 7: '{x6}M', 8: '{x6}M', 9: '{x9}B', 10: '{x9}B', 11: '{x9}B' }, DecimalSeparator: '.', NumberDelimiter: ',', Locale: 'en_US', TimeAM: 'am', TimePM: 'pm', setIntlFormatData: function (m) { if (m) { this.Locale = m.locale || this.Locale; this.DateFormat = m.date_format || this.DateFormat; this.MonthAbbrev = m.month_abbrev || this.MonthAbbrev; this.AbbrevNumberFormat = m.abbrev_number_format || this.AbbrevNumberFormat; this.DecimalSeparator = m.LOCALE_DECIMAL_SEPARATOR || this.DecimalSeparator; this.NumberDelimiter = m.LOCALE_NUMBER_DELIMITER || this.NumberDelimiter; this.TimeAM = m.time_am || this.TimeAM; this.TimePM = m.time_pm || this.TimePM; } }, getPTOffset: function (m) { return -1 * h.getPacificOffsetAt(m); }, Events: { Ready: 'ready', Plotted: 'plotted', ShowMorePosts: 'showMorePosts', Error: 'error' }, InternalFBApps: { Photos: '2305272732', Video: '2392950137', Mobile: '2915120374' }, MAX_INT: 9007199254740992 }; l.InternalFBAppsIDs = (function () { var m = {}; j.forEach(l.InternalFBApps, function (n, o) { m[n] = o; }); return m; })(); f.exports = l; }, null);
__d('InsightsNumberUtils', ['InsightsConstants', 'NumberFormat'], function a(b, c, d, e, f, g, h, i) { if (c.__markCompiled) c.__markCompiled(); var j = { magnitude: function (k) { return k >= 10 ? Math.floor(Math.log(k) / Math.log(10)) : 0; }, abbrevInt: function (k) { var l = j.magnitude(k), m = Math.round(k / Math.pow(10, l)); if (m == 10) { m = 1; l++; } var n = h.AbbrevNumberFormat[l] || '{x0}', o = n.replace(/(.*)(\{x(\d+)\})(.*)/, function (q, r, s, t, u) { return r + j.decimal(k / Math.pow(10, t)) + u; }), p = j.delimit(k); return o.length >= p.length || o == k ? p : o; }, decOrInt: function (k) { return k === Math.floor(k) ? j.integer(k) : j.decimal(k); }, delimit: function (k) { if (k == null || k === '') return h.MissingValueString; return i.formatIntegerWithDelimiter(k, h.NumberDelimiter); }, percent: function (k) { return j.round(k * 100, 2) + '%'; }, decimal: function (k) { return j.round(k, 1); }, round: function (k, l, m) { var n = Math.pow(10, l), o = (Math.round(k * n) / n + '').replace('.', h.DecimalSeparator); if (!l || !m) return j.delimit(o); var p = o.indexOf(h.DecimalSeparator), q = 0; if (p == -1) { o += h.DecimalSeparator; q = l; } else q = l - (o.length - p - 1); for (var r = 0; r < q; r++)o += '0'; return j.delimit(o); } }; f.exports = j; }, null);
__d('PageContentTabDispatcher', ['Dispatcher_DEPRECATED', 'PageContentTabConstants'], function a(b, c, d, e, f, g, h, i) { if (c.__markCompiled) c.__markCompiled(); var j, k, l = i.ACTION_TYPES, m = i.PAYLOAD_SOURCES, n = i.TABS; j = babelHelpers.inherits(o, h); k = j && j.prototype; o.prototype.handleServerResponse = function (p) { 'use strict'; this.dispatch({ action: p, payloadSource: m.SERVER }); }; o.prototype.handleViewAction = function (p) { 'use strict'; this.dispatch({ action: p, payloadSource: m.VIEW_ACTION }); }; o.prototype.handleInitialization = function (p, q, r, s) { 'use strict'; if (p.externalURI) return; this.dispatch({ action: { posts: { key: q, data: r }, actionType: l.ADD_POSTS, tab: p, pageID: s }, payloadSource: m.SERVER }); }; o.prototype.handlePostRemoved = function (p, q, r) { 'use strict'; if (r) { this.dispatch({ payloadSource: m.VIEW_ACTION, action: { actionType: l.REMOVE_POST, postID: q, tab: r, pageID: p } }); } else Object.keys(n).forEach((function (s) { return this.dispatch({ payloadSource: m.VIEW_ACTION, action: { actionType: l.REMOVE_POST, postID: q, tab: s, pageID: p } }); }).bind(this), this); }; o.prototype.handlePostsRemoved = function (p, q, r) { 'use strict'; if (r) { this.dispatch({ payloadSource: m.VIEW_ACTION, action: { actionType: l.REMOVE_POSTS, postIDs: q, tab: r, pageID: p } }); } else Object.keys(n).forEach((function (s) { return this.dispatch({ payloadSource: m.VIEW_ACTION, action: { actionType: l.REMOVE_POSTS, postIDs: q, tab: s, pageID: p } }); }).bind(this)); }; o.prototype.handlePageInitialization = function (p) { 'use strict'; this.dispatch({ payloadSource: m.SERVER, action: { page: p, actionType: l.INIT_PAGE } }); }; o.prototype.handlePostCreated = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: p, actionType: l.CREATE_POST, post: q, pageID: r } }); }; o.prototype.handlePostsCreated = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: p, actionType: l.CREATE_POSTS, posts: q, pageID: r } }); }; o.prototype.handlePostChanged = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.SERVER, action: { actionType: l.EDIT_POST, post: p, tab: q, pageID: r } }); }; o.prototype.handleStaleContentNoticeStatus = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.UPDATE_STALE_CONTENT_NOTICE, status: r, pageID: p } }); }; o.prototype.handleFilterStatus = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.UPDATE_FILTER_STATUS, status: r, pageID: p } }); }; o.prototype.handleSetCustomTabState = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: p, actionType: l.SET_CUSTOM_TAB_STATE, customTabState: q, pageID: r } }); }; o.prototype.handleError = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.SERVER, action: { tab: p, actionType: l.ERROR, error: q, pageID: r } }); }; o.prototype.handlePagingChanged = function (p, q, r, s) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, pageID: p, actionType: l.PAGING_CHANGED, currentPage: s, queryKey: r } }); }; o.prototype.handleQueryKeyChanged = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.QUERY_KEY_CHANGED, pageID: p, queryKey: r } }); }; o.prototype.handleQueryChanged = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.QUERY_CHANGED, pageID: p, query: r } }); }; o.prototype.handleFilterChanged = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.FILTER_CHANGED, pageID: p, filter: r } }); }; o.prototype.handleSortChanged = function (p, q, r) { 'use strict'; this.dispatch({ payloadSource: m.VIEW_ACTION, action: { tab: q, actionType: l.SORT_CHANGED, pageID: p, sort: r } }); }; function o() { 'use strict'; j.apply(this, arguments); } f.exports = new o(); }, null);
__d('PageContentTabActionsBar.react', ['AdsFilterChangeTypes', 'AdsGenericFilterSet', 'AdsGenericFilterSetUtil', 'AdsGenericFilter', 'BUIPresetFiltersItem', 'Image.react', 'LeftRight.react', 'PageContentTabCommonActionsConfig', 'PageContentTabConstants', 'PageContentTabDispatcher', 'PageContentTabFilter.react', 'PageContentTabFilterMenu.react', 'PageContentTabLocations', 'PageContentTabLogger', 'PageContentTabLoggingEvents', 'PageContentTabSearchInput.react', 'PageContentTabStaleContentNotice.react', 'PopoverMenu.react', 'React', 'XUIButton.react', 'XUIButtonGroup.react', 'ReactXUIMenu', 'XUIPopoverButton.react', 'MenuSeparator.react', 'cx', 'fbt', 'getOwnObjectValues', 'xuiglyph'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ba, ca, da, ea, fa, ga, ha, ia) { if (c.__markCompiled) c.__markCompiled(); var ja = ca.Item, ka = o.ACTIONS_MENU_SEPARATOR, la = z.PropTypes, ma = p.TABS, na = z.createClass({ displayName: 'PageContentTabActionsBar', propTypes: { actionConfig: la.arrayOf(la.shape({ allowBatch: la.bool, getLabel: la.func.isRequired, key: la.string.isRequired, onClick: la.func.isRequired })), beginIndex: la.number.isRequired, location: la.oneOf(ha(t)).isRequired, numPosts: la.number, endIndex: la.number.isRequired, hasNextPage: la.bool.isRequired, page: la.shape({ page_id: la.string, picture: la.object, admins: la.array }).isRequired, selectedPosts: la.array.isRequired, showNextPage: la.func.isRequired, showPreviousPage: la.func.isRequired, query: la.string.isRequired, tab: la.oneOf(Object.keys(ma)).isRequired, hasSearchSupport: la.bool, hasPaginationSupport: la.bool, filterFieldsConfig: la.object, filterValuesConfig: la.object, defaultFilterField: la.object, showNotice: la.bool, onRefreshView: la.func.isRequired, hideActionsButton: la.bool, showNewFilterMenu: la.bool, sideButtonComponent: la.func, sideButtonProps: la.object, customTabState: la.object, staticFilterSet: la.object }, getDefaultProps: function () { return { hasSearchSupport: true, hideActionsButton: false, showNewFilterMenu: false }; }, getInitialState: function () { return { showFilter: false, filterMenuVisible: false, nonDispatchedField: null }; }, componentWillReceiveProps: function (oa) { if (this.props.staticFilterSet != oa.staticFilterSet) this.setState({ showFilter: oa.staticFilterSet !== null, filterSet: oa.staticFilterSet }); }, render: function () { var oa = null; if (this.refs.filterButton) oa = this._renderFilterLayer(); return (z.createElement('div', { className: "_4r6a" }, z.createElement('div', { className: "_2pi3 _2pi9" }, z.createElement(n, null, this._renderLeftButtonGroup(), this._renderPagingControls())), this._renderFilterContainer(), oa, this._renderStaleContentNotice())); }, _renderFilterLayer: function () { return (z.createElement(s, { filterButton: this.refs.filterButton, onFilterMenuChange: this._onFilterMenuChange, onToggle: this._onFilterMenuToggle, filterFieldsConfig: this.props.filterFieldsConfig, filterMenuVisible: this.state.filterMenuVisible, filterSet: this.state.filterSet })); }, _onFilterMenuToggle: function (oa) { this.setState({ filterMenuVisible: oa }); }, _onFilterMenuChange: function (oa, pa, qa) { if (pa.length === 0) return; var ra = pa[0].getFilterReference(), sa = new i([new k(ra.field, ra.operators[0].operator, ra.value ? ra.value.value : '')]), ta = this.state.filterSet ? qa ? j.mergeByField(this.state.filterSet, sa, true) : j.excludeFiltersByField(this.state.filterSet, ra.field) : sa; if (qa && this.state.nonDispatchedField) ta = j.excludeFiltersByField(ta, this.state.nonDispatchedField); var ua = ra.value != null; this.setState({ filterMenuVisible: false, showFilter: qa || ta != null, filterSet: ta, nonDispatchedField: qa && !ua ? ra.field : null }); if (ua || !qa) this._dispatchFilterChange(ta); }, _renderStaleContentNotice: function () { if (this.props.showNotice) return (z.createElement(x, { onRefreshView: this.props.onRefreshView })); return null; }, _renderLeftButtonGroup: function () { var oa = this.props.hasSearchSupport ? z.createElement(w, { onSearch: this._onSearch, query: this.props.query }) : null, pa = this.props.sideButtonComponent, qa = pa ? z.createElement(pa, babelHelpers._extends({}, this.props.sideButtonProps, { customTabState: this.props.customTabState, page: this.props.page, tab: this.props.tab })) : null; return (z.createElement('div', null, oa, this._renderActionsButton(), qa)); }, _renderActionsButton: function () { var oa = this.props.selectedPosts.length, pa = (this.props.actionConfig || []).filter((function (sa) { var ta = sa.allowBatch || oa === 1; if (sa.isAvailable) return sa.isAvailable(this.props.selectedPosts, this.props.location, this.props.page) && ta; return ta; }).bind(this)), qa = !oa || !pa.length, ra = z.createElement(ca, { className: "_4567" }, pa.map((function (sa) { return sa == ka ? z.createElement(ea, null) : z.createElement(ja, { key: sa.key, className: "_456h", disabled: sa.isDisabled && sa.isDisabled(this.props.selectedPosts), onclick: (function () { if (oa === 1) { var ta = this.props.selectedPosts[0].id; u.log(v.ACTION_TAKEN_MAIN_VIEW, this.props.tab, { action: sa.key, post_id: ta, post_ids: [ta], num_posts: 1, bulk_action: false }, this.props.selectedPosts); } else { var ua = []; this.props.selectedPosts.forEach(function (va) { ua.push(va.id); }); u.log(v.ACTION_TAKEN_MAIN_VIEW, this.props.tab, { action: sa.key, post_ids: ua, num_posts: ua.length, bulk_action: true }, this.props.selectedPosts); } sa.onClick(this.props.selectedPosts, this.props.page); }).bind(this) }, sa.getLabel(oa, this.props.selectedPosts)); }).bind(this))); return this.props.hideActionsButton ? null : z.createElement(y, { disabled: qa, menu: ra }, z.createElement(da, { className: this.props.hasSearchSupport ? "_3-99" : '', disabled: qa, label: ga._("Actions") })); }, _renderPagingControls: function () { if (this.props.hasPaginationSupport) return null; var oa = null; if (this.props.filterFieldsConfig && this.props.filterValuesConfig) { var pa = ga._("Filters"); oa = this.props.showNewFilterMenu ? z.createElement(da, { ref: 'filterButton', haschevron: true, className: (this.state.filterVisible ? "selected" : '') + (' ' + "_5bbf") + (' ' + "_3-90"), label: pa, onClick: this._onClickFilterButton, size: 'medium' }) : z.createElement(aa, { label: pa, onClick: this._onClickFilterButton, className: "_3-90" }); } var qa = this.props.numPosts ? ga._("{beginIndex} - {endIndex} of {totalNumber}", [ga.param('beginIndex', this.props.beginIndex + 1), ga.param('endIndex', this.props.endIndex), ga.param('totalNumber', this.props.numPosts)]) : null; if (qa !== null && oa === null) qa = ga._("Showing {beginIndex} - {endIndex} of {totalNumber}", [ga.param('beginIndex', this.props.beginIndex + 1), ga.param('endIndex', this.props.endIndex), ga.param('totalNumber', this.props.numPosts)]); return (z.createElement('div', { className: "_53wl" }, oa, qa, z.createElement(ba, { className: "_3-9a" }, z.createElement(aa, { disabled: this.props.beginIndex === 0, image: z.createElement(m, { src: ia({ name: 'triangle-left', size: 'small' }) }), onClick: this.props.showPreviousPage, size: 'medium' }), z.createElement(aa, { disabled: !this.props.hasNextPage, image: z.createElement(m, { src: ia({ name: 'triangle-right', size: 'small' }) }), onClick: this.props.showNextPage, size: 'medium' })))); }, _onClickFilterButton: function () { this.setState({ showFilter: this.state.showFilter || !this.props.showNewFilterMenu, filterMenuVisible: this.props.showNewFilterMenu && !this.state.filterMenuVisible }); }, _renderFilterContainer: function () { if (!this.props.filterFieldsConfig || !this.props.filterValuesConfig) return null; if (!this.state.showFilter) return null; return (z.createElement(r, { fieldsConfig: this.props.filterFieldsConfig, filterSet: this.state.filterSet, hideAddButton: this.state.nonDispatchedField != null, onFilterChange: this._onFilterChange, valuesConfig: this.props.filterValuesConfig, onClear: this._onClearFilters, defaultFilterField: this.props.defaultFilterField, showNewFilters: this.props.showNewFilterMenu })); }, _onFilterChange: function (oa, pa, qa) { var ra = pa === h.REMOVE && qa <= 1, sa = pa === h.EDIT || pa === h.ADD_INPUT || pa === h.REMOVE; this.setState({ filterMenuVisible: false, filterSet: oa, nonDispatchedField: sa ? null : this.state.nonDispatchedField, showFilter: !ra }); this._dispatchFilterChange(oa); }, _onClearFilters: function (event, oa) { this.setState({ showFilter: false, filterSet: null, nonDispatchedField: null }); if (oa >= 1) this._dispatchFilterChange(null); }, _dispatchFilterChange: function (oa) { q.handleFilterChanged(this.props.page.page_id, this.props.tab, oa); q.handleFilterStatus(this.props.page.page_id, this.props.tab, oa !== null); }, _onSearch: function (oa) { q.handleQueryChanged(this.props.page.page_id, this.props.tab, oa); } }); f.exports = na; }, null);
__d('PageContentTabConfirmationDialog.react', ['LayerHideOnEscape', 'LayerFadeOnHide', 'React', 'XUIDialog.react', 'XUIDialogBody.react', 'XUIDialogButton.react', 'XUIDialogFooter.react', 'XUIDialogTitle.react', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) { if (c.__markCompiled) c.__markCompiled(); var q = j.PropTypes, r = j.createClass({ displayName: 'PageContentTabConfirmationDialog', propTypes: { cancelLabel: q.string, title: q.string.isRequired, body: q.string.isRequired, confirmationLabel: q.string.isRequired, onConfirm: q.func.isRequired }, render: function () { var s = this.props.cancelLabel || p._("Cancel"); return (j.createElement(k, { behaviors: { LayerHideOnEscape: h, LayerFadeOnHide: i }, shown: true, width: 450 }, j.createElement(o, null, this.props.title), j.createElement(l, null, this.props.body), j.createElement(n, null, j.createElement(m, { action: 'cancel', label: s, use: 'default' }), j.createElement(m, { action: 'cancel', label: this.props.confirmationLabel, onClick: this.props.onConfirm, use: 'confirm' })))); } }); f.exports = r; }, null);
__d('PageContentTabTextUtils', [], function a(b, c, d, e, f, g) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var h = { getPostID: function (i) { var j = i.split('_'); return j.pop(); } }; f.exports = h; }, null);
__d('PageContentTabCommonConfig', ['DOM', 'React', 'ReactDOM', 'LayerFadeOnHide', 'LayerHideOnEscape', 'PageContentTabConfirmationDialog.react', 'PageContentTabConstants', 'PageContentTabTextUtils', 'XUIDialog.react', 'XUIDialogBody.react', 'XUIDialogFooter.react', 'XUIDialogOkayButton.react', 'XUIDialogTitle.react'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var u = n.COLUMNS, v = { getValueFromInsight: function (w) { if (w.values && w.values.length === 1) return w.values[0].value.toString(); return "0"; }, maxInsightValue: function (w, x) { var y = 0; w.forEach(function (z) { var aa = z.insights && z.insights.data; (aa || []).forEach(function (ba) { if (ba.name === x) { var ca = v.getValueFromInsight(ba); y = Math.max(y, parseInt(ca, 10)); } }); }); return y; }, maxProductInsightValue: function (w, x) { var y = 0; w.forEach(function (z) { var aa = x.map(function (ca) { return z.commerce_insights[ca]; }), ba = aa.reduce(function (ca, da) { return ca + da; }); y = Math.max(y, ba ? ba : 0); }); return y; }, showErrorDialog: function (w, x) { j.render(i.createElement(p, { shown: true, behaviors: { LayerFadeOnHide: k, LayerHideOnEscape: l }, width: 600 }, i.createElement(t, null, i.createElement('span', null, w)), i.createElement(q, null, x), i.createElement(r, null, i.createElement(s, { use: 'confirm', action: 'cancel' }))), h.create('div')); }, showConfirmationDialog: function (w, x, y, z, aa) { j.render(i.createElement(m, { cancelLabel: aa, title: w, body: x, confirmationLabel: y, onConfirm: z }), h.create('div')); }, createScheduledPostRow: function (w, x) { var y = v.createDraftPostRow(w, x); y[u.SCHEDULED_PUBLISH_TIME] = { time: w.scheduled_publish_time, admin: w.admin_creator && w.admin_creator.name }; y[u.PROMOTION_STATUS] = w.promotion_info; y[u.ID] = o.getPostID(w.id); return y; }, createDraftPostRow: function (w, x) { return v._createUnpublishedPostRowBase(w, x); }, _createUnpublishedPostRowBase: function (w, x) { var y = {}; y[u.POST] = { id: w.id, text: w.message, img: w.thumbnail || x.picture && x.picture.url, url: w.permalink_url, owner: x.page_id, place: w.place, og_action_summary: w.og_action_summary }; y[u.DATE_CREATED] = { time: w.creation_time, admin: w.admin_creator && w.admin_creator.name }; y[u.DATE_LAST_MODIFIED] = { edit_actions: w.edit_actions && w.edit_actions.data, modified_time: w.modified_time }; y[u.LOCATION_LANGUAGE] = w.privacy_description; return y; } }; f.exports = v; }, null);
__d('PageCommerceProductVariantPage.react', ['AccessibleTableParts.react', 'AdsCurrencyInput.react', 'CommerceProductVariantType', 'CommerceUI', 'DummySearchSource', 'FreeformSearchSource', 'Image.react', 'Layout.react', 'Link.react', 'NumberInput.atlas', 'React', 'SearchableEntry', 'XUIGrayText.react', 'XUISingleSelector.react', 'XUITable.react', 'XUITokenizer.react', 'cx', 'fbt', 'glyph', 'isEmpty'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var ba = r.PropTypes, ca = h.BodyRow, da = h.HeadRow, ea = o.Column, fa = o.FillColumn, ga = u.Option, ha = r.createClass({ displayName: 'PageCommerceProductVariantPage', propTypes: { currencyCode: ba.string.isRequired, defaultVariantPrice: ba.number, getPriceError: ba.func.isRequired, setVariantInfo: ba.func.isRequired, variants: ba.arrayOf(ba.shape({ label: ba.string, options: ba.arrayOf(ba.string) })).isRequired, variantItems: ba.objectOf(ba.shape({ properties: ba.object, price: ba.number.isRequired, inventory: ba.number, productID: ba.number })).isRequired }, _cachedItems: {}, _deepClone: function (ia) { return JSON.parse(JSON.stringify(ia)); }, getInitialState: function () { this._cachedItems = this._deepClone(this.props.variantItems); return { searchSource: new m(new l(), function (ia) { return ia; }, 0) }; }, render: function () { var ia = null; if (this.props.variants.length < k.MAX_VARIANTS) ia = r.createElement(p, { onClick: this._addNewVariantInput }, 'Add Variant'); return (r.createElement('div', { className: "_3-8j" }, r.createElement('div', { ref: 'variant_input_list' }, this.props.variants.map((function (ja, ka) { return (this._getVariantInput(ja, ka, this._getVariantLabels())); }).bind(this))), ia, this._getVariantsTable())); }, _getVariantInput: function (ia, ja, ka) { return (r.createElement('div', { key: 'variant' + ja, className: "_3-95" }, r.createElement(o, null, r.createElement(ea, null, this._getVariantOptions(ia, ja, ka)), r.createElement(fa, { className: "_2pis" }, r.createElement(w, { entries: this._getTokenizerEntries(ia), searchSource: this.state.searchSource, onRemoveEntryAttempt: this._onRemoveVariantOptionAttempt.bind(this, ia, ja), onAddEntryAttempt: this._onAddVariantOptionAttempt.bind(this, ia, ja), tokenizeQueryString: this._tokenizeQueryString.bind(this, ia, ja), selectOnBlur: true })), r.createElement(ea, null, r.createElement(n, { className: "_11dw", onClick: this._removeVariant.bind(this, ia, ja), src: z('remove') }))))); }, _getVariantsTable: function () { if (aa(this.props.variants)) return null; var ia = []; for (var ja in this.props.variantItems) { var ka = this.props.variantItems[ja], la = ka.properties, ma = []; this.props.variants.forEach(function (pa, qa) { var ra = la && la[pa.label] ? la[pa.label] : ''; ma.push(r.createElement('td', { className: "_2ncv", key: qa }, ra)); }); ma.push(r.createElement('td', { width: '50', key: ja + 'inventory' }, r.createElement(q, { isZeroValidValue: true, name: 'inventory', nonnegative: true, value: ka.inventory, formatNumber: false, onValueUpdated: this._updateVariantItem.bind(this, ja, 'inventory') }))); var na = ka.price * 100; ma.push(r.createElement('td', { width: '50', key: ja + 'price' }, r.createElement(i, { currency: this.props.currencyCode, onDataUpdate: this._updateVariantPrice.bind(this, ja), value: na, xuiError: this.props.getPriceError(ka.price) }))); ia.push(r.createElement(ca, { key: ja }, ma)); } var oa = []; this.props.variants.forEach(function (pa, qa) { oa.push(r.createElement('th', { key: pa.label + qa }, pa.label)); }); oa.push(r.createElement('th', { key: 'inventory' }, 'Inventory')); oa.push(r.createElement('th', { key: 'price' }, 'Price')); return (r.createElement(v, { outerBorder: true, className: "_2ncw" }, r.createElement('thead', null, r.createElement(da, null, oa)), r.createElement('tbody', null, ia))); }, _updateVariantPrice: function (ia, ja) { this._updateVariantItem(ia, 'price', ja / 100); }, _updateVariantItem: function (ia, ja, ka) { var la = this.props.variantItems; la[ia][ja] = ka; this._cachedItems[ia][ja] = ka; this.props.setVariantInfo({ variantItems: la }); }, _getVariantItems: function (ia) { var ja = {}; if (ia.length === 0) return ja; this._getVariantCombos(ia.slice(0)).forEach((function (ka) { var la = []; for (var ma in ka) la.push(ka[ma]); la.sort(); var na = JSON.stringify(la); if (na in this._cachedItems) { ja[na] = this._deepClone(this._cachedItems[na]); } else { ja[na] = { properties: ka, price: this.props.defaultVariantPrice, inventory: 0 }; this._cachedItems[na] = this._deepClone(ja[na]); } }).bind(this)); return ja; }, _getVariantCombos: function (ia) { if (ia.length === 0) return [{}]; var ja = [], ka = ia.shift(), la = this._getVariantCombos(ia.slice(0)); if (ka.options.length == 0) return la; ka.options.forEach(function (ma) { la.forEach(function (na) { var oa = Object.assign({}, na); oa[ka.label] = ma; ja.push(oa); }); }); return ja; }, _getTokenizerEntries: function (ia) { return ia.options.map(function (ja) { return new s({ uniqueID: ja, title: ja }); }); }, _onRemoveVariantOptionAttempt: function (ia, ja, ka) { var la = ka.getTitle().trim(), ma = ia.options.indexOf(la); if (ma >= 0) ia.options.splice(ma, 1); this._updateVariant(ia, ja); }, _onAddVariantOptionAttempt: function (ia, ja, ka) { var la = ka.getTitle().trim(); if (ia.options.indexOf(la) >= 0 || la.length === 0) return; ia.options.push(la); this._updateVariant(ia, ja); }, _updateVariant: function (ia, ja) { var ka = this.props.variants; ka[ja] = ia; var la = this._getVariantItems(ka); this.props.setVariantInfo({ variants: ka, variantItems: la }); }, _tokenizeQueryString: function (ia, ja, ka) { if (!ka || !ka.includes(',')) return null; var la = ka.split(',').filter(function (na) { return na !== ''; }), ma = la.pop(); la.map((function (na) { this._onAddVariantOptionAttempt(ia, ja, new s({ uniqueID: na, title: na })); }).bind(this)); return new s({ uniqueID: ma, title: ma }); }, _addNewVariantInput: function () { var ia = this.props.variants; ia.push(this._getDefaultVariant()); this.props.setVariantInfo({ variants: ia, variantItems: this._getVariantItems(ia) }); }, _removeVariant: function (ia, ja) { var ka = this.props.variants; ka.splice(ja, 1); this.props.setVariantInfo({ variants: ka, variantItems: this._getVariantItems(ka) }); }, _getVariantLabels: function () { return this.props.variants.map(function (ia) { return String(ia.label); }); }, _getDefaultVariant: function () { var ia = this._getVariantLabels(), ja; for (var ka in j) { var la = j[ka]; if (ia.indexOf(la) === -1) { ja = la; break; } } return { label: ja, options: [] }; }, _getVariantOptions: function (ia, ja, ka) { var la = []; for (var ma in j) { var na = j[ma]; if (ia.label !== na && ka.indexOf(na) !== -1) continue; la.push(r.createElement(ga, { key: ma + ja, value: na }, na)); } return (r.createElement(u, { className: "_11dy", onChange: this._onSelectorChange.bind(this, ia, ja), value: ia.label, size: 'large' }, la)); }, _onSelectorChange: function (ia, ja, ka) { ia.label = ka.value; this._updateVariant(ia, ja); } }); f.exports = ha; }, null);
__d("XPagesManagerProductDeleteController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/pages\/content_tab\/products\/product_delete\/", { group_ids: { type: "StringVector" } }); }, null);
__d('PageProductActions', ['ActorURI', 'AsyncRequest', 'PageContentTabCommonConfig', 'PageContentTabDispatcher', 'PageContentTabLoadingDialog', 'XPagesManagerProductDeleteController', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var o = { deleteProducts: function (p, q, r) { l.show(); var s = h.create(m.getURIBuilder().setStringVector('group_ids', p).getURI(), q); new i(s).setMethod('POST').setHandler(function (t) { p.forEach(function (u) { return k.handlePostRemoved(q, u); }); }).setFinallyHandler(function () { l.hide(); r && r(); }).send(); }, deleteProductsWithConfirmation: function (p, q, r) { var s = p.length === 1 ? n._("Deleting this product will remove it from your shop") : n._("Deleting these products will remove them from your shop"); j.showConfirmationDialog(n._({ "Product": "Delete Product?", "Products": "Delete Products?" }, [n['enum'](p.length === 1 ? 'Product' : 'Products', { Product: 'Product', Products: 'Products' })]), s, n._({ "product": "Delete product", "products": "Delete products" }, [n['enum'](p.length === 1 ? 'product' : 'products', { product: 'product', products: 'products' })]), o.deleteProducts.bind(o, p, q, r), null); } }; f.exports = o; }, null);
__d('PageProductPhotoEditButton.react', ['ActorURI', 'Arbiter', 'AsyncRequest', 'BOFSellerLogger', 'BOFSellerLoggerEvent', 'ReactComposerPhotoActions', 'PhotoEditorTargetType', 'XPagesManagerProductPhotoUploadController', 'React', 'Tooltip', 'XComposerPhotoUploader', 'XStickerPhotoEditorController', 'cx', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) { if (c.__markCompiled) c.__markCompiled(); var v, w; 'use strict'; var x = p.PropTypes; v = babelHelpers.inherits(y, p.Component); w = v && v.prototype; y.prototype.componentDidMount = function () { i.subscribe('PageProductPhotoEditor/newImage' + this.props.composerID, this.$PageProductPhotoEditButton1.bind(this)); }; y.prototype.render = function () { var z = u._("Edit Photo"); return (p.createElement('button', babelHelpers._extends({ className: "_k4v", onClick: this.$PageProductPhotoEditButton2.bind(this) }, q.propsFor(z)), p.createElement('div', { className: "_k4w" }))); }; y.prototype.$PageProductPhotoEditButton2 = function () { if (this.$PageProductPhotoEditButton3) return; k.log(l.ACTN_EDIT_PHOTO_CLICK, this.props.pageID, { target_class: 'Photo', target_id: this.props.photoID }); var z = s.getURIBuilder().setString('grid_id', this.props.composerID).setEnum('target_type', n.PAGE_PRODUCT_COMPOSER).setInt('photo_fbid', this.props.photoID).getURI(); this.$PageProductPhotoEditButton3 = new j(z).setFinallyHandler((function () { this.$PageProductPhotoEditButton3 = null; }).bind(this)).send(); m.startPhotoEdit(this.props.composerID); }; y.prototype.$PageProductPhotoEditButton1 = function (z, aa) { var ba = h.create(o.getURIBuilder().getURI(), this.props.pageID), ca = new r({ uploadEndpoint: ba, onUploadSuccess: (function (da, ea) { this.props.onPhotoEdited(aa.fbid, ea.response.payload[0]); }).bind(this) }); ca.getAsyncUploadRequest([aa.blob]).send(); }; function y() { v.apply(this, arguments); } y.propTypes = { composerID: x.string.isRequired, onPhotoEdited: x.func.isRequired, pageID: x.string.isRequired, photoID: x.string.isRequired }; f.exports = y; }, null);
__d('PageProductComposerShippingOptions.react', ['CommerceSelfServeUI', 'CurrencyInput.atlas', 'Image.react', 'LeftRight.react', 'Link.react', 'React', 'XUIGrayText.react', 'XUIText.react', 'XUITextInput.react', 'cx', 'fbt', 'xuiglyph'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var t = m.PropTypes, u = m.createClass({ displayName: 'PageProductComposerShippingOptions', propTypes: { currencyCode: t.string.isRequired, disabled: t.bool, hideTitle: t.bool, settingsURI: t.object, shippingOptions: t.arrayOf(t.shape({ shipping_country: t.string, shipping_price_currency: t.string, shipping_price_value: t.number, shipping_service: t.string })).isRequired, onShippingOptionsChange: t.func.isRequired }, componentWillMount: function () { if (this.props.shippingOptions.length === 0) this.props.onShippingOptionsChange([this._getDefaultShippingOption()]); }, componentWillReceiveProps: function (v) { if (v.shippingOptions.length === 0) this.props.onShippingOptionsChange([this._getDefaultShippingOption()]); }, render: function () { var v = this.props.shippingOptions.length, w = s({ name: 'cross', shade: 'light', size: 'small' }), x = []; this.props.shippingOptions.forEach((function (da) { var ea = da.shipping_service, fa = x.length; x[fa] = m.createElement('tr', { className: "_5b1f", key: 'option-' + fa }, m.createElement('td', { className: "_b3y" }, m.createElement(p, { className: "_2mfs", disabled: this.props.disabled, height: 'tall', value: ea, placeholder: r._("Shipping method name"), onChange: (function (ga) { return this._onShippingNameChange(fa, ga.target.value); }).bind(this), ref: fa })), m.createElement('td', { className: "_b3z" }, m.createElement(i, { className: "_5rpn", currency: da.shipping_price_currency, disabled: this.props.disabled, isZeroValidValue: true, value: Number(da.shipping_price_value) / 100, onChange: (function (ga) { return this._onShippingPriceChange(fa, ga * 100); }).bind(this) })), v > h.MIN_SHIPPING_OPTIONS ? m.createElement('td', { className: "_b3-" }, m.createElement(l, { onClick: (function (ga) { this.props.disabled ? null : this._onRemoveShippingOption(fa); }).bind(this) }, m.createElement(j, { className: "_2_qb", src: w }))) : null); }).bind(this)); var y, z = m.createElement(o, { size: 'small' }, r._("Add Shipping Method")); if (v >= h.MAX_SHIPPING_OPTIONS) { var aa = r._("You have reached the maximum number of shipping options."); y = m.createElement(l, { 'data-hover': 'tooltip', 'aria-label': aa, onClick: function (da) { return da.stopPropagation(); } }, z); } else y = m.createElement(l, { onClick: this.props.disabled ? null : this._onAddNewOption }, z); var ba = null; if (this.props.settingsURI) ba = m.createElement(l, { className: "_3-9b", href: this.props.settingsURI, target: '_blank' }, r._("Edit Default Shipping Options")); var ca = null; if (!this.props.hideTitle) ca = m.createElement('div', { className: "_3-94" }, m.createElement(n, { display: 'block', weight: 'bold', shade: 'dark', size: 'small' }, r._("Shipping Options"), ba), m.createElement(n, { shade: 'light', size: 'small' }, r._("Customers will only be charged one shipping fee per order, even if they order more than one of this item."))); return (m.createElement('div', { className: "_4qx _2pid" }, ca, m.createElement('table', { className: "_b40" }, m.createElement('tbody', null, x)), m.createElement('div', { className: "_2pic _2pir" }, y))); }, _getDefaultShippingOption: function () { return { shipping_country: 'US', shipping_price_currency: this.props.currencyCode, shipping_price_value: 0, shipping_service: null }; }, _onShippingNameChange: function (v, w) { var x = this.props.shippingOptions; x[v].shipping_service = w; this.props.onShippingOptionsChange(x); }, _onShippingPriceChange: function (v, w) { var x = this.props.shippingOptions; x[v].shipping_price_value = w; this.props.onShippingOptionsChange(x); }, _onAddNewOption: function () { var v = this.props.shippingOptions; v[v.length] = this._getDefaultShippingOption(); this.props.onShippingOptionsChange(v); }, _onRemoveShippingOption: function (v) { var w = this.props.shippingOptions; w.splice(v, 1); this.props.onShippingOptionsChange(w); var x = v > 0 ? v - 1 : 0; this.refs[x].focusInput(); } }); f.exports = u; }, null);
__d('PageProductComposerTaxCategorySelector.react', ['BUIFormSelector.react', 'CommerceSelfServeProductTaxCategories', 'HelpLink.react', 'React', 'XUIGrayText.react', 'cx', 'fbt', 'forEachObject', 'invariant'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var q = h.Option, r = k.PropTypes, s = k.createClass({ displayName: 'PageProductComposerTaxCategorySelector', propTypes: { onTaxCategoryChange: r.func, taxCategory: r.number }, getDefaultProps: function () { return { taxCategory: i.TAX_ITEM_CODE_COMMERCE_OTHERS }; }, render: function () { var t = []; o(i, (function (u, v) { if (u !== i.NONE && u !== i.TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION_BAD) t.push(k.createElement(q, { value: u, key: 'UNSPSC_' + u }, this._getTaxCategoryDescription(v))); }).bind(this)); return (k.createElement('div', { className: "_3-8y" }, k.createElement(l, { className: "_3-94", display: 'block', weight: 'bold', shade: 'dark', size: 'small' }, n._("Product Category"), k.createElement(j, { tooltip: this._getTaxCategoryHelpText(), alignv: 'bottom' })), k.createElement(h, { density: 'snug', onChange: this.props.onTaxCategoryChange, value: this.props.taxCategory }, t))); }, _getTaxCategoryHelpText: function () { return n._("This category is used to automatically calculate taxes for your product. You can enter a different tax rate using Custom Product Taxes in Advanced Options or in your Shop Settings."); }, _getTaxCategoryDescription: function (t) { !i.hasOwnProperty(t) ? p(0) : undefined; switch (i[t]) { case i.TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION: return n._("Sports and Recreation"); case i.TAX_ITEM_CODE_COMMERCE_CLOTHING: return n._("Clothing"); case i.TAX_ITEM_CODE_COMMERCE_SHOES: return n._("Shoes"); case i.TAX_ITEM_CODE_COMMERCE_LUGGAGE_BAGS: return n._("Luggage\/Bags"); case i.TAX_ITME_CODE_COMMERCE_PERSONAL_CARE: return n._("Personal Care"); case i.TAX_ITEM_CODE_COMMERCE_JEWELRY: return n._("Jewelry"); case i.TAX_ITEM_CODE_COMMERCE_WATCHES: return n._("Watches"); case i.TAX_ITEM_CODE_COMMERCE_OTHERS: return n._("Other physical goods"); default: p(0); } } }); f.exports = s; }, null);
__d('ProductVisibilitySelector.react', ['BUIFormSelector.react', 'ProductVisibility', 'React', 'fbt'], function a(b, c, d, e, f, g, h, i, j, k) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var l = h.Option, m = j.PropTypes, n = j.createClass({ displayName: 'ProductVisibilitySelector', propTypes: babelHelpers._extends({ onChange: m.func.isRequired, value: m.string.isRequired }, h.propTypes), render: function () { var o = this.props, p = o.onChange, q = o.value, r = babelHelpers.objectWithoutProperties(o, ['onChange', 'value']); return (j.createElement(h, babelHelpers._extends({ onChange: function (s) { return p(s.value); }, value: q }, r), j.createElement(l, { value: i.PUBLISHED }, k._("Public")), j.createElement(l, { value: i.STAGING }, k._("Unpublished")))); } }); f.exports = n; }, null);
__d("XPagesManagerFeaturedItemsCountController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/pages\/content_tab\/featured_items_count\/", {}); }, null);
__d("XPagesManagerProductCreateController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/pages\/content_tab\/products\/product_create\/", {}); }, null);
__d("XPagesManagerProductVariantsController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/pages\/content_tab\/product_variants\/", { product_group_id: { type: "String", required: true } }); }, null);
__d("XPagesManagerProductViewController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/pages\/content_tab\/product\/", { product_id: { type: "String", required: true } }); }, null);
__d("XPagesManagerSettingsController", ["XController"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); f.exports = c("XController").create("\/{page_token}\/settings\/", { edited: { type: "String" }, section: { type: "String" }, tab: { type: "String" }, change_admin_action: { type: "String" }, change_admin_uid: { type: "Int" }, tbid: { type: "Int" }, fid: { type: "Int" }, item_id: { type: "Int" }, ref: { type: "String" }, q: { type: "String" }, page_token: { type: "String", required: true }, business_id: { type: "Int" } }); }, null);
__d('PageProductComposerDialog.react', ['AdsCurrencyFormatter', 'AdsHelpLink.react', 'AsyncRequest', 'ActorURI', 'BOFSellerLogger', 'BOFSellerLoggerEvent', 'BOFSellerLoggingSources', 'BUIFormButton.react', 'CommerceExceptionHandlerMixin.react', 'CommerceSelfServeSection', 'CommerceSelfServeProductTaxCategories', 'CommerceSelfServeProductTaxRatesTable.react', 'CurrencyInput.atlas', 'FBToggleSwitch.react', 'HelpLink.react', 'InlineBlock.react', 'Image.react', 'Link.react', 'NumberInput.atlas', 'PageCommerceProductVariantPage.react', 'PageContentTabDispatcher', 'PageContentTabProductPhotoUploader.react', 'PagesManagerProductToolsConstants', 'PageProductActions', 'PageProductComposerShippingOptions.react', 'PageProductComposerTaxCategorySelector.react', 'ProductVisibility', 'ProductVisibilitySelector.react', 'React', 'ReactDOM', 'ReactLayeredComponentMixin', 'TextAreaWithLineLimit.react', 'URI', 'XCommerceSelfServeParam', 'XPagesManagerFeaturedItemsCountController', 'XPagesManagerProductCreateController', 'XPagesManagerProductVariantsController', 'XPagesManagerSettingsController', 'XPagesManagerProductViewController', 'XUIButton.react', 'XUIDialog.react', 'XUIDialogBody.react', 'XUIDialogButton.react', 'XUIDialogCancelButton.react', 'XUIDialogFooter.react', 'XUIDialogHeader.react', 'XUIDialogHeaderTitle.react', 'XUIDialogTitle.react', 'XUIError.react', 'XUIGrayText.react', 'XUINotice.react', 'XUISpinner.react', 'XUITextInput.react', 'areEqual', 'cx', 'fbglyph', 'fbt', 'getOwnObjectValues', 'ix', 'PageContentTabConstants'], function a(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ba, ca, da, ea, fa, ga, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, va, wa, xa, ya, za, ab, bb, cb, db, eb, fb, gb, hb, ib, jb, kb, lb, mb, nb, ob) { 'use strict'; if (c.__markCompiled) c.__markCompiled(); var pb = ja.PropTypes, qb = ob.TABS, rb = 500, sb = 3, tb = .5, ub = { main: 'main', variant: 'variant' }, vb = { edit: 'Edit', advanced: 'Advanced' }, wb = ja.createClass({ displayName: 'PageProductComposerDialog', mixins: [p, la], propTypes: { collectionID: pb.string, currencyCode: pb.string.isRequired, defaultShippingOptions: pb.array, onProductChanged: pb.func, onProductDeleted: pb.func, pageID: pb.string.isRequired, productID: pb.string, productGroupID: pb.string, requireDescription: pb.bool.isRequired, sections: pb.array.isRequired, shownInitially: pb.bool, source: pb.oneOf(mb(n)).isRequired }, getInitialState: function () { return { currentTabKey: vb.edit, currentPage: ub.main, dialogShown: this.props.shownInitially, errorTabs: [], featuredCount: 0, hasAttemptedSave: false, inventory: 1, loading: false, saving: false, photos: [], productDesc: '', productPrice: this._getDefaultPrice(), productTitle: '', productVisibility: ha.PUBLISHED, shareToTimeline: false, shippingOptions: this.props.defaultShippingOptions || [], taxCategory: r.TAX_ITEM_CODE_COMMERCE_OTHERS, taxRates: { state_abbr: {}, zip_code: {} }, showVariants: false, visibilityNotice: null, variants: [], variantItems: {} }; }, componentWillMount: function () { if (this.props.productID) this._fetchProductDetails(this.props.pageID, this.props.productID); if (this.props.productGroupID) this._fetchVariants(this.props.pageID, this.props.productGroupID); this._fetchFeaturedCount(this.props.pageID); }, componentDidMount: function () { var event = this.props.productID ? m.ACTN_EDIT_PRODUCT_CLICK : m.ACTN_ADD_PRODUCT_CLICK, xb = babelHelpers._extends({ source: this.props.source }, {}); if (this.props.productID) { xb.target_class = 'EntProdutItem'; xb.target_id = this.props.productID; } l.log(event, this.props.pageID, xb); }, componentWillReceiveProps: function (xb) { if (this.props.pageID !== xb.pageID || this.props.productID !== xb.productID || this.props.productGroupID !== xb.productGroupID) { this._fetchProductDetails(xb.pageID, xb.productID); this._fetchVariants(xb.pageID, xb.productGroupID); } }, _fetchFeaturedCount: function (xb) { this.setState({ loading: true }); var yb = k.create(pa.getURIBuilder().getURI(), xb); new j().setURI(yb).setHandler((function (zb) { var ac = this.state.featuredProduct, bc = zb.payload.featured_count; if (bc >= da.MAX_FEATURED_ITEM_COUNT) ac = false; this.setState({ loading: false, featuredCount: bc, featuredProduct: ac }); }).bind(this)).send(); }, _fetchProductDetails: function (xb, yb) { this.setState({ loading: true }); var zb = k.create(ta.getURIBuilder().setString(oa.PRODUCT_ID, yb).getURI(), xb); new j().setURI(zb).setHandler(this._onProductDetailsFetched).send(); }, _fetchVariants: function (xb, yb) { this.setState({ loading: true }); var zb = k.create(ra.getURIBuilder().setString('product_group_id', yb).getURI(), xb); new j().setURI(zb).setHandler((function (ac) { this._oldVariants = this._deepClone(ac.payload); var bc = ac.payload; bc.reviewedVariantData = this._deepClone(ac.payload); this.setState(bc); }).bind(this)).send(); }, _oldVariants: {}, _deepClone: function (xb) { return JSON.parse(JSON.stringify(xb)); }, onPhotosSelected: function (xb) { this.setState({ photos: this.state.photos.concat(xb) }); }, onPhotoRemoved: function (xb) { this.setState({ photos: this.state.photos.filter(function (yb) { return yb.fbid !== xb.fbid; }) }); }, onPhotoEdited: function (xb, yb) { var zb = this.state.photos.findIndex(function (bc) { return bc.fbid === xb; }); if (zb !== undefined) { l.log(m.ACTN_PHOTO_EDITED, this.props.pageID, { target_class: 'Photo', target_id: yb.fbid }); var ac = this.state.photos.slice(); ac[zb] = yb; this.setState({ photos: ac }); } }, renderLayers: function () { if (!this.state.dialogShown) return {}; var xb = []; if (this.hasFieldErrors()) xb.push(lb._("Your product can't be saved as is. Please check the product info, advanced options and variants and try again.")); if (this.hasGeneralError()) xb.push(this.getGeneralErrorMessage()); var yb = null; if (xb.length > 0) yb = ja.createElement('div', { className: "_2pib _2piq" }, this.renderErrorMessages(xb)); return { dialog: ja.createElement(va, { width: rb, causalElementRef: (function () { return this.refs.createButton; }).bind(this), onToggle: this._onToggleDialog, shown: this.state.dialogShown }, this._getDialogHeader(), ja.createElement(wa, { useCustomPadding: true }, this._getInnerContent()), yb, this._getDialogFooter()) }; }, _getDialogHeader: function () { switch (this.state.currentPage) { case ub.main: return (ja.createElement(ab, { activeTabKey: this.state.currentTabKey, onTabClick: this._handleTabChange }, this._getTabHeaders())); case ub.variant: return (ja.createElement(cb, null, this._getTitle())); }return ja.createElement('div', null); }, _getTabHeaders: function () { var xb = [ja.createElement(bb, { href: '#', key: vb.edit }, this._getTitle())]; if (this._showSection(q.TAX_TABLE)) xb.push(ja.createElement(bb, { href: '#', key: vb.advanced }, lb._("Advanced Options"))); return xb; }, _getTabBodies: function () { var xb = this.state.currentTabKey == vb.edit, yb = [ja.createElement('div', { className: xb ? "_2pi1" : "hidden_elem", key: 'basic_product_edit_tab' }, ja.createElement('div', { dangerouslySetInnerHTML: this.state.visibilityNotice }), ja.createElement(ca, { pageID: this.props.pageID, photoEditingEnabled: true, photos: this.state.photos, onPhotosSelected: this.onPhotosSelected, onPhotoRemoved: this.onPhotoRemoved, onPhotoEdited: this.onPhotoEdited }), this._getNamePriceDescriptionInputs(), this._getFeaturedToggleSwitch(), this._getShareToTimelineToggle(), ja.createElement('div', { className: "_4ktn" }, this._getInventoryInput(), this._getVariantsButton()), ja.createElement('div', { className: "_4ktn" }, this._getTaxCategorySelector(), this._getVisibilitySelector()), this._getShippingOptionsSection(), this._getEditWarning())]; if (this._showSection(q.TAX_TABLE)) yb.push(ja.createElement('div', { className: (xb ? "hidden_elem" : '') + (' ' + "_2pi1") + (' ' + "_5dz6"), key: 'advanced_product_edit_tab' }, this._getTaxTable())); return yb; }, _getMerchantSettingsURI: function () { return sa.getURIBuilder().setString('page_token', this.props.pageID).setString('tab', 'shop').getURI(); }, _getTaxTable: function () { return (ja.createElement('div', null, ja.createElement('div', { display: 'block', className: "_3-96" }, ja.createElement(eb, { weight: 'bold', shade: 'dark', size: 'medium' }, lb._("Custom Product Taxes")), ja.createElement(i, { width: 350, position: 'below' }, lb._("You can enter specific taxes for products taxed at special rates, such as some foods and beverages."))), ja.createElement(s, { taxRates: this.state.taxRates, onChangeTaxRates: this._onChangeTaxRates }), ja.createElement('div', { display: 'block', className: "_3-8x" }, ja.createElement(y, { href: this._getMerchantSettingsURI(), target: '_blank' }, lb._("View Default Shop Taxes"))))); }, _getInnerContent: function () { if (this.state.loading) return (ja.createElement(gb, { className: "_2_i8", size: 'large' })); switch (this.state.currentPage) { case ub.main: return (ja.createElement('div', null, this._getTabBodies())); case ub.variant: return (ja.createElement('div', null, ja.createElement('div', { className: "_1go" }, ja.createElement(w, { alignv: 'middle', className: "_1gp", onClick: this._onVariantsSaveButtonClicked }, ja.createElement(x, { src: nb("\/images\/assets_DO_NOT_HARDCODE\/fb_glyphs\/chevron-left_20_bluegray-40.png") })), ja.createElement(w, { alignv: 'middle', className: "_1gq" }, lb._("Variants"))), ja.createElement('div', { className: "_3-8j" }, ja.createElement(eb, { display: 'block' }, lb._("Variants are the different styles\u2014such as sizes, colors or materials\u2014that a product comes in."))), ja.createElement(aa, { currencyCode: this.props.currencyCode, defaultVariantPrice: this.state.productPrice, getPriceError: this._getPriceError, setVariantInfo: (function (xb) { return this.setState(xb); }).bind(this), variants: this.state.variants, variantItems: this.state.variantItems }))); }return ja.createElement('div', null); }, _backToMainPage: function () { this.setState({ currentPage: ub.main }); }, _getVariantsButton: function () { if (!this._showSection(q.VARIANTS)) return null; var xb = lb._("Variants are the different styles\u2014such as sizes, colors or materials\u2014that a product comes in."); return (ja.createElement('div', { className: "_3-8x" }, ja.createElement(eb, { weight: 'bold', shade: 'dark', size: 'small', display: 'block' }, lb._("Variants"), ja.createElement(v, { tooltip: xb, alignv: 'bottom' })), ja.createElement(o, { className: "_3-8w", density: 'snug', label: lb._("Edit Variants"), onClick: (function () { return this.setState({ currentPage: ub.variant }); }).bind(this) }))); }, _getDialogFooter: function () { switch (this.state.currentPage) { case ub.main: return this._getMainFooter(); case ub.variant: return this._getVariantsFooter(); }return null; }, _getMainFooter: function () { var xb = null; if (this.props.productID && !this.state.loading) xb = ja.createElement(y, { onClick: this.state.saving ? null : this._onDeleteProductClicked }, ja.createElement(eb, { shade: 'light', size: 'small' }, lb._("Delete Product"))); var yb = this.state.saving ? ja.createElement(gb, { size: 'small', className: "_3-90" }) : null; return (ja.createElement(za, { leftContent: xb }, yb, ja.createElement(ya, { disabled: this.state.saving || this.state.loading }), ja.createElement(xa, { use: 'confirm', label: this._getSaveButtonText(), action: 'button', disabled: this.state.saving || this.state.loading, onClick: this._onSubmitButtonClicked }))); }, _getVariantsFooter: function () { return (ja.createElement(za, null, ja.createElement(xa, { label: lb._("Cancel"), action: 'button', use: 'default', onClick: this._onVariantsCancelButtonClicked }), ja.createElement(xa, { label: lb._("Apply"), action: 'button', use: 'confirm', onClick: this._onVariantsSaveButtonClicked }))); }, _onVariantsCancelButtonClicked: function () { this.setState(this._deepClone(this._oldVariants)); this._backToMainPage(); }, _onVariantsSaveButtonClicked: function () { this._oldVariants = this._deepClone({ variants: this.state.variants, variantItems: this.state.variantItems }); this._backToMainPage(); }, show: function () { this.setState({ currentPage: ub.main, dialogShown: true }); }, hide: function () { this.setState({ dialogShown: false }); }, _onDeleteProductClicked: function () { ea.deleteProductsWithConfirmation(Array(this.props.productGroupID), this.props.pageID, (function () { this.hide(); if (this.props.onProductDeleted) this.props.onProductDeleted(); }).bind(this)); }, _getNamePriceDescriptionInputs: function () { var xb = null; if (this.props.requireDescription) { xb = lb._("Description"); } else xb = lb._("Description (Optional)"); var yb = null; if (this.state.variants.length === 0) { yb = ja.createElement(db, { xuiError: this.state.hasAttemptedSave || this._isPriceTooLowForSelfServe(this.state.productPrice) ? this._getPriceError(this.state.productPrice) : null }, ja.createElement(t, { className: "_5rpn _3-8n", currency: this.props.currencyCode, disabled: this.state.loading || this.state.variants.length > 0, onChange: (function (zb) { return this.setState({ productPrice: zb }); }).bind(this), value: this.state.productPrice })); } else yb = ja.createElement('div', { className: "_4kto _3-8n" }, ja.createElement(eb, { shade: 'light', size: 'medium', className: "_20ab" }, this.state.groupPriceRange), ja.createElement(y, { size: 'small', className: "_20ac _2pii", onClick: (function () { return this.setState({ currentPage: ub.variant }); }).bind(this) }, lb._("Edit Prices"))); return (ja.createElement('div', { className: "_2pi4" }, ja.createElement(hb, { name: 'productTitle', className: "_2mfs", disabled: this.state.loading, value: this.state.productTitle, height: 'tall', onChange: (function (event) { return this.setState({ productTitle: event.target.value }); }).bind(this), placeholder: lb._("Name"), xuiError: this.getFieldErrorMessage(oa.PRODUCT_TITLE) }), yb, ja.createElement(db, { xuiError: this.getFieldErrorMessage(oa.PRODUCT_DESCRIPTION) }, ja.createElement(ma, { name: 'productDescription', className: "_3jm", disabled: this.state.loading, rows: sb, value: this.state.productDesc, onChange: (function (zb) { return this.setState({ productDesc: zb }); }).bind(this), placeholder: xb })))); }, _getTaxCategorySelector: function () { if (!this._showSection(q.TAX_CATEGORY)) return null; var xb = this.state.taxCategory || r.TAX_ITEM_CODE_COMMERCE_OTHERS; if (xb === r.TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION_BAD) xb = r.TAX_ITEM_CODE_COMMERCE_SPORT_RECREATION; return (ja.createElement(ga, { onTaxCategoryChange: this._handleTaxCategoryChange, taxCategory: xb })); }, _getVisibilitySelector: function () { if (!this._showSection(q.PRODUCT_VISIBILITY)) return null; return (ja.createElement('div', null, ja.createElement(eb, { className: "_3-94 _3-8y", display: 'block', weight: 'bold', shade: 'dark', size: 'small' }, lb._("Visibility")), ja.createElement(ia, { onChange: (function (xb) { return this.setState({ productVisibility: xb }); }).bind(this), value: this.state.productVisibility }))); }, _getInventoryInput: function () { if (!this._showSection(q.INVENTORY)) return null; var xb = null; if (this.state.variants.length === 0) { xb = ja.createElement(z, { className: "_2pio", disabled: this.state.loading, isZeroValidValue: true, name: 'productInventory', nonnegative: true, value: this.state.inventory, formatNumber: false, onValueUpdated: (function (ac) { return this.setState({ inventory: ac }); }).bind(this) }); } else { var yb = 0; for (var zb in this.state.variantItems) yb += this.state.variantItems[zb].inventory; xb = ja.createElement('div', { className: "_4kto" }, ja.createElement('div', { className: "_4ktu" }, ja.createElement(eb, { shade: 'light', size: 'medium' }, yb)), ja.createElement(y, { size: 'small', className: "_20ac _2pii", onClick: (function () { return this.setState({ currentPage: ub.variant }); }).bind(this) }, lb._("Edit Inventory"))); } return (ja.createElement('div', null, ja.createElement(eb, { className: "_3-94 _3-8y", display: 'block', weight: 'bold', shade: 'dark', size: 'small' }, lb._("Inventory")), xb)); }, _getShippingOptionsSection: function () { if (!this._showSection(q.SHIPPING_OPTIONS)) return null; return (ja.createElement(fa, { currencyCode: this.props.currencyCode, disabled: this.state.loading, shippingOptions: this.state.shippingOptions, settingsURI: this.props.productID ? undefined : this._getMerchantSettingsURI(), onShippingOptionsChange: (function (xb) { return this.setState({ shippingOptions: xb }); }).bind(this) })); }, _getShareToTimelineToggle: function () { if (this.props.productID) return null; return (ja.createElement('div', { className: "_3-8y" }, ja.createElement(u, { disabled: this.state.loading, animate: true, checked: this.state.shareToTimeline, onToggle: (function (xb) { return this.setState({ shareToTimeline: xb }); }).bind(this) }), ja.createElement('span', { className: "_3jn" }, lb._("Share to Timeline"), ja.createElement(v, { tooltip: lb._("Turning this on will automatically post your product to your Page's timeline. This will only happen after your product is approved."), alignv: 'bottom' })))); }, _unpackTaxRates: function () { var xb = [], yb = {}, zb = {}; for (var ac in this.state.taxRates) { var bc = this.state.taxRates[ac]; for (var cc in bc) { xb[xb.length] = cc; yb[cc] = bc[cc].tax_rate; zb[cc] = bc[cc].is_applied_to_shipping; } } return { tax_locations: xb, tax_percent_map: yb, tax_applied_to_shipping_map: zb }; }, _getFeaturedToggleSwitch: function () { if (!this._showSection(q.FEATURED_PRODUCT_TOGGLE)) return null; return (ja.createElement('div', { className: "_3-96" }, ja.createElement(u, { disabled: this.state.loading || this._isFeatureProductToggleDisabled(), animate: true, checked: this.state.featuredProduct, onToggle: (function (xb) { return this.setState({ featuredProduct: xb }); }).bind(this) }), ja.createElement('span', { className: "_3jn" }, lb._("Feature this product"), ja.createElement(v, { tooltip: this._getHelpText(), alignv: 'bottom' })))); }, _isFeatureProductToggleDisabled: function () { return (!this.state.featuredProduct && this.state.featuredCount >= da.MAX_FEATURED_ITEM_COUNT); }, _getHelpText: function () { if (this._isFeatureProductToggleDisabled()) return lb._({ "*": "You've already chosen {Maximum number of products that can be featured} to feature. Stop featuring one of your currently selected products to feature this one instead." }, [lb.param('Maximum number of products that can be featured', da.MAX_FEATURED_ITEM_COUNT, [0])]); return lb._({ "*": "You can feature up to {Maximum number of products that can be featured} products. Featured products are shown on your page when people visit, and at the top of your shop section." }, [lb.param('Maximum number of products that can be featured', da.MAX_FEATURED_ITEM_COUNT, [0])]); }, _getTitle: function () { if (this.state.currentPage === ub.variant) return lb._("Edit Variants"); if (this.props.productID) return lb._("Edit Product"); return lb._("Add Product"); }, _getSaveButtonText: function () { return lb._("Save"); }, _getReviewableFields: function () { return ['productTitle', 'productDesc', 'photos']; }, _onProductDetailsFetched: function (xb) { var yb = xb.payload, zb = yb.visibility_notice === null ? null : yb.visibility_notice.markup; this.setState({ currentTabKey: vb.edit, currentPage: ub.main, dialogShown: true, productTitle: yb.name, productDesc: yb.description, productPrice: yb.price / 100, productVisibility: yb.visibility, photos: yb.images, featuredProduct: yb.featured_product, groupPriceRange: yb.group_price_range, inventory: yb.inventory, reviewableFieldData: { productTitle: yb.name, productDesc: yb.description, photos: yb.images }, shippingOptions: yb.shipping_options, taxCategory: yb.tax_category, showVariants: yb.show_variants, visibilityNotice: zb, loading: false, featuredCount: yb.featured_count, taxRates: yb.tax_rates }); }, _onToggleDialog: function (xb) { this.setState({ dialogShown: xb }); if (xb) return; var yb = babelHelpers._extends({ source: this.props.source }, {}), event = m.ACTN_CANCEL_ADD_PRODUCT; if (this.props.productID) { yb.target_class = 'EntProdutItem'; yb.target_id = this.props.productID; event = m.ACTN_CANCEL_EDIT_PRODUCT; } l.log(event, this.props.pageID, yb); ka.unmountComponentAtNode(ka.findDOMNode(this).parentNode); }, _getPriceError: function (xb) { if (this._isPriceTooLowForSelfServe(xb)) { var yb = h.formatCurrency('USD', tb * 100); return lb._("Price must be at least {Minimum Product Price}", [lb.param('Minimum Product Price', yb)]); } else if (this.state.productPrice === null) return lb._("Please enter a price"); return null; }, _getEditWarning: function () { if (!this.props.productID || this.state.visibilityNotice) return null; var xb = this.state, yb = xb.reviewableFieldData, zb = this._getReviewableFields(), ac = false; for (var bc = 0; bc < zb.length; bc++) { var cc = zb[bc]; if (!ib(yb[cc], xb[cc])) { ac = true; break; } } if (ac || !ib(xb.reviewedVariantData, { variants: xb.variants, variantItems: xb.variantItems })) return (ja.createElement(fb, { size: 'small', className: "_3-8y" }, lb._("This product is visible in your shop. If you edit this product, it won't be visible in your shop until the changes are reviewed."))); return null; }, _handleTabChange: function (xb) { this.setState({ currentTabKey: xb }); }, _handleTaxCategoryChange: function (xb) { this.setState({ taxCategory: xb.value }); }, _validatePrices: function () { var xb = this.state.variants, yb = this.state.variantItems; if (!xb || xb.length === 0) { if (this._getPriceError(this.state.productPrice)) { this._navigateToTab(vb.edit); return false; } return true; } for (var zb in this.state.variantItems) if (yb[zb].price < tb) { this._navigateToTab(ub.variant); return false; } return true; }, _getDefaultPrice: function () { if (this._showSection(q.MINIMUM_PRICE_ERROR) && !this.props.productID) return 1; return null; }, _isPriceTooLowForSelfServe: function (xb) { return this._showSection(q.MINIMUM_PRICE_ERROR) && (!xb || xb < tb); }, _onSubmitButtonClicked: function () { this.setState({ saving: true, hasAttemptedSave: true }); if (!this._validatePrices()) { this.setState({ saving: false }); return; } var xb = []; this.state.photos.forEach(function (pc) { xb.push(pc.fbid); }); var yb = this.state.shippingOptions.filter(function (pc) { return pc.shipping_service && !!pc.shipping_service.trim(); }); this.setState({ shippingOptions: yb }); var zb = [], ac = []; yb.forEach(function (pc) { zb.push(pc.shipping_service); ac.push(Math.round(pc.shipping_price_value)); }); var bc = this._unpackTaxRates(), cc = this.state.variants, dc = cc.map(function (pc) { return pc.label; }), ec = cc.map(function (pc) { return pc.options; }), fc = this.state.variantItems, gc = {}, hc = {}, ic = {}, jc = {}; for (var kc in fc) { var lc = fc[kc]; gc[kc] = lc.inventory; hc[kc] = Math.round(lc.price * 100); ic[kc] = JSON.stringify(lc.properties); jc[kc] = lc.productID; } var mc = {}; mc[oa.PRODUCT_TITLE] = this.state.productTitle; mc[oa.PRODUCT_DESCRIPTION] = this.state.productDesc; mc[oa.PRODUCT_PRICE] = Math.round(this.state.productPrice * 100); mc[oa.COLLECTION_ID] = this.props.collectionID; mc[oa.CURRENCY_CODE] = this.props.currencyCode; mc[oa.PRODUCT_PHOTO_IDS] = xb; mc[oa.PRODUCT_ID] = this.props.productID; mc[oa.FEATURED_PRODUCT] = this.state.featuredProduct; mc[oa.SHARE_TO_TIMELINE] = this.state.shareToTimeline; mc[oa.INVENTORY] = this.state.inventory; mc[oa.SHIPPING_OPTION_NAMES] = zb; mc[oa.SHIPPING_OPTION_VALUES] = ac; mc[oa.TAX_CATEGORY] = this.state.taxCategory; mc[oa.TAX_LOCATIONS] = bc.tax_locations; mc[oa.TAX_APPLIED_TO_SHIPPING_MAP] = bc.tax_applied_to_shipping_map; mc[oa.TAX_PERCENT_MAP] = bc.tax_percent_map; mc[oa.VARIANT_NAMES] = dc; mc[oa.VARIANT_INVENTORY] = gc; mc[oa.VARIANT_PRICE] = hc; mc[oa.VARIANT_DATA] = ic; mc[oa.VARIANT_PRODUCT_ID] = jc; mc[oa.VISIBILITY] = this.state.productVisibility; for (var nc = 0; nc < ec.length; nc++)mc['variant' + nc + '_options'] = ec[nc]; var oc = k.create(qa.getURIBuilder().getURI(), this.props.pageID); this.sendAsync(oc, mc, this._onProductUpdated, (function () { return this.setState({ saving: false }); }).bind(this)); }, _navigateToTab: function (xb) { switch (xb) { case ub.variant: this.setState({ currentPage: ub.variant }); break; case vb.edit: this.setState({ currentTabKey: vb.edit }); break; case vb.advanced: this.setState({ currentTabKey: vb.advanced }); break; } }, _onChangeTaxRates: function (xb) { this.setState({ taxRates: xb }); }, _onProductUpdated: function (xb) { this.setState({ saving: false, dialogShown: false }); if (this.props.productID) { ba.handlePostChanged(xb.payload); } else ba.handlePostCreated(qb.COMMERCE_PRODUCTS, xb.payload, this.props.pageID); if (this.props.onProductChanged) this.props.onProductChanged(xb.payload); ka.unmountComponentAtNode(ka.findDOMNode(this).parentNode); }, render: function () { return ja.createElement('span', null); }, _showSection: function (xb) { return this.props.sections.indexOf(xb) >= 0; } }); f.exports = wb; }, null);
__d("CodeMirror4ModeCss", ["CodeMirror4"], function a(b, c, d, e, f, g) { c.__markCompiled && c.__markCompiled(); var h = c('CodeMirror4'); "use strict"; h.defineMode("css", function (aa, ba) { if (!ba.propertyKeywords) ba = h.resolveMode("text/css"); var ca = aa.indentUnit, da = ba.tokenHooks, ea = ba.mediaTypes || {}, fa = ba.mediaFeatures || {}, ga = ba.propertyKeywords || {}, ha = ba.nonStandardPropertyKeywords || {}, ia = ba.colorKeywords || {}, ja = ba.valueKeywords || {}, ka = ba.fontProperties || {}, la = ba.allowNested, ma, na; function oa(za, ab) { ma = ab; return za; } function pa(za, ab) { var bb = za.next(); if (da[bb]) { var cb = da[bb](za, ab); if (cb !== false) return cb; } if (bb == "@") { za.eatWhile(/[\w\\\-]/); return oa("def", za.current()); } else if (bb == "=" || (bb == "~" || bb == "|") && za.eat("=")) { return oa(null, "compare"); } else if (bb == "\"" || bb == "'") { ab.tokenize = qa(bb); return ab.tokenize(za, ab); } else if (bb == "#") { za.eatWhile(/[\w\\\-]/); return oa("atom", "hash"); } else if (bb == "!") { za.match(/^\s*\w*/); return oa("keyword", "important"); } else if (/\d/.test(bb) || bb == "." && za.eat(/\d/)) { za.eatWhile(/[\w.%]/); return oa("number", "unit"); } else if (bb === "-") { if (/[\d.]/.test(za.peek())) { za.eatWhile(/[\w.%]/); return oa("number", "unit"); } else if (za.match(/^\w+-/)) return oa("meta", "meta"); } else if (/[,+>*\/]/.test(bb)) { return oa(null, "select-op"); } else if (bb == "." && za.match(/^-?[_a-z][_a-z0-9-]*/i)) { return oa("qualifier", "qualifier"); } else if (/[:;{}\[\]\(\)]/.test(bb)) { return oa(null, bb); } else if (bb == "u" && za.match("rl(")) { za.backUp(1); ab.tokenize = ra; return oa("property", "word"); } else if (/[\w\\\-]/.test(bb)) { za.eatWhile(/[\w\\\-]/); return oa("property", "word"); } else return oa(null, null); } function qa(za) { return function (ab, bb) { var cb = false, db; while ((db = ab.next()) != null) { if (db == za && !cb) { if (za == ")") ab.backUp(1); break; } cb = !cb && db == "\\"; } if (db == za || !cb && za != ")") bb.tokenize = null; return oa("string", "string"); }; } function ra(za, ab) { za.next(); if (!za.match(/\s*[\"\')]/, false)) { ab.tokenize = qa(")"); } else ab.tokenize = null; return oa(null, "("); } function sa(za, ab, bb) { this.type = za; this.indent = ab; this.prev = bb; } function ta(za, ab, bb) { za.context = new sa(bb, ab.indentation() + ca, za.context); return bb; } function ua(za) { za.context = za.context.prev; return za.context.type; } function va(za, ab, bb) { return ya[bb.context.type](za, ab, bb); } function wa(za, ab, bb, cb) { for (var db = cb || 1; db > 0; db--)bb.context = bb.context.prev; return va(za, ab, bb); } function xa(za) { var ab = za.current().toLowerCase(); if (ja.hasOwnProperty(ab)) { na = "atom"; } else if (ia.hasOwnProperty(ab)) { na = "keyword"; } else na = "variable"; } var ya = {}; ya.top = function (za, ab, bb) { if (za == "{") { return ta(bb, ab, "block"); } else if (za == "}" && bb.context.prev) { return ua(bb); } else if (za == "@media") { return ta(bb, ab, "media"); } else if (za == "@font-face") { return "font_face_before"; } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/.test(za)) { return "keyframes"; } else if (za && za.charAt(0) == "@") { return ta(bb, ab, "at"); } else if (za == "hash") { na = "builtin"; } else if (za == "word") { na = "tag"; } else if (za == "variable-definition") { return "maybeprop"; } else if (za == "interpolation") { return ta(bb, ab, "interpolation"); } else if (za == ":") { return "pseudo"; } else if (la && za == "(") return ta(bb, ab, "parens"); return bb.context.type; }; ya.block = function (za, ab, bb) { if (za == "word") { var cb = ab.current().toLowerCase(); if (ga.hasOwnProperty(cb)) { na = "property"; return "maybeprop"; } else if (ha.hasOwnProperty(cb)) { na = "string-2"; return "maybeprop"; } else if (la) { na = ab.match(/^\s*:/, false) ? "property" : "tag"; return "block"; } else { na += " error"; return "maybeprop"; } } else if (za == "meta") { return "block"; } else if (!la && (za == "hash" || za == "qualifier")) { na = "error"; return "block"; } else return ya.top(za, ab, bb); }; ya.maybeprop = function (za, ab, bb) { if (za == ":") return ta(bb, ab, "prop"); return va(za, ab, bb); }; ya.prop = function (za, ab, bb) { if (za == ";") return ua(bb); if (za == "{" && la) return ta(bb, ab, "propBlock"); if (za == "}" || za == "{") return wa(za, ab, bb); if (za == "(") return ta(bb, ab, "parens"); if (za == "hash" && !/^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(ab.current())) { na += " error"; } else if (za == "word") { xa(ab); } else if (za == "interpolation") return ta(bb, ab, "interpolation"); return "prop"; }; ya.propBlock = function (za, ab, bb) { if (za == "}") return ua(bb); if (za == "word") { na = "property"; return "maybeprop"; } return bb.context.type; }; ya.parens = function (za, ab, bb) { if (za == "{" || za == "}") return wa(za, ab, bb); if (za == ")") return ua(bb); if (za == "(") return ta(bb, ab, "parens"); if (za == "word") xa(ab); return "parens"; }; ya.pseudo = function (za, ab, bb) { if (za == "word") { na = "variable-3"; return bb.context.type; } return va(za, ab, bb); }; ya.media = function (za, ab, bb) { if (za == "(") return ta(bb, ab, "media_parens"); if (za == "}") return wa(za, ab, bb); if (za == "{") return ua(bb) && ta(bb, ab, la ? "block" : "top"); if (za == "word") { var cb = ab.current().toLowerCase(); if (cb == "only" || cb == "not" || cb == "and") { na = "keyword"; } else if (ea.hasOwnProperty(cb)) { na = "attribute"; } else if (fa.hasOwnProperty(cb)) { na = "property"; } else na = "error"; } return bb.context.type; }; ya.media_parens = function (za, ab, bb) { if (za == ")") return ua(bb); if (za == "{" || za == "}") return wa(za, ab, bb, 2); return ya.media(za, ab, bb); }; ya.font_face_before = function (za, ab, bb) { if (za == "{") return ta(bb, ab, "font_face"); return va(za, ab, bb); }; ya.font_face = function (za, ab, bb) { if (za == "}") return ua(bb); if (za == "word") { if (!ka.hasOwnProperty(ab.current().toLowerCase())) { na = "error"; } else na = "property"; return "maybeprop"; } return "font_face"; }; ya.keyframes = function (za, ab, bb) { if (za == "word") { na = "variable"; return "keyframes"; } if (za == "{") return ta(bb, ab, "top"); return va(za, ab, bb); }; ya.at = function (za, ab, bb) { if (za == ";") return ua(bb); if (za == "{" || za == "}") return wa(za, ab, bb); if (za == "word") { na = "tag"; } else if (za == "hash") na = "builtin"; return "at"; }; ya.interpolation = function (za, ab, bb) { if (za == "}") return ua(bb); if (za == "{" || za == ";") return wa(za, ab, bb); if (za != "variable") na = "error"; return "interpolation"; }; return { startState: function (za) { return { tokenize: null, state: "top", context: new sa("top", za || 0, null) }; }, token: function (za, ab) { if (!ab.tokenize && za.eatSpace()) return null; var bb = (ab.tokenize || pa)(za, ab); if (bb && typeof bb == "object") { ma = bb[1]; bb = bb[0]; } na = bb; ab.state = ya[ab.state](ma, za, ab); return na; }, indent: function (za, ab) { var bb = za.context, cb = ab && ab.charAt(0), db = bb.indent; if (bb.type == "prop" && (cb == "}" || cb == ")")) bb = bb.prev; if (bb.prev && (cb == "}" && (bb.type == "block" || bb.type == "top" || bb.type == "interpolation" || bb.type == "font_face") || cb == ")" && (bb.type == "parens" || bb.type == "media_parens") || cb == "{" && (bb.type == "at" || bb.type == "media"))) { db = bb.indent - ca; bb = bb.prev; } return db; }, electricChars: "}", blockCommentStart: "/*", blockCommentEnd: "*/", fold: "brace" }; }); function i(aa) { var ba = {}; for (var ca = 0; ca < aa.length; ++ca)ba[aa[ca]] = true; return ba; } var j = ["all", "aural", "braille", "handheld", "print", "projection", "screen", "tty", "tv", "embossed"], k = i(j), l = ["width", "min-width", "max-width", "height", "min-height", "max-height", "device-width", "min-device-width", "max-device-width", "device-height", "min-device-height", "max-device-height", "aspect-ratio", "min-aspect-ratio", "max-aspect-ratio", "device-aspect-ratio", "min-device-aspect-ratio", "max-device-aspect-ratio", "color", "min-color", "max-color", "color-index", "min-color-index", "max-color-index", "monochrome", "min-monochrome", "max-monochrome", "resolution", "min-resolution", "max-resolution", "scan", "grid"], m = i(l), n = ["align-content", "align-items", "align-self", "alignment-adjust", "alignment-baseline", "anchor-point", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "appearance", "azimuth", "backface-visibility", "background", "background-attachment", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "baseline-shift", "binding", "bleed", "bookmark-label", "bookmark-level", "bookmark-state", "bookmark-target", "border", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "clear", "clip", "color", "color-profile", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "content", "counter-increment", "counter-reset", "crop", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "dominant-baseline", "drop-initial-after-adjust", "drop-initial-after-align", "drop-initial-before-adjust", "drop-initial-before-align", "drop-initial-size", "drop-initial-value", "elevation", "empty-cells", "fit", "fit-position", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "float-offset", "flow-from", "flow-into", "font", "font-feature-settings", "font-family", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-alternates", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-weight", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-position", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "inline-box-align", "justify-content", "left", "letter-spacing", "line-break", "line-height", "line-stacking", "line-stacking-ruby", "line-stacking-shift", "line-stacking-strategy", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "marker-offset", "marks", "marquee-direction", "marquee-loop", "marquee-play-count", "marquee-speed", "marquee-style", "max-height", "max-width", "min-height", "min-width", "move-to", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-style", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "page", "page-break-after", "page-break-before", "page-break-inside", "page-policy", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pitch", "pitch-range", "play-during", "position", "presentation-level", "punctuation-trim", "quotes", "region-break-after", "region-break-before", "region-break-inside", "region-fragment", "rendering-intent", "resize", "rest", "rest-after", "rest-before", "richness", "right", "rotation", "rotation-point", "ruby-align", "ruby-overhang", "ruby-position", "ruby-span", "shape-image-threshold", "shape-inside", "shape-margin", "shape-outside", "size", "speak", "speak-as", "speak-header", "speak-numeral", "speak-punctuation", "speech-rate", "stress", "string-set", "tab-size", "table-layout", "target", "target-name", "target-new", "target-position", "text-align", "text-align-last", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-skip", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-height", "text-indent", "text-justify", "text-outline", "text-overflow", "text-shadow", "text-size-adjust", "text-space-collapse", "text-transform", "text-underline-position", "text-wrap", "top", "transform", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "widows", "width", "word-break", "word-spacing", "word-wrap", "z-index", "clip-path", "clip-rule", "mask", "enable-background", "filter", "flood-color", "flood-opacity", "lighting-color", "stop-color", "stop-opacity", "pointer-events", "color-interpolation", "color-interpolation-filters", "color-rendering", "fill", "fill-opacity", "fill-rule", "image-rendering", "marker", "marker-end", "marker-mid", "marker-start", "shape-rendering", "stroke", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-rendering", "baseline-shift", "dominant-baseline", "glyph-orientation-horizontal", "glyph-orientation-vertical", "text-anchor", "writing-mode"], o = i(n), p = ["scrollbar-arrow-color", "scrollbar-base-color", "scrollbar-dark-shadow-color", "scrollbar-face-color", "scrollbar-highlight-color", "scrollbar-shadow-color", "scrollbar-3d-light-color", "scrollbar-track-color", "shape-inside", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "zoom"], q = i(p), r = ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"], s = i(r), t = ["above", "absolute", "activeborder", "activecaption", "afar", "after-white-space", "ahead", "alias", "all", "all-scroll", "alternate", "always", "amharic", "amharic-abegede", "antialiased", "appworkspace", "arabic-indic", "armenian", "asterisks", "auto", "avoid", "avoid-column", "avoid-page", "avoid-region", "background", "backwards", "baseline", "below", "bidi-override", "binary", "bengali", "blink", "block", "block-axis", "bold", "bolder", "border", "border-box", "both", "bottom", "break", "break-all", "break-word", "button", "button-bevel", "buttonface", "buttonhighlight", "buttonshadow", "buttontext", "cambodian", "capitalize", "caps-lock-indicator", "caption", "captiontext", "caret", "cell", "center", "checkbox", "circle", "cjk-earthly-branch", "cjk-heavenly-stem", "cjk-ideographic", "clear", "clip", "close-quote", "col-resize", "collapse", "column", "compact", "condensed", "contain", "content", "content-box", "context-menu", "continuous", "copy", "cover", "crop", "cross", "crosshair", "currentcolor", "cursive", "dashed", "decimal", "decimal-leading-zero", "default", "default-button", "destination-atop", "destination-in", "destination-out", "destination-over", "devanagari", "disc", "discard", "document", "dot-dash", "dot-dot-dash", "dotted", "double", "down", "e-resize", "ease", "ease-in", "ease-in-out", "ease-out", "element", "ellipse", "ellipsis", "embed", "end", "ethiopic", "ethiopic-abegede", "ethiopic-abegede-am-et", "ethiopic-abegede-gez", "ethiopic-abegede-ti-er", "ethiopic-abegede-ti-et", "ethiopic-halehame-aa-er", "ethiopic-halehame-aa-et", "ethiopic-halehame-am-et", "ethiopic-halehame-gez", "ethiopic-halehame-om-et", "ethiopic-halehame-sid-et", "ethiopic-halehame-so-et", "ethiopic-halehame-ti-er", "ethiopic-halehame-ti-et", "ethiopic-halehame-tig", "ew-resize", "expanded", "extra-condensed", "extra-expanded", "fantasy", "fast", "fill", "fixed", "flat", "footnotes", "forwards", "from", "geometricPrecision", "georgian", "graytext", "groove", "gujarati", "gurmukhi", "hand", "hangul", "hangul-consonant", "hebrew", "help", "hidden", "hide", "higher", "highlight", "highlighttext", "hiragana", "hiragana-iroha", "horizontal", "hsl", "hsla", "icon", "ignore", "inactiveborder", "inactivecaption", "inactivecaptiontext", "infinite", "infobackground", "infotext", "inherit", "initial", "inline", "inline-axis", "inline-block", "inline-table", "inset", "inside", "intrinsic", "invert", "italic", "justify", "kannada", "katakana", "katakana-iroha", "keep-all", "khmer", "landscape", "lao", "large", "larger", "left", "level", "lighter", "line-through", "linear", "lines", "list-item", "listbox", "listitem", "local", "logical", "loud", "lower", "lower-alpha", "lower-armenian", "lower-greek", "lower-hexadecimal", "lower-latin", "lower-norwegian", "lower-roman", "lowercase", "ltr", "malayalam", "match", "media-controls-background", "media-current-time-display", "media-fullscreen-button", "media-mute-button", "media-play-button", "media-return-to-realtime-button", "media-rewind-button", "media-seek-back-button", "media-seek-forward-button", "media-slider", "media-sliderthumb", "media-time-remaining-display", "media-volume-slider", "media-volume-slider-container", "media-volume-sliderthumb", "medium", "menu", "menulist", "menulist-button", "menulist-text", "menulist-textfield", "menutext", "message-box", "middle", "min-intrinsic", "mix", "mongolian", "monospace", "move", "multiple", "myanmar", "n-resize", "narrower", "ne-resize", "nesw-resize", "no-close-quote", "no-drop", "no-open-quote", "no-repeat", "none", "normal", "not-allowed", "nowrap", "ns-resize", "nw-resize", "nwse-resize", "oblique", "octal", "open-quote", "optimizeLegibility", "optimizeSpeed", "oriya", "oromo", "outset", "outside", "outside-shape", "overlay", "overline", "padding", "padding-box", "painted", "page", "paused", "persian", "plus-darker", "plus-lighter", "pointer", "polygon", "portrait", "pre", "pre-line", "pre-wrap", "preserve-3d", "progress", "push-button", "radio", "read-only", "read-write", "read-write-plaintext-only", "rectangle", "region", "relative", "repeat", "repeat-x", "repeat-y", "reset", "reverse", "rgb", "rgba", "ridge", "right", "round", "row-resize", "rtl", "run-in", "running", "s-resize", "sans-serif", "scroll", "scrollbar", "se-resize", "searchfield", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "semi-condensed", "semi-expanded", "separate", "serif", "show", "sidama", "single", "skip-white-space", "slide", "slider-horizontal", "slider-vertical", "sliderthumb-horizontal", "sliderthumb-vertical", "slow", "small", "small-caps", "small-caption", "smaller", "solid", "somali", "source-atop", "source-in", "source-out", "source-over", "space", "square", "square-button", "start", "static", "status-bar", "stretch", "stroke", "sub", "subpixel-antialiased", "super", "sw-resize", "table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row", "table-row-group", "telugu", "text", "text-bottom", "text-top", "textarea", "textfield", "thai", "thick", "thin", "threeddarkshadow", "threedface", "threedhighlight", "threedlightshadow", "threedshadow", "tibetan", "tigre", "tigrinya-er", "tigrinya-er-abegede", "tigrinya-et", "tigrinya-et-abegede", "to", "top", "transparent", "ultra-condensed", "ultra-expanded", "underline", "up", "upper-alpha", "upper-armenian", "upper-greek", "upper-hexadecimal", "upper-latin", "upper-norwegian", "upper-roman", "uppercase", "urdu", "url", "vertical", "vertical-text", "visible", "visibleFill", "visiblePainted", "visibleStroke", "visual", "w-resize", "wait", "wave", "wider", "window", "windowframe", "windowtext", "x-large", "x-small", "xor", "xx-large", "xx-small"], u = i(t), v = ["font-family", "src", "unicode-range", "font-variant", "font-feature-settings", "font-stretch", "font-weight", "font-style"], w = i(v), x = j.concat(l).concat(n).concat(p).concat(r).concat(t); h.registerHelper("hintWords", "css", x); function y(aa, ba) { var ca = false, da; while ((da = aa.next()) != null) { if (ca && da == "/") { ba.tokenize = null; break; } ca = (da == "*"); } return ["comment", "comment"]; } function z(aa, ba) { if (aa.skipTo("-->")) { aa.match("-->"); ba.tokenize = null; } else aa.skipToEnd(); return ["comment", "comment"]; } h.defineMIME("text/css", { mediaTypes: k, mediaFeatures: m, propertyKeywords: o, nonStandardPropertyKeywords: q, colorKeywords: s, valueKeywords: u, fontProperties: w, tokenHooks: { "<": function (aa, ba) { if (!aa.match("!--")) return false; ba.tokenize = z; return z(aa, ba); }, "/": function (aa, ba) { if (!aa.eat("*")) return false; ba.tokenize = y; return y(aa, ba); } }, name: "css" }); h.defineMIME("text/x-scss", { mediaTypes: k, mediaFeatures: m, propertyKeywords: o, nonStandardPropertyKeywords: q, colorKeywords: s, valueKeywords: u, fontProperties: w, allowNested: true, tokenHooks: { "/": function (aa, ba) { if (aa.eat("/")) { aa.skipToEnd(); return ["comment", "comment"]; } else if (aa.eat("*")) { ba.tokenize = y; return y(aa, ba); } else return ["operator", "operator"]; }, ":": function (aa) { if (aa.match(/\s*\{/)) return [null, "{"]; return false; }, $: function (aa) { aa.match(/^[\w-]+/); if (aa.match(/^\s*:/, false)) return ["variable-2", "variable-definition"]; return ["variable-2", "variable"]; }, "#": function (aa) { if (!aa.eat("{")) return false; return [null, "interpolation"]; } }, name: "css", helperType: "scss" }); h.defineMIME("text/x-less", { mediaTypes: k, mediaFeatures: m, propertyKeywords: o, nonStandardPropertyKeywords: q, colorKeywords: s, valueKeywords: u, fontProperties: w, allowNested: true, tokenHooks: { "/": function (aa, ba) { if (aa.eat("/")) { aa.skipToEnd(); return ["comment", "comment"]; } else if (aa.eat("*")) { ba.tokenize = y; return y(aa, ba); } else return ["operator", "operator"]; }, "@": function (aa) { if (aa.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\b/, false)) return false; aa.eatWhile(/[\w\\\-]/); if (aa.match(/^\s*:/, false)) return ["variable-2", "variable-definition"]; return ["variable-2", "variable"]; }, "&": function () { return ["atom", "atom"]; } }, name: "css", helperType: "less" }); }, null);